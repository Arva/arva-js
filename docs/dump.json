[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/components/DataBoundScrollView.js",
    "memberof": null,
    "longname": "src/components/DataBoundScrollView.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n This Source Code is licensed under the MIT license. If a copy of the\n MIT-license was not distributed with this file, You can obtain one at:\n http://opensource.org/licenses/mit-license.html.\n\n @author: Hans van den Akker (mysim1)\n @license MIT\n @copyright Bizboard, 2015\n\n */\n\nimport sortBy                       from 'lodash/sortBy.js';\nimport findIndex                    from 'lodash/findIndex.js';\nimport {Throttler}                  from '../utils/Throttler.js';\nimport {combineOptions}             from '../utils/CombineOptions.js';\nimport {ReflowingScrollView}        from './ReflowingScrollView.js';\nimport Timer                        from 'famous/utilities/Timer.js';\n\n/**\n * A FlexScrollView with enhanced functionality for maintaining a two-way connection with a PrioritisedArray.\n */\nexport class DataBoundScrollView extends ReflowingScrollView {\n\n\n    /**\n     * Be sure to specifiy either a getSize function in the class of the itemTemplate, or to specify the size in the\n     * layoutOptions.\n     *\n     * @param {Object} options The options passed inherit from previous classes. Avoid using the dataSource option since\n     * the DataBoundScrollView creates its own dataSource from options.dataStore.\n     * @param {PrioriisedArray} [options.dataStore] The data that should be read to create entries.\n     * @param {Function} [options.itemTemplate] A function that returns a renderable representing each data item.\n     * @param {Function} [options.placeholderTemplate] A function that returns a renderable to display when there are\n     * no items present.\n     * @param {Function} [options.headerTemplate] A function that returns a renderable to display as a header.\n     * @param {Function} [options.orderBy] An ordering function that takes two data models (model1, model2).\n     * If it returns true, then model1 should go before model2.\n     * @param {Function} [options.groupBy] A function that takes a model and returns a value to group by. If set, then\n     * the groupTemplate option also needs to be set.\n     * @param {Function} [options.groupTemplate] A function that takes as a single argument the groupBy value and returns\n     * a renderable to insert before a group belonging to that value.\n     * @param {Boolean} [options.stickHeaders] If set to true, then the group headers will stick to the top when scrolling.\n     * Beware that this is slightly buggy as of now and might require some fine tuning to provide a better UX.\n     * @param {Function} [options.customInsertSpec] A function that takes as a single argument a model and returns a spec\n     * that is used when inserting a new item.\n     * @param {Boolean} [options.chatScrolling] If set to true, the scroll will remain at the bottom if at bottom already\n     * when new messages are added.\n     *\n     * If this function returns true, then model1 will be placed before model2.\n     *\n     */\n    constructor(options = {}) {\n        super(combineOptions({\n            scrollFriction: {\n                strength: 0.0015\n            },\n            autoPipeEvents: true,\n            throttleDelay: 0, /* If set to 0, no delay is added in between adding items to the DataBoundScrollView. */\n            dataSource: [],\n            sortingDirection: 'ascending',\n            flow: true,\n            flowOptions: {\n                spring: {               // spring-options used when transitioning between states\n                    dampingRatio: 0.8,  // spring damping ratio\n                    period: 1000        // duration of the animation\n                },\n                insertSpec: {           // render-spec used when inserting renderables\n                    opacity: 0          // start opacity is 0, causing a fade-in effect,\n                }\n            },\n            dataFilter: ()=> true,\n            ensureVisible: null,\n            layoutOptions: {\n                isSectionCallback: options.stickyHeaders ? function (renderNode) {\n                    return renderNode.groupId !== undefined;\n                } : undefined\n            },\n            chatScrolling: false\n        }, options));\n\n        this._internalDataSource = {};\n        this._internalGroups = {};\n        this._isGrouped = this.options.groupBy != null;\n        this._isDescending = this.options.sortingDirection === 'descending';\n        this._throttler = new Throttler(this.options.throttleDelay, true, this);\n        this._useCustomOrdering = !!this.options.orderBy;\n        /* If no orderBy method is set, or it is a string field name, we set our own ordering method. */\n        if (!this.options.orderBy || typeof this.options.orderBy === 'string') {\n            let fieldName = this.options.orderBy || 'id';\n            this.options.orderBy = function (currentChild, {model}) {\n                if (this._isDescending) {\n                    return currentChild[fieldName] > model[fieldName];\n                } else {\n                    return currentChild[fieldName] < model[fieldName];\n                }\n            }.bind(this);\n        }\n\n\n        /* If present in options.headerTemplate or options.placeholderTemplate, we build the header and placeholder elements. */\n        this._addHeader();\n        this._addPlaceholder();\n\n\n        if (this.options.dataStore) {\n            this._bindDataSource(this.options.dataStore);\n        }\n    }\n\n    /**\n     * Set a template function, optionally re-renders all the dataSource' renderables\n     * @param templateFunction\n     */\n    setItemTemplate(templateFunction = {}, reRender = false) {\n        this.options.itemTemplate = templateFunction;\n\n        if (reRender) {\n            this.clearDataSource();\n            this.reloadFilter(this.options.dataFilter);\n        }\n    }\n\n    /**\n     * Sets a group template function, optionally re-renders all the dataSource' renderables.\n     * @param templateFunction\n     * @param reRender\n     */\n    setGroupTemplate(templateFunction = {}, reRender = false) {\n        this.options.groupTemplate = templateFunction;\n\n        if (reRender) {\n            this.clearDataSource();\n            this.reloadFilter(this.options.dataFilter);\n        }\n    }\n\n    /**\n     * Sets the datastore to use. This will repopulate the view and remove any (if present) old items.\n     * @param dataStore\n     */\n    setDataStore(dataStore) {\n        if (this.options.dataStore) {\n            this.clearDataSource();\n        }\n        this.options.dataStore = dataStore;\n        this._bindDataSource(this.options.dataStore);\n    }\n\n    /**\n     * Gets the currently set dataStore.\n     * @returns {*}\n     */\n    getDataStore() {\n        return this.options.dataStore;\n    }\n\n    /**\n     * Reloads the dataFilter option of the DataBoundScrollView, and verifies whether the items in the dataStore are allowed by the new filter.\n     * It removes any currently visible items that aren't allowed anymore, and adds any non-visible ones that are allowed now.\n     * @param {Function} newFilter New filter function to verify item visibility with.\n     * @param {Boolean} reRender Boolean to rerender all childs that pass the filter function. Usefull when setting a new itemTemplate alongside reloading the filter\n     * @returns {Promise} Resolves when filter has been applied\n     */\n    reloadFilter(newFilter) {\n        this.options.dataFilter = newFilter;\n\n        let filterPromises = [];\n        for (let entry of this.options.dataStore || []) {\n            let alreadyExists = this._internalDataSource[entry.id] !== undefined;\n            let result = newFilter(entry);\n\n            if (result instanceof Promise) {\n                filterPromises.push(result);\n                result.then(function (shouldShow) {\n                    this._handleNewFilterResult(shouldShow, alreadyExists, entry);\n                }.bind(this))\n            } else {\n                this._handleNewFilterResult(result, alreadyExists, entry);\n            }\n        }\n        return Promise.all(filterPromises);\n    }\n\n    /**\n     * Clears the dataSource by removing all entries\n     */\n    clearDataSource() {\n        for (let entry of this.options.dataStore || []) {\n            this._removeItem(entry);\n        }\n    }\n\n    /**\n     * Determines whether the last element showing is the actual last element\n     * @returns {boolean} True if the last element showing is the actual last element\n     */\n    isAtBottom() {\n        let lastVisibleItem = this.getLastVisibleItem();\n        return (lastVisibleItem && lastVisibleItem.renderNode === this._dataSource._.tail._value);\n    }\n\n    /**\n     * Returns the currently active group elements, or an empty object of none are present.\n     * @returns {Object}\n     */\n    getGroups() {\n        return this._internalGroups || {};\n    }\n\n\n    _addHeader() {\n        if (this.options.headerTemplate) {\n            this._header = this.options.headerTemplate();\n            this._header.isHeader = true;\n            this._insertId(0, 0, this._header, null, {isHeader: true});\n            this.insert(0, this._header);\n        }\n    }\n\n    /**\n     * @private\n     * Patch because Hein forgot to auto pipe events when replacing\n     * @param indexOrId\n     * @param renderable\n     * @param noAnimation\n     */\n    _replace(indexOrId, renderable, noAnimation) {\n        super.replace(indexOrId, renderable, noAnimation);\n        // Auto pipe events\n        if (this.options.autoPipeEvents && renderable && renderable.pipe) {\n            renderable.pipe(this);\n            renderable.pipe(this._eventOutput);\n        }\n    }\n\n    _handleNewFilterResult(shouldShow, alreadyExists, entry) {\n        if (shouldShow) {\n            /* This entry should be in the view, add it if it doesn't exist yet. */\n            if (!alreadyExists) {\n                this._addItem(entry);\n            }\n        } else {\n            /* This entry should not be in the view, remove if present. */\n            if (alreadyExists) {\n                this._removeItem(entry);\n            }\n        }\n    }\n\n    _findGroup(groupId) {\n        return this._internalGroups[groupId] || -1;\n    }\n\n    _getGroupByValue(child) {\n        let groupByValue = '';\n        if (typeof this.options.groupBy === 'function') {\n            groupByValue = this.options.groupBy(child);\n        } else if (typeof this.options.groupBy === 'string') {\n            groupByValue = this.options.groupBy;\n        }\n        return groupByValue;\n    }\n\n    _addGroupItem(groupByValue, insertIndex) {\n        let newSurface = this.options.groupTemplate(groupByValue);\n        newSurface.groupId = groupByValue;\n        this._internalGroups[groupByValue] = {position: insertIndex, itemsCount: 0};\n        this.insert(insertIndex, newSurface);\n\n        return newSurface;\n    }\n\n\n    _getInsertIndex(child, previousSiblingID = undefined) {\n        /* By default, add item at the end if the orderBy function does not specify otherwise. */\n        let firstIndex = this._getZeroIndex();\n        let insertIndex = this._dataSource.getLength();\n        let placedWithinGroup = false;\n\n        if (this._isGrouped) {\n            let groupIndex;\n            let groupId = this._getGroupByValue(child);\n            let groupData = this._findGroup(groupId);\n            if (groupData) groupIndex = groupData.position;\n            if (groupIndex != undefined && groupIndex !== -1) {\n                for (insertIndex = groupIndex + 1; insertIndex <= (groupIndex + groupData.itemsCount); insertIndex++) {\n                    if (this.options.orderBy) {\n                        let dataId = this._viewSequence.findByIndex(insertIndex)._value.dataId;\n                        if (dataId && this.options.orderBy(child, this._internalDataSource[dataId])) {\n                            break;\n                        }\n                    } else {\n                        insertIndex += this._internalGroups[groupId].itemsCount;\n                        break;\n                    }\n                }\n                placedWithinGroup = true;\n            }\n        }\n\n        if (!placedWithinGroup) {\n            /* If we have an orderBy function, find the index we should be inserting at. */\n            if ((this._useCustomOrdering && this.options.orderBy && typeof this.options.orderBy === 'function') || this._isGrouped) {\n                let foundOrderedIndex = -1;\n                if (this._isGrouped) {\n\n                    for (let group of sortBy(this._internalGroups, 'position')) {\n                        /* Check the first and last item of every group (they're sorted) */\n                        for (let position of group.itemsCount > 1 ? [group.position + 1, group.position + group.itemsCount - 1] : [group.position + 1]) {\n                            let {dataId} = this._viewSequence.findByIndex(position)._value;\n                            if (this.options.orderBy(child, this._internalDataSource[dataId])) {\n                                foundOrderedIndex = group.position;\n                                break;\n                            }\n                        }\n                        if (foundOrderedIndex > -1) {\n                            break;\n                        }\n                    }\n                } else {\n                    foundOrderedIndex = this._orderBy(child, this.options.orderBy);\n                }\n\n                if (foundOrderedIndex !== -1) {\n                    insertIndex = foundOrderedIndex;\n                }\n                /*\n                 There is no guarantee of order when grouping objects unless orderBy is explicitly defined\n                 */\n            } else if (previousSiblingID !== undefined && previousSiblingID != null) {\n                /* We don't have an orderBy method, but do have a previousSiblingID we can use to find the correct insertion index. */\n                let siblingIndex = this._findData(previousSiblingID).position;\n                if (siblingIndex !== -1) {\n                    insertIndex = siblingIndex + 1;\n                }\n            }\n        }\n\n        return insertIndex;\n    }\n\n    _insertGroup(insertIndex, groupByValue) {\n        let groupIndex = this._findGroup(groupByValue);\n        if (groupByValue) {\n            let groupExists = groupIndex !== -1;\n            if (!groupExists) {\n                /* No group of this value exists yet, so we'll need to create one. */\n                this._updatePosition(insertIndex, 1);\n                let newSurface = this._addGroupItem(groupByValue, insertIndex);\n                this._insertId(`group_${groupByValue}`, insertIndex, newSurface, null, {groupId: groupByValue});\n                /*insertIndex++;*/\n            }\n            return !groupExists;\n        }\n        return null;\n    }\n\n\n    async _addItem(child, previousSiblingID = undefined) {\n\n        if (this._findData(child.id)) {\n            console.log('Child already exists ', child.id);\n            return;\n        }\n\n        this._removePlaceholder();\n\n        let insertIndex = this._getInsertIndex(child, previousSiblingID);\n\n        /* If we're using groups, check if we need to insert a group item before this child. */\n        if (this._isGrouped) {\n            let groupByValue = this._getGroupByValue(child);\n\n            if (this._insertGroup(insertIndex, groupByValue)) {\n                /* If a new group is inserted, then increase the insert index */\n                insertIndex++;\n            }\n            /* Increase the count of the number of items in the group */\n            this._internalGroups[groupByValue].itemsCount++;\n        }\n\n        let newSurface = this.options.itemTemplate(child);\n        if(newSurface instanceof Promise) {\n            newSurface = await newSurface;\n        }\n\n        newSurface.dataId = child.id;\n        this._subscribeToClicks(newSurface, child);\n\n        /* If we're scrolling as with a chat window, then scroll to last child if we're at the bottom */\n        if (this.options.chatScrolling && insertIndex === this._dataSource.getLength()) {\n            if (this.isAtBottom() || !this._allChildrenAdded) {\n                this._lastChild = child;\n            }\n        }\n        let insertSpec;\n        if(this.options.customInsertSpec){\n            insertSpec = this.options.customInsertSpec(child);\n        }\n\n        this.insert(insertIndex, newSurface, insertSpec);\n        this._updatePosition(insertIndex);\n        this._insertId(child.id, insertIndex, newSurface, child);\n\n        if (this.options.ensureVisible != null || this.options.chatScrolling) {\n            let shouldEnsureVisibleUndefined = this.options.ensureVisible == null;\n            let shouldEnsureVisible = !shouldEnsureVisibleUndefined ? this.options.ensureVisible(child, newSurface, insertIndex) : false;\n            if (this.options.chatScrolling) {\n                if (child === this._lastChild && (shouldEnsureVisible || shouldEnsureVisibleUndefined)) {\n                    this.ensureVisible(newSurface)\n                }\n            } else if (shouldEnsureVisible) {\n                this.ensureVisible(newSurface);\n            }\n        }\n\n        super._addItem(child, previousSiblingID);\n    }\n\n    _replaceItem(child) {\n        let index = this._findData(child.id).position;\n\n        let newSurface = this.options.itemTemplate(child);\n        newSurface.dataId = child.id;\n        this._subscribeToClicks(newSurface, child);\n        this._insertId(child.id, index, newSurface, child);\n        this._replace(index, newSurface, true);\n    }\n\n    _removeGroupIfNecessary(groupByValue) {\n        /* Check if the group corresponding to the child is now empty */\n        let group = this._internalGroups[groupByValue];\n        if (group && group.itemsCount === 0) {\n            /* TODO: Maybe remove internalgroups[groupByValue]? (Or not?) */\n            let {position} = group;\n            this._updatePosition(position, -1);\n            this.remove(position);\n            delete this._internalGroups[groupByValue];\n            delete this._internalDataSource[groupByValue];\n        }\n\n    }\n\n\n    _removeItem(child) {\n        let internalChild = this._internalDataSource[child.id] || {};\n        let index = internalChild.position;\n        if (index > -1) {\n            this._updatePosition(index, -1);\n            this.remove(index);\n            delete this._internalDataSource[child.id];\n        }\n\n        /* If we're using groups, check if we need to remove the group that this child belonged to. */\n        if (this._isGrouped) {\n            let groupByValue = this._getGroupByValue(child);\n            let group = this._internalGroups[groupByValue];\n            if(group){ group.itemsCount--; }\n\n\n            this._removeGroupIfNecessary(groupByValue);\n\n        }\n\n        /* The amount of items in the dataSource is subtracted with a header if present, to get the total amount of actual items in the scrollView. */\n        let itemCount = this._dataSource.getLength() - (this._getZeroIndex());\n        if (itemCount === 0) {\n            this._addPlaceholder();\n        }\n    }\n\n    _moveItem(oldId, prevChildId = null) {\n\n        let oldData = this._findData(oldId);\n        let oldIndex = oldData.position;\n\n        let previousSiblingIndex = this._getNextVisibleIndex(prevChildId);\n        if (oldIndex !== previousSiblingIndex) {\n            this.move(oldIndex, previousSiblingIndex);\n            this._internalDataSource[previousSiblingIndex] = oldData;\n            this._internalDataSource[previousSiblingIndex].position = oldIndex;\n        }\n    }\n\n\n    _removeHeader() {\n        if (this._header) {\n            this.remove(0);\n            delete this._internalDataSource[0];\n            this._header = null;\n        }\n    }\n\n    _addPlaceholder() {\n        if (this.options.placeholderTemplate && !this._placeholder) {\n            let insertIndex = this._getZeroIndex();\n            this._placeholder = this.options.placeholderTemplate();\n            this._placeholder.isPlaceholder = true;\n            this.insert(insertIndex, this._placeholder);\n        }\n    }\n\n    _getZeroIndex() {\n        return this._header ? 1 : 0;\n    }\n\n    _removePlaceholder() {\n        if (this._placeholder) {\n            if (this._placeholder)\n                this.remove(this._getZeroIndex());\n            this._placeholder = null;\n        }\n    }\n\n    _bindDataSource() {\n\n        if (!this.options.dataStore || !this.options.itemTemplate) {\n            console.log('Datasource and template should both be set.');\n            return;\n        }\n\n        if (!this.options.template instanceof Function) {\n            console.log('Template needs to be a function.');\n            return;\n        }\n        if (this.options.chatScrolling) {\n            this.options.dataStore.on('ready', () => this._allChildrenAdded = true);\n        }\n\n\n        this.options.dataStore.on('child_added', this._onChildAdded.bind(this));\n        this.options.dataStore.on('child_changed', this._onChildChanged.bind(this));\n        this.options.dataStore.on('child_moved', this._onChildMoved.bind(this));\n        this.options.dataStore.on('child_removed', this._onChildRemoved.bind(this));\n    }\n\n\n    _onChildAdded(child, previousSiblingID) {\n        if (this.options.dataFilter &&\n            (typeof this.options.dataFilter === 'function')) {\n\n            let result = this.options.dataFilter(child);\n\n            if (result instanceof Promise) {\n                /* If the result is a Promise, show the item when that promise resolves. */\n                result.then((show) => {\n                    if (show) {\n                        this._throttler.add(() => {\n                            this._addItem(child, previousSiblingID)\n                        });\n                    }\n                });\n            } else if (result) {\n                /* The result is an item, so we can add it directly. */\n                this._throttler.add(() => {\n                    this._addItem(child, previousSiblingID);\n                });\n            }\n        } else {\n            /* There is no dataFilter method, so we can add this child. */\n            this._throttler.add(() => {\n                this._addItem(child, previousSiblingID);\n            });\n        }\n    }\n\n    _onChildChanged(child, previousSiblingID) {\n        let changedItemIndex = this._getDataSourceIndex(child.id);\n\n        if (this._dataSource && changedItemIndex < this._dataSource.getLength()) {\n\n            let result = this.options.dataFilter ? this.options.dataFilter(child) : true;\n\n            if (result instanceof Promise) {\n                result.then(function (show) {\n                    if (show) {\n                        this._throttler.add(() => {\n                            this._replaceItem(child);\n                        });\n                    } else {\n                        this._removeItem(child);\n                    }\n                }.bind(this));\n            }\n            else if (this.options.dataFilter &&\n                typeof this.options.dataFilter === 'function' && !result) {\n                this._removeItem(child);\n            } else {\n                if (changedItemIndex === -1) {\n                    this._throttler.add(() => {\n                        this._addItem(child, previousSiblingID);\n                    });\n                } else {\n                    this._throttler.add(() => {\n                        this._replaceItem(child);\n                        if (previousSiblingID && !this._isGrouped && !this._useCustomOrdering) {\n                            this._moveItem(child.id, previousSiblingID);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    _onChildMoved(child, previousSiblingID) {\n        let current = this._getDataSourceIndex(child.id);\n        this._throttler.add(() => {\n            this._moveItem(current, previousSiblingID);\n        });\n    }\n\n    _onChildRemoved(child) {\n        this._throttler.add(() => {\n            this._removeItem(child);\n        });\n    };\n\n    _getDataSourceIndex(id) {\n        let data = this._findData(id);\n        return data ? data.position : -1;\n    }\n\n    _getNextVisibleIndex(id) {\n        let viewIndex = -1;\n        let viewData = this._findData(id);\n\n        if (viewData) {\n            viewIndex = viewData.position\n        }\n\n        if (viewIndex === -1) {\n\n            let modelIndex = findIndex(this.options.dataStore, function (model) {\n                return model.id === id;\n            });\n\n            if (modelIndex === 0 || modelIndex === -1) {\n                return this._isDescending ? this._dataSource ? this._dataSource.getLength() - 1 : 0 : 0;\n            } else {\n                let nextModel = this.options.dataStore[this._isDescending ? modelIndex + 1 : modelIndex - 1];\n                let nextIndex = this._findData(nextModel.id).position;\n                if (nextIndex > -1) {\n                    return this._isDescending ? nextIndex === 0 ? 0 : nextIndex - 1 :\n                        this._dataSource.getLength() === nextIndex + 1 ? nextIndex : nextIndex + 1;\n                } else {\n                    return this._getNextVisibleIndex(nextModel.id);\n                }\n            }\n        } else {\n            return this._isDescending ? viewIndex === 0 ? 0 : viewIndex - 1 :\n                this._dataSource.getLength() === viewIndex + 1 ? viewIndex : viewIndex + 1;\n        }\n    }\n\n    _orderBy(child, orderByFunction) {\n        let item = this._dataSource._.head;\n        let index = 0;\n\n        while (item) {\n            if (item._value.dataId && this._internalDataSource[item._value.dataId] && orderByFunction(child, this._internalDataSource[item._value.dataId])) {\n                return index;\n            }\n\n            index++;\n            item = item._next;\n        }\n        return -1;\n    }\n\n    _updatePosition(position, change = 1) {\n        if (position === undefined || position === this._dataSource.getLength() - 1) return;\n        for (let element of Object.keys(this._internalDataSource)) {\n            let dataObject = this._internalDataSource[element];\n            if (dataObject.position >= position) {\n                dataObject.position += change\n            }\n        }\n        if (this._isGrouped) {\n            this._updateGroupPosition(position, change);\n        }\n    }\n\n    _updateGroupPosition(position, change = 1) {\n        for (let element of Object.keys(this._internalGroups)) {\n            if (this._internalGroups[element].position >= position) {\n                /* Update the position of groups coming after */\n                this._internalGroups[element].position += change;\n            }\n        }\n    }\n\n    _findData(id) {\n        let data = this._internalDataSource[id] || undefined;\n        return data;\n    }\n\n    _insertId(id = null, position, renderable = {}, model = {}, options = {}) {\n        if (id === undefined || id === null) return;\n\n        this._internalDataSource[id] = {position: position, renderable: renderable, model: model};\n        for (let element of Object.keys(options)) {\n            this._internalDataSource[id][element] = options[element];\n        }\n    }\n\n    _subscribeToClicks(surface, model) {\n        surface.on('click', function () {\n            this._eventOutput.emit('child_click', {renderNode: surface, dataObject: model});\n        }.bind(this));\n    }\n}\n"
  },
  {
    "__docId__": 1,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DataBoundScrollView",
    "memberof": "src/components/DataBoundScrollView.js",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "access": null,
    "export": true,
    "importPath": "./src/components/DataBoundScrollView.js",
    "importStyle": "{DataBoundScrollView}",
    "description": "A FlexScrollView with enhanced functionality for maintaining a two-way connection with a PrioritisedArray.",
    "lineNumber": 22,
    "interface": false,
    "extends": [
      "src/components/ReflowingScrollView.js~ReflowingScrollView"
    ]
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#constructor",
    "access": null,
    "description": "Be sure to specifiy either a getSize function in the class of the itemTemplate, or to specify the size in the\nlayoutOptions.",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options passed inherit from previous classes. Avoid using the dataSource option since\nthe DataBoundScrollView creates its own dataSource from options.dataStore."
      },
      {
        "nullable": null,
        "types": [
          "PrioriisedArray"
        ],
        "spread": false,
        "optional": true,
        "name": "options.dataStore",
        "description": "The data that should be read to create entries."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.itemTemplate",
        "description": "A function that returns a renderable representing each data item."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.placeholderTemplate",
        "description": "A function that returns a renderable to display when there are\nno items present."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.headerTemplate",
        "description": "A function that returns a renderable to display as a header."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.orderBy",
        "description": "An ordering function that takes two data models (model1, model2).\nIf it returns true, then model1 should go before model2."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.groupBy",
        "description": "A function that takes a model and returns a value to group by. If set, then\nthe groupTemplate option also needs to be set."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.groupTemplate",
        "description": "A function that takes as a single argument the groupBy value and returns\na renderable to insert before a group belonging to that value."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.stickHeaders",
        "description": "If set to true, then the group headers will stick to the top when scrolling.\nBeware that this is slightly buggy as of now and might require some fine tuning to provide a better UX."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.customInsertSpec",
        "description": "A function that takes as a single argument a model and returns a spec\nthat is used when inserting a new item."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.chatScrolling",
        "description": "If set to true, the scroll will remain at the bottom if at bottom already\nwhen new messages are added.\n\nIf this function returns true, then model1 will be placed before model2."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 3,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_internalDataSource",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_internalDataSource",
    "access": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_internalGroups",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_internalGroups",
    "access": null,
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isGrouped",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_isGrouped",
    "access": null,
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isDescending",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_isDescending",
    "access": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_throttler",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_throttler",
    "access": null,
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_useCustomOrdering",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_useCustomOrdering",
    "access": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setItemTemplate",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#setItemTemplate",
    "access": null,
    "description": "Set a template function, optionally re-renders all the dataSource' renderables",
    "lineNumber": 114,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "templateFunction",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 10,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setGroupTemplate",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#setGroupTemplate",
    "access": null,
    "description": "Sets a group template function, optionally re-renders all the dataSource' renderables.",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "templateFunction",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "reRender",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 11,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setDataStore",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#setDataStore",
    "access": null,
    "description": "Sets the datastore to use. This will repopulate the view and remove any (if present) old items.",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dataStore",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 12,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getDataStore",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#getDataStore",
    "access": null,
    "description": "Gets the currently set dataStore.",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 13,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reloadFilter",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#reloadFilter",
    "access": null,
    "description": "Reloads the dataFilter option of the DataBoundScrollView, and verifies whether the items in the dataStore are allowed by the new filter.\nIt removes any currently visible items that aren't allowed anymore, and adds any non-visible ones that are allowed now.",
    "lineNumber": 164,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Resolves when filter has been applied"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "newFilter",
        "description": "New filter function to verify item visibility with."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "reRender",
        "description": "Boolean to rerender all childs that pass the filter function. Usefull when setting a new itemTemplate alongside reloading the filter"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves when filter has been applied"
    },
    "generator": false
  },
  {
    "__docId__": 14,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clearDataSource",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#clearDataSource",
    "access": null,
    "description": "Clears the dataSource by removing all entries",
    "lineNumber": 187,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 15,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isAtBottom",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#isAtBottom",
    "access": null,
    "description": "Determines whether the last element showing is the actual last element",
    "lineNumber": 197,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True if the last element showing is the actual last element"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the last element showing is the actual last element"
    },
    "generator": false
  },
  {
    "__docId__": 16,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getGroups",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#getGroups",
    "access": null,
    "description": "Returns the currently active group elements, or an empty object of none are present.",
    "lineNumber": 206,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_addHeader",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_addHeader",
    "access": null,
    "description": null,
    "lineNumber": 211,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 18,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_header",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_header",
    "access": null,
    "description": null,
    "lineNumber": 213,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_replace",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_replace",
    "access": "private",
    "description": "",
    "lineNumber": 227,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "indexOrId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "noAnimation",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 20,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_handleNewFilterResult",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_handleNewFilterResult",
    "access": null,
    "description": null,
    "lineNumber": 236,
    "undocument": true,
    "params": [
      {
        "name": "shouldShow",
        "types": [
          "*"
        ]
      },
      {
        "name": "alreadyExists",
        "types": [
          "*"
        ]
      },
      {
        "name": "entry",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 21,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_findGroup",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_findGroup",
    "access": null,
    "description": null,
    "lineNumber": 250,
    "undocument": true,
    "params": [
      {
        "name": "groupId",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 22,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getGroupByValue",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_getGroupByValue",
    "access": null,
    "description": null,
    "lineNumber": 254,
    "undocument": true,
    "params": [
      {
        "name": "child",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 23,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_addGroupItem",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_addGroupItem",
    "access": null,
    "description": null,
    "lineNumber": 264,
    "undocument": true,
    "params": [
      {
        "name": "groupByValue",
        "types": [
          "*"
        ]
      },
      {
        "name": "insertIndex",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 24,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getInsertIndex",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_getInsertIndex",
    "access": null,
    "description": null,
    "lineNumber": 274,
    "undocument": true,
    "params": [
      {
        "name": "child",
        "types": [
          "*"
        ]
      },
      {
        "name": "previousSiblingID",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "undefined",
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_insertGroup",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_insertGroup",
    "access": null,
    "description": null,
    "lineNumber": 342,
    "undocument": true,
    "params": [
      {
        "name": "insertIndex",
        "types": [
          "*"
        ]
      },
      {
        "name": "groupByValue",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "undefined"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 26,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_addItem",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_addItem",
    "access": null,
    "description": null,
    "lineNumber": 359,
    "undocument": true,
    "params": [
      {
        "name": "child",
        "types": [
          "*"
        ]
      },
      {
        "name": "previousSiblingID",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "undefined",
        "defaultValue": "undefined"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 27,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_lastChild",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_lastChild",
    "access": null,
    "description": null,
    "lineNumber": 393,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 28,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_replaceItem",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_replaceItem",
    "access": null,
    "description": null,
    "lineNumber": 420,
    "undocument": true,
    "params": [
      {
        "name": "child",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 29,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_removeGroupIfNecessary",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_removeGroupIfNecessary",
    "access": null,
    "description": null,
    "lineNumber": 430,
    "undocument": true,
    "params": [
      {
        "name": "groupByValue",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 30,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_removeItem",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_removeItem",
    "access": null,
    "description": null,
    "lineNumber": 445,
    "undocument": true,
    "params": [
      {
        "name": "child",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_moveItem",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_moveItem",
    "access": null,
    "description": null,
    "lineNumber": 472,
    "undocument": true,
    "params": [
      {
        "name": "oldId",
        "types": [
          "*"
        ]
      },
      {
        "name": "prevChildId",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 32,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_removeHeader",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_removeHeader",
    "access": null,
    "description": null,
    "lineNumber": 486,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 33,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_header",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_header",
    "access": null,
    "description": null,
    "lineNumber": 490,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 34,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_addPlaceholder",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_addPlaceholder",
    "access": null,
    "description": null,
    "lineNumber": 494,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 35,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_placeholder",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_placeholder",
    "access": null,
    "description": null,
    "lineNumber": 497,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 36,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getZeroIndex",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_getZeroIndex",
    "access": null,
    "description": null,
    "lineNumber": 503,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 37,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_removePlaceholder",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_removePlaceholder",
    "access": null,
    "description": null,
    "lineNumber": 507,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 38,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_placeholder",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_placeholder",
    "access": null,
    "description": null,
    "lineNumber": 511,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 39,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_bindDataSource",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_bindDataSource",
    "access": null,
    "description": null,
    "lineNumber": 515,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onChildAdded",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_onChildAdded",
    "access": null,
    "description": null,
    "lineNumber": 538,
    "undocument": true,
    "params": [
      {
        "name": "child",
        "types": [
          "*"
        ]
      },
      {
        "name": "previousSiblingID",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onChildChanged",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_onChildChanged",
    "access": null,
    "description": null,
    "lineNumber": 567,
    "undocument": true,
    "params": [
      {
        "name": "child",
        "types": [
          "*"
        ]
      },
      {
        "name": "previousSiblingID",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 42,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onChildMoved",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_onChildMoved",
    "access": null,
    "description": null,
    "lineNumber": 605,
    "undocument": true,
    "params": [
      {
        "name": "child",
        "types": [
          "*"
        ]
      },
      {
        "name": "previousSiblingID",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onChildRemoved",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_onChildRemoved",
    "access": null,
    "description": null,
    "lineNumber": 612,
    "undocument": true,
    "params": [
      {
        "name": "child",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getDataSourceIndex",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_getDataSourceIndex",
    "access": null,
    "description": null,
    "lineNumber": 618,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getNextVisibleIndex",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_getNextVisibleIndex",
    "access": null,
    "description": null,
    "lineNumber": 623,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_orderBy",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_orderBy",
    "access": null,
    "description": null,
    "lineNumber": 655,
    "undocument": true,
    "params": [
      {
        "name": "child",
        "types": [
          "*"
        ]
      },
      {
        "name": "orderByFunction",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 47,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_updatePosition",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_updatePosition",
    "access": null,
    "description": null,
    "lineNumber": 670,
    "undocument": true,
    "params": [
      {
        "name": "position",
        "types": [
          "*"
        ]
      },
      {
        "name": "change",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 48,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_updateGroupPosition",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_updateGroupPosition",
    "access": null,
    "description": null,
    "lineNumber": 683,
    "undocument": true,
    "params": [
      {
        "name": "position",
        "types": [
          "*"
        ]
      },
      {
        "name": "change",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_findData",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_findData",
    "access": null,
    "description": null,
    "lineNumber": 692,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 50,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_insertId",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_insertId",
    "access": null,
    "description": null,
    "lineNumber": 697,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      },
      {
        "name": "position",
        "types": [
          "*"
        ]
      },
      {
        "name": "renderable",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "model",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 51,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_subscribeToClicks",
    "memberof": "src/components/DataBoundScrollView.js~DataBoundScrollView",
    "longname": "src/components/DataBoundScrollView.js~DataBoundScrollView#_subscribeToClicks",
    "access": null,
    "description": null,
    "lineNumber": 706,
    "undocument": true,
    "params": [
      {
        "name": "surface",
        "types": [
          "*"
        ]
      },
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 52,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/components/ReflowingScrollView.js",
    "memberof": null,
    "longname": "src/components/ReflowingScrollView.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n @author: Karl Lundfall (lundfall)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n */\n\nimport FlexScrollView   from 'famous-flex/FlexScrollView.js';\nimport {combineOptions} from '../utils/CombineOptions.js';\nimport {ObjectHelper}   from '../utils/ObjectHelper.js';\n\n/**\n * Class extended by the dataBoundScrollView and for wrapping up a View.\n * It automatically listens for reflows and handles them accordingly\n */\nexport class ReflowingScrollView extends FlexScrollView {\n\n    /**\n     * Constructor does not add any new options.\n     *\n     * @param options\n     */\n    constructor(options = {}) {\n        super(options);\n        ObjectHelper.bindAllMethods(this, this);\n        this._eventInput.on('recursiveReflow', this._reflowWhenPossible)\n    }\n\n    _reflowWhenPossible() {\n        if ((!this.isScrolling() && !this._nodes._reevalTrueSize) || !this._didReflowOnce) {\n            this.reLayout();\n            this._didReflowOnce = true;\n        }\n    }\n\n    _addItem() {\n        /* Views that use this ReflowingScrollView should manually subscribe to this event,\n         * since it does not automatically bubble to Arva's View.js.\n         */\n        this._eventOutput.emit('resize');\n    }\n    \n}\n"
  },
  {
    "__docId__": 53,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ReflowingScrollView",
    "memberof": "src/components/ReflowingScrollView.js",
    "longname": "src/components/ReflowingScrollView.js~ReflowingScrollView",
    "access": null,
    "export": true,
    "importPath": "./src/components/ReflowingScrollView.js",
    "importStyle": "{ReflowingScrollView}",
    "description": "Class extended by the dataBoundScrollView and for wrapping up a View.\nIt automatically listens for reflows and handles them accordingly",
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "famous-flex/FlexScrollView.js~FlexScrollView"
    ]
  },
  {
    "__docId__": 54,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/components/ReflowingScrollView.js~ReflowingScrollView",
    "longname": "src/components/ReflowingScrollView.js~ReflowingScrollView#constructor",
    "access": null,
    "description": "Constructor does not add any new options.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 55,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_reflowWhenPossible",
    "memberof": "src/components/ReflowingScrollView.js~ReflowingScrollView",
    "longname": "src/components/ReflowingScrollView.js~ReflowingScrollView#_reflowWhenPossible",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 56,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_didReflowOnce",
    "memberof": "src/components/ReflowingScrollView.js~ReflowingScrollView",
    "longname": "src/components/ReflowingScrollView.js~ReflowingScrollView#_didReflowOnce",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_addItem",
    "memberof": "src/components/ReflowingScrollView.js~ReflowingScrollView",
    "longname": "src/components/ReflowingScrollView.js~ReflowingScrollView#_addItem",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 58,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/components/logic/branding/BrandingEngine.js",
    "memberof": null,
    "longname": "src/components/logic/branding/BrandingEngine.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Tom Clement (tjclement)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport {inject}         from 'di';\nimport {DataSource}     from '../../../data/DataSource.js';\nimport {ObjectHelper}   from '../../../utils/ObjectHelper.js';\n\n@inject(DataSource)\nexport class BrandingEngine {\n    get options() {\n        return this._options;\n    }\n\n    set options(value) {\n        this._options = value;\n    }\n\n    constructor(dataSource = null) {\n        if (dataSource) {\n            this._dataSource = dataSource.child('Branding');\n        }\n\n        this.options = {};\n\n        /* Bind all methods to this object's scoping. */\n        ObjectHelper.bindAllMethods(this, this);\n    }\n\n    /**\n     * Sets the branding options using the local cache and an external dataSource.\n     * If a cached version is present, it is used to populate the options, and the function is resolved immediately.\n     * Otherwise, the options are populated from the external dataSource.\n     * In both cases, the latest options are fetched from the dataSource and saved to cache for use on the next app launch.\n     * @returns {Promise} A promise that is resolved when the branding options have been fetched from cache or remote storage.\n     */\n    setOptionsFromDataSource() {\n        return new Promise(function (resolve) {\n            let isResolved = false;\n\n            /* If there is a local cached version available, use it. */\n            if (Storage && localStorage.getItem('Branding')) {\n                this.options = JSON.parse(localStorage.getItem('Branding'));\n                isResolved = true;\n                resolve();\n            }\n\n            /* If we didn't get a dataSource injected into this class, don't try to use it. */\n            if (!this._dataSource) {\n                resolve();\n            }\n\n            /* Use the dataSource to populate our branding options if no cache is available,\n             * or save the latest options to cache so they are available on the next app launch. */\n            let dataReference = this._dataSource;\n            dataReference.setValueChangedCallback(function (dataSnapshot) {\n                dataReference.removeValueChangedCallback();\n                this.setOptions(dataSnapshot.val());\n                if (!isResolved) {\n                    resolve();\n                }\n            }.bind(this));\n        }.bind(this));\n    }\n\n    /**\n     * Set the branding options manually.\n     * @param {Object} options Dictionary object with wanted branding options. Example: {textColor: 'black', backgroundColor: 'white'}\n     * @returns {void}\n     */\n    setOptions(options) {\n        this.options = options || {};\n\n        if (Storage) {\n            localStorage.setItem('Branding', JSON.stringify(this.options));\n        }\n    }\n\n    /**\n     * Set one branding option manually.\n     * @param {String} optionName Name of the option to fetch.\n     * @param {*} value Value to set the option to.\n     * @returns {void}\n     */\n    setOption(optionName, value) {\n        if (!this.options) {\n            this.options = {};\n        }\n\n        this.options[optionName] = value;\n    }\n\n    /**\n     * Get a branding option value by its name.\n     * @param {String} optionName Name of the option to fetch.\n     * @returns {*} Option\n     */\n    get(optionName) {\n        return this.options[optionName];\n    }\n\n    /**\n     * Gets all branding options for the current brand.\n     * @returns {*} All options\n     */\n    getAll() {\n        return this.options;\n    }\n}\n"
  },
  {
    "__docId__": 59,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BrandingEngine",
    "memberof": "src/components/logic/branding/BrandingEngine.js",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "access": null,
    "export": true,
    "importPath": "./src/components/logic/branding/BrandingEngine.js",
    "importStyle": "{BrandingEngine}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 60,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#options",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 61,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#options",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 62,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_options",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#_options",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#constructor",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "params": [
      {
        "name": "dataSource",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 64,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#options",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 66,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setOptionsFromDataSource",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#setOptionsFromDataSource",
    "access": null,
    "description": "Sets the branding options using the local cache and an external dataSource.\nIf a cached version is present, it is used to populate the options, and the function is resolved immediately.\nOtherwise, the options are populated from the external dataSource.\nIn both cases, the latest options are fetched from the dataSource and saved to cache for use on the next app launch.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} A promise that is resolved when the branding options have been fetched from cache or remote storage."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that is resolved when the branding options have been fetched from cache or remote storage."
    },
    "generator": false
  },
  {
    "__docId__": 67,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#options",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setOptions",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#setOptions",
    "access": null,
    "description": "Set the branding options manually.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Dictionary object with wanted branding options. Example: {textColor: 'black', backgroundColor: 'white'}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 69,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#options",
    "access": null,
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setOption",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#setOption",
    "access": null,
    "description": "Set one branding option manually.",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "optionName",
        "description": "Name of the option to fetch."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Value to set the option to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 71,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#options",
    "access": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#get",
    "access": null,
    "description": "Get a branding option value by its name.",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*} Option"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "optionName",
        "description": "Name of the option to fetch."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "Option"
    },
    "generator": false
  },
  {
    "__docId__": 73,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/components/logic/branding/BrandingEngine.js~BrandingEngine",
    "longname": "src/components/logic/branding/BrandingEngine.js~BrandingEngine#getAll",
    "access": null,
    "description": "Gets all branding options for the current brand.",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*} All options"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "All options"
    },
    "generator": false
  },
  {
    "__docId__": 74,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/components/logic/branding/BrandingEngineSingleton.js",
    "memberof": null,
    "longname": "src/components/logic/branding/BrandingEngineSingleton.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Tom Clement (tjclement)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport {BrandingEngine}         from './BrandingEngine.js';\nimport {Injection}              from '../../../utils/Injection.js';\n\nexport class BrandingEngineSingleton {\n    /**\n     * Get a singleton global instance of the BrandingEngine.\n     * @returns {BrandingEngine} BrandingEngine instance.\n     */\n    static getInstance() {\n        return Injection.get(BrandingEngine);\n    }\n}\n"
  },
  {
    "__docId__": 75,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BrandingEngineSingleton",
    "memberof": "src/components/logic/branding/BrandingEngineSingleton.js",
    "longname": "src/components/logic/branding/BrandingEngineSingleton.js~BrandingEngineSingleton",
    "access": null,
    "export": true,
    "importPath": "./src/components/logic/branding/BrandingEngineSingleton.js",
    "importStyle": "{BrandingEngineSingleton}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 76,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getInstance",
    "memberof": "src/components/logic/branding/BrandingEngineSingleton.js~BrandingEngineSingleton",
    "longname": "src/components/logic/branding/BrandingEngineSingleton.js~BrandingEngineSingleton.getInstance",
    "access": null,
    "description": "Get a singleton global instance of the BrandingEngine.",
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BrandingEngine} BrandingEngine instance."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "BrandingEngine"
      ],
      "spread": false,
      "description": "BrandingEngine instance."
    },
    "generator": false
  },
  {
    "__docId__": 77,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/App.js",
    "memberof": null,
    "longname": "src/core/App.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n  @author: Hans van den Akker (mysim1)\n  @license NPOSL-3.0\n  @copyright Bizboard, 2015\n\n */\n\nimport FastClick                from 'fastclick';\nimport Engine                   from 'famous/core/Engine.js';\nimport Context                  from 'famous/core/Context.js';\nimport AnimationController      from 'famous-flex/AnimationController.js';\n\nimport {provide}                from '../utils/di/Decorators.js';\nimport {ArvaRouter}             from '../routers/ArvaRouter.js';\nimport {Injection}              from '../utils/Injection.js';\nimport {Router}                 from './Router.js';\n\nimport '../utils/hotfixes/Polyfills.js';\nimport '../utils/hotfixes/FamousKeyboardOffset.js';\nimport '../utils/hotfixes/DisableTextSelection.js';\n\n/**\n * The App class exposes the Router which can be used to configure the Application's routing settings.\n * You can specify which Route should be default by calling `router.setDefault(controller, method);`\n */\nexport class App {\n\n    /**\n     * Have the router check check which route is active and fire the Controller\n     * @param {Router} router The router instance to use in the app.\n     * @param {Context} context The data context instance to use in the app.\n     * @returns {App} App instance\n     */\n    constructor() {\n        /* Options are defined as a static property on the class that extends this App */\n        let options = this.constructor.options || {};\n        let controllers = this.constructor.controllers || [];\n        let defaultRouter = this.constructor.router || ArvaRouter;\n        let defaultDataSource = this.constructor.defaultDataSource;\n        \n        /* Allow user taps to emit immediately as click events,\n         * instead of having the default 300ms delay. */\n        FastClick(document.body);\n        \n        /* Add default class providers to DI engine */\n        Injection.addProviders(defaultDataSource, defaultRouter, FamousContextSingleton, NewAnimationController);\n        \n        /* Request instances of a Router and a Famous Context. */\n        let [router, context] = Injection.getAll(Router, Context);\n        \n        if(this.constructor.loaded && typeof this.constructor.loaded === 'function') {\n            try { this.constructor.loaded(); } catch(error) { console.log('Caught exception in App.loaded():', error); }\n        }\n\n        /* Load controllers */\n        this.controllers = Injection.getAll(...controllers);\n\n        /**\n         * The router of the application\n         */\n        this.router = router;\n        /**\n         * The animationController that controls the animations between screens\n         */\n        this.context = context;\n        this.router.run();\n\n        /* Hide splash screen */\n        if(navigator && navigator.splashscreen && !options.keepSplashScreen) { navigator.splashscreen.hide(); }\n\n        let {done} = this.constructor;\n        if(done && typeof done === 'function') {\n            try { done.call(this.constructor); } catch(error) { console.log('Caught exception in App.done():', error); }\n        }\n    }\n\n    /**\n     * Triggers a creation of the app, by using an Injection.get\n     */\n    static start(){\n        /* Instantiate this App, which also instantiates the other components. */\n        this.references.app = Injection.get(this);\n    }\n}\n\n@provide(Context)\nclass FamousContextSingleton {\n    static famousContext = null;\n\n    constructor() {\n        return FamousContextSingleton.famousContext || (FamousContextSingleton.famousContext = Engine.createContext(null));\n    }\n}\n\n@provide(AnimationController)\nclass NewAnimationController {\n    constructor() {\n        let context = new FamousContextSingleton();\n        var controller = new AnimationController();\n\n        context.add(controller);\n        return controller;\n    }\n}"
  },
  {
    "__docId__": 78,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "App",
    "memberof": "src/core/App.js",
    "longname": "src/core/App.js~App",
    "access": null,
    "export": true,
    "importPath": "./src/core/App.js",
    "importStyle": "{App}",
    "description": "The App class exposes the Router which can be used to configure the Application's routing settings.\nYou can specify which Route should be default by calling `router.setDefault(controller, method);`",
    "lineNumber": 28,
    "interface": false
  },
  {
    "__docId__": 79,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/core/App.js~App",
    "longname": "src/core/App.js~App#constructor",
    "access": null,
    "description": "Have the router check check which route is active and fire the Controller",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{App} App instance"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Router"
        ],
        "spread": false,
        "optional": false,
        "name": "router",
        "description": "The router instance to use in the app."
      },
      {
        "nullable": null,
        "types": [
          "Context"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "The data context instance to use in the app."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "App"
      ],
      "spread": false,
      "description": "App instance"
    },
    "generator": false
  },
  {
    "__docId__": 80,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "controllers",
    "memberof": "src/core/App.js~App",
    "longname": "src/core/App.js~App#controllers",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "router",
    "memberof": "src/core/App.js~App",
    "longname": "src/core/App.js~App#router",
    "access": null,
    "description": "The router of the application",
    "lineNumber": 63,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 82,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "context",
    "memberof": "src/core/App.js~App",
    "longname": "src/core/App.js~App#context",
    "access": null,
    "description": "The animationController that controls the animations between screens",
    "lineNumber": 67,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "start",
    "memberof": "src/core/App.js~App",
    "longname": "src/core/App.js~App.start",
    "access": null,
    "description": "Triggers a creation of the app, by using an Injection.get",
    "lineNumber": 82,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 84,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FamousContextSingleton",
    "memberof": "src/core/App.js",
    "longname": "src/core/App.js~FamousContextSingleton",
    "access": null,
    "export": false,
    "importPath": "./src/core/App.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 85,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/core/App.js~FamousContextSingleton",
    "longname": "src/core/App.js~FamousContextSingleton#constructor",
    "access": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 86,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "NewAnimationController",
    "memberof": "src/core/App.js",
    "longname": "src/core/App.js~NewAnimationController",
    "access": null,
    "export": false,
    "importPath": "./src/core/App.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 87,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/core/App.js~NewAnimationController",
    "longname": "src/core/App.js~NewAnimationController#constructor",
    "access": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 88,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/Controller.js",
    "memberof": null,
    "longname": "src/core/Controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Hans van den Akker (mysim1)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport extend                   from 'lodash/extend.js';\nimport EventEmitter             from 'eventemitter3';\nimport AnimationController      from 'famous-flex/AnimationController.js';\n\nimport {inject}                 from '../utils/di/Decorators.js';\nimport {ObjectHelper}           from '../utils/ObjectHelper.js';\nimport {Router}                 from './Router.js';\n\n\n/**\n * The Controller class provides the highest level of control regarding the application features. Within the Controller context\n * each method will registered to receive calls from the Routing engine. With direct access to the Famo.us Context, every method can\n * control the creation of Views and Transitions.\n */\n@inject(Router, AnimationController)\nexport class Controller extends EventEmitter {\n\n    /**\n     * Saves the router and context to this.router and this.context, respectively.\n     * @param {Router} router. Injected globablly used router\n     * @param {AnimationController} context. Injected animationController used by the app\n     * @param {Spec} spec\n     */\n    constructor(router, context, spec) {\n        super();\n        this.spec = spec;\n        /**\n         * The router used globally in the app\n         * @type {Router}\n         */\n        this.router = router;\n        /**\n         * The AnimationController used globally in the app to change screens\n         * @type {AnimationController}\n         */\n        this.context = context;\n        /* The this._name property can be set by Arva's babel-plugin-transform-runtime-constructor-name plugin.\n         * This allows Arva code to be minified and mangled without losing automated route creation.\n         * If the plugin is not set up to run, which is done e.g. when not minifying your code, we default back to the runtime constructor name.*/\n        let controllerName = this.constructor._name || Object.getPrototypeOf(this).constructor.name;\n\n        ObjectHelper.bindAllMethods(this, this);\n\n        /* Add the controller route to the router. */\n        let routeName = controllerName.replace('Controller', '');\n        routeName += '/:method';\n\n        /* handle router url changes and execute the appropiate controller method. */\n        this.router.add(routeName, {enter: this.onRouteCalled, leave: this.onLeave}, this);\n    }\n\n    /**\n     * Called to notify the Controller that the route is changed\n     * @param newRoute\n     */\n    onLeave(newRoute) {\n        this.isActive = false;\n    }\n\n    /**\n     * Called by the Router when this controller instance is being navigated to. Calls the controller's method in the given route,\n     * and triggers a famous-flex AnimationController show() with the View instance that the method returns. Is also capable of receiving\n     * a Promise from the method, in which case the show() is called after the promise is resolved.\n     * @param {Object} route Route object generated by the Router. Contains a method name to call, and a render spec for passing to the AnimationController.\n     * @returns {Boolean} success Whether the controller method was fully executed, and the Router should emit a routechange event.\n     */\n    onRouteCalled(route) {\n        this.isActive = true;\n        if (typeof this[route.method] === 'function') {\n            let result = this[route.method].apply(this, route.values);\n\n            if (result) {\n                this.emit('renderstart', route.method);\n\n                if (result instanceof Promise) { /* We can assume the method called was asynchronous from nature, therefore we await the result. */\n                    result.then((delegatedresult) => {\n                        /* Assemble a callback based on the execution scope and have that called when rendering is completed. */\n                        this.context.show(delegatedresult, extend(route.spec, this.spec), () => { this.emit('renderend', route.method); });\n                        this.emit('rendering', route.method);\n                    });\n                } else {\n                    /* Assemble a callback based on the execution scope and have that called when rendering is completed. */\n                    this.context.show(result, extend(route.spec, this.spec), () => { this.emit('renderend', route.method); });\n                    this.emit('rendering', route.method);\n                }\n                return true;\n            } else {\n                console.log('Method did not return a View or a Promise instance.');\n                return false;\n            }\n        } else {\n            console.log('Route does not exist!');\n            return false;\n        }\n    }\n}\n"
  },
  {
    "__docId__": 89,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Controller",
    "memberof": "src/core/Controller.js",
    "longname": "src/core/Controller.js~Controller",
    "access": null,
    "export": true,
    "importPath": "./src/core/Controller.js",
    "importStyle": "{Controller}",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "interface": false,
    "extends": [
      "eventemitter3~EventEmitter"
    ]
  },
  {
    "__docId__": 90,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/core/Controller.js~Controller",
    "longname": "src/core/Controller.js~Controller#constructor",
    "access": null,
    "description": "Saves the router and context to this.router and this.context, respectively.",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Router"
        ],
        "spread": false,
        "optional": false,
        "name": "router.",
        "description": "Injected globablly used router"
      },
      {
        "nullable": null,
        "types": [
          "AnimationController"
        ],
        "spread": false,
        "optional": false,
        "name": "context.",
        "description": "Injected animationController used by the app"
      },
      {
        "nullable": null,
        "types": [
          "Spec"
        ],
        "spread": false,
        "optional": false,
        "name": "spec",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 91,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "spec",
    "memberof": "src/core/Controller.js~Controller",
    "longname": "src/core/Controller.js~Controller#spec",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "router",
    "memberof": "src/core/Controller.js~Controller",
    "longname": "src/core/Controller.js~Controller#router",
    "access": null,
    "description": "The router used globally in the app",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Router"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 93,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "context",
    "memberof": "src/core/Controller.js~Controller",
    "longname": "src/core/Controller.js~Controller#context",
    "access": null,
    "description": "The AnimationController used globally in the app to change screens",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "AnimationController"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onLeave",
    "memberof": "src/core/Controller.js~Controller",
    "longname": "src/core/Controller.js~Controller#onLeave",
    "access": null,
    "description": "Called to notify the Controller that the route is changed",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newRoute",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 95,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isActive",
    "memberof": "src/core/Controller.js~Controller",
    "longname": "src/core/Controller.js~Controller#isActive",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onRouteCalled",
    "memberof": "src/core/Controller.js~Controller",
    "longname": "src/core/Controller.js~Controller#onRouteCalled",
    "access": null,
    "description": "Called by the Router when this controller instance is being navigated to. Calls the controller's method in the given route,\nand triggers a famous-flex AnimationController show() with the View instance that the method returns. Is also capable of receiving\na Promise from the method, in which case the show() is called after the promise is resolved.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} success Whether the controller method was fully executed, and the Router should emit a routechange event."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Route object generated by the Router. Contains a method name to call, and a render spec for passing to the AnimationController."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "success Whether the controller method was fully executed, and the Router should emit a routechange event."
    },
    "generator": false
  },
  {
    "__docId__": 97,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isActive",
    "memberof": "src/core/Controller.js~Controller",
    "longname": "src/core/Controller.js~Controller#isActive",
    "access": null,
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/Model.js",
    "memberof": null,
    "longname": "src/core/Model.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Tom Clement (tjclement)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport difference               from 'lodash/difference.js';\nimport {Injection}              from '../utils/Injection.js';\nimport {ObjectHelper}           from '../utils/ObjectHelper.js';\nimport {PrioritisedObject}      from '../data/PrioritisedObject.js';\nimport {DataSource}             from '../data/DataSource.js';\n\n/**\n * A model that has attributes synced with the database.\n *\n * @example\n * export class Box extends Model {\n *  get label() {}\n *  get articleNumber() {}\n * }\n */\nexport class Model extends PrioritisedObject {\n\n    /**\n     * Creates a new instance of a model.\n     * @param {String} id Optional: The identifier for this model. For a user model this might be a user ID, for example. It\n     *           is used to build the path to the dataSource. This path is <root>/<model name appended with 's'>/<id>.\n     *           If no id is given, a randomly generated one will be pushed to the dataSource. You can use this for\n     *           creating new objects in the dataSource.\n     * @param {Object} data Optional: The initial data to fill the model with. The model will be extended with any\n     *                      properties present in the data parameter.\n     * @param {Object} options Optional: Additional options. Currently used is \"dataSnapshot\", which if present is used\n     *                          to fetch the initial model data. If not present, the model will add a one-time\n     *                          subscription to the dataSource to fetch initial data.\n     * @returns {Model} Model Instance.\n     */\n    constructor(id, data = null, options = {}) {\n\n        /* Retrieve dataSource from the DI context */\n        let dataSource = options.dataSource || Injection.get(DataSource);\n        super();\n\n        /* Replace all stub data fields of any subclass of Model with databinding accessors.\n         * This causes changes to be synched to and from the dataSource. */\n        this._replaceModelAccessorsWithDatabinding();\n\n\n        /* Calculate path to model in dataSource, used if no dataSource or path are given.\n         *\n         * The this._name property can be set by Arva's babel-plugin-transform-runtime-constructor-name plugin.\n         * This allows Arva code to be minified and mangled without losing automated model name resolving.\n         * If the plugin is not set up to run, which is done e.g. when not minifying your code, we default back to the runtime constructor name. */\n        let modelName = this.constructor._name || Object.getPrototypeOf(this).constructor.name;\n\n        let pathRoot = modelName + 's';\n\n        let dataIsSynced = new Promise((resolve) => this._dataIsSynced = resolve);\n        let dataSourceOptions = {synced: dataIsSynced};\n\n        if (options.dataSource && id) {\n            this._dataSource = options.dataSource;\n        } else if (options.dataSource) {\n            /* No id is present, generate a random one by pushing a new entry to the dataSource. */\n            this._dataSource = options.dataSource.push(data);\n        } else if (options.path && id) {\n            this._dataSource = dataSource.child(options.path + '/' + id || '', dataSourceOptions);\n        } else if (options.dataSnapshot) {\n            this._dataSource = dataSource.child(options.dataSnapshot.ref.path.toString(), dataSourceOptions);\n        } else if (id) {\n            /* If an id is present, use it to locate our model. */\n            this._dataSource = dataSource.child(pathRoot + '/' + id, dataSourceOptions);\n        } else {\n            /* No id is present, generate a random one by pushing a new entry to the dataSource. */\n            if (options.path) {\n                this._dataSource = dataSource.child(options.path).push(data);\n            } else {\n                this._dataSource = dataSource.child(pathRoot).push(data);\n            }\n        }\n\n        /* Re-construct core PrioritisedObject with new dataSource */\n        if (options.dataSnapshot) {\n            this._buildFromSnapshot(options.dataSnapshot);\n        } else {\n            this._buildFromDataSource(this._dataSource);\n        }\n\n        /* Write local data to model, if any data is present. */\n        this._writeLocalDataToModel(data).then(this._dataIsSynced);\n    }\n\n    /**\n     * Check if the model has been synchonized with the database\n     * @returns {Promise} Resolves when the model has been synchonized with the database\n     */\n    synced() {\n        return this._dataSource.synced();\n    }\n\n    /**\n     * Replaces all getters/setters defined on the model implementation with properties that trigger update events to the dataSource.\n     * @returns {void}\n     * @private\n     */\n    _replaceModelAccessorsWithDatabinding() {\n        let prototype = Object.getPrototypeOf(this);\n\n        if (~Object.getOwnPropertyNames(prototype).indexOf('id')) {\n            console.log(`Don't define an id property to ${prototype.constructor.name}, as this property is internally used by the PrioritisedArray`);\n        }\n\n        /* If the code is minified, then this.constructor._name is defined, in that case that also goes for the inheriting classes */\n        while (prototype.constructor._name || (!this.constructor._name && prototype.constructor.name !== 'Model')) {\n            /* Get all properties except the id and constructor of this model */\n            let propNames = difference(Object.getOwnPropertyNames(prototype), ['constructor', 'id']);\n\n            for (let name of propNames) {\n                let descriptor = Object.getOwnPropertyDescriptor(prototype, name);\n                if (descriptor && descriptor.get) {\n                    let value = this[name];\n                    delete this[name];\n                    ObjectHelper.addPropertyToObject(this, name, value, true, true, () => {\n                        this._onSetterTriggered();\n                    });\n                }\n            }\n\n            prototype = Object.getPrototypeOf(prototype);\n        }\n    }\n\n    /**\n     * Writes data, if present, to the Model's dataSource. Uses a transaction, meaning that only one update is triggered to the dataSource,\n     * even though multiple fields change.\n     * @param {Object} data Data to write, can be null.\n     * @returns {Promise} Resolves when the transaction is complete and synced\n     * @private\n     */\n    _writeLocalDataToModel(data) {\n        if (data) {\n            let isDataDifferent = false;\n            for (let name in data) {\n                if (Object.getOwnPropertyDescriptor(this, name) && this[name] !== data[name]) {\n                    isDataDifferent = true;\n                    break;\n                }\n            }\n\n            if (isDataDifferent) {\n                return this.transaction(function () {\n                    for (let name in data) {\n\n                        // only map properties that exists on our model\n                        if (Object.getOwnPropertyDescriptor(this, name)) {\n                            let value = data[name];\n                            this[name] = value;\n                        }\n                    }\n                }.bind(this));\n            }\n        }\n        return Promise.resolve();\n    }\n}\n"
  },
  {
    "__docId__": 99,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Model",
    "memberof": "src/core/Model.js",
    "longname": "src/core/Model.js~Model",
    "access": null,
    "export": true,
    "importPath": "./src/core/Model.js",
    "importStyle": "{Model}",
    "description": "A model that has attributes synced with the database.",
    "examples": [
      "export class Box extends Model {\n get label() {}\n get articleNumber() {}\n}"
    ],
    "lineNumber": 25,
    "interface": false,
    "extends": [
      "src/data/PrioritisedObject.js~PrioritisedObject"
    ]
  },
  {
    "__docId__": 100,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/core/Model.js~Model",
    "longname": "src/core/Model.js~Model#constructor",
    "access": null,
    "description": "Creates a new instance of a model.",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model} Model Instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Optional: The identifier for this model. For a user model this might be a user ID, for example. It\n          is used to build the path to the dataSource. This path is <root>/<model name appended with 's'>/<id>.\n          If no id is given, a randomly generated one will be pushed to the dataSource. You can use this for\n          creating new objects in the dataSource."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Optional: The initial data to fill the model with. The model will be extended with any\n                     properties present in the data parameter."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional: Additional options. Currently used is \"dataSnapshot\", which if present is used\n                         to fetch the initial model data. If not present, the model will add a one-time\n                         subscription to the dataSource to fetch initial data."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": "Model Instance."
    },
    "generator": false
  },
  {
    "__docId__": 101,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/core/Model.js~Model",
    "longname": "src/core/Model.js~Model#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/core/Model.js~Model",
    "longname": "src/core/Model.js~Model#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/core/Model.js~Model",
    "longname": "src/core/Model.js~Model#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/core/Model.js~Model",
    "longname": "src/core/Model.js~Model#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/core/Model.js~Model",
    "longname": "src/core/Model.js~Model#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/core/Model.js~Model",
    "longname": "src/core/Model.js~Model#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/core/Model.js~Model",
    "longname": "src/core/Model.js~Model#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "synced",
    "memberof": "src/core/Model.js~Model",
    "longname": "src/core/Model.js~Model#synced",
    "access": null,
    "description": "Check if the model has been synchonized with the database",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Resolves when the model has been synchonized with the database"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves when the model has been synchonized with the database"
    },
    "generator": false
  },
  {
    "__docId__": 109,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_replaceModelAccessorsWithDatabinding",
    "memberof": "src/core/Model.js~Model",
    "longname": "src/core/Model.js~Model#_replaceModelAccessorsWithDatabinding",
    "access": "private",
    "description": "Replaces all getters/setters defined on the model implementation with properties that trigger update events to the dataSource.",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 110,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_writeLocalDataToModel",
    "memberof": "src/core/Model.js~Model",
    "longname": "src/core/Model.js~Model#_writeLocalDataToModel",
    "access": "private",
    "description": "Writes data, if present, to the Model's dataSource. Uses a transaction, meaning that only one update is triggered to the dataSource,\neven though multiple fields change.",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Resolves when the transaction is complete and synced"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to write, can be null."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves when the transaction is complete and synced"
    },
    "generator": false
  },
  {
    "__docId__": 111,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/Router.js",
    "memberof": null,
    "longname": "src/core/Router.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Hans van den Akker (mysim1)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport EventEmitter                 from 'eventemitter3';\nimport {ObjectHelper}               from '../utils/ObjectHelper.js';\n\n/**\n * Abstract Router class which can be implemented to be used in an MVP setup.\n */\nexport class Router extends EventEmitter {\n\n    /**\n     *\n     */\n    constructor() {\n        super();\n        // make classes behave like context bound\n        ObjectHelper.bindAllMethods(this, this);\n\n        // make the router aware of controllers active in the application\n        // each controller will need to subscribe itself to this container.\n        this.controllers = [];\n\n        // when a default controller is designated. The router will map every route without a\n        // controller reference to the HomeController.\n        this.defaultController = 'Home';\n\n        // when a default method is designated. the router map will every route without a\n        // method reference to the HomeController's method.\n        this.defaultMethod = 'Index';\n    }\n\n    /**\n     * On a route change, calls the corresponding controller method with the given parameter values.\n     * @returns {Boolean} Whether the current route was successfully ran.\n     */\n    run() { }\n\n\n    /**\n     * Sets the initial controller and method to be activated whenever the controllers are activated.\n     * @param {Controller|Function|String} controller Default controller instance, controller constructor, or controller name to go to.\n     * @param {String} method Default method to call in given controller.\n     * @returns {void}\n     */\n    setDefault(controller, method) { }\n\n    /**\n     * Registers a single controller.\n     * @param {String} route Route to trigger handler on.\n     * @param {Function} handler Method to call on given route.\n     * @returns {void}\n     */\n    add(route, handler) { }\n\n    /**\n     * Triggers navigation to one of the controllers\n     * @param {Controller|Function|String} controller The controller instance, controller constructor, or controller name to go to.\n     * @param {String} method The method to call in given controller.\n     * @param {Object} params Dictonary of key-value pairs containing named arguments (i.e. {id: 1, test: \"yes\"})\n     * @returns {void}\n     */\n    go(controller, method, params) { }\n\n    /**\n     * Executes the controller handler associated with a given route, passing the route as a parameter.\n     * @param {Object} rule Rule handler to execute.\n     * @param {Object} route Route object to pass as parameter.\n     * @returns {void}\n     * @private\n     */\n    _executeRoute(rule, route) { }\n}"
  },
  {
    "__docId__": 112,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Router",
    "memberof": "src/core/Router.js",
    "longname": "src/core/Router.js~Router",
    "access": null,
    "export": true,
    "importPath": "./src/core/Router.js",
    "importStyle": "{Router}",
    "description": "Abstract Router class which can be implemented to be used in an MVP setup.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "eventemitter3~EventEmitter"
    ]
  },
  {
    "__docId__": 113,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/core/Router.js~Router",
    "longname": "src/core/Router.js~Router#constructor",
    "access": null,
    "description": "",
    "lineNumber": 21,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 114,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "controllers",
    "memberof": "src/core/Router.js~Router",
    "longname": "src/core/Router.js~Router#controllers",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "defaultController",
    "memberof": "src/core/Router.js~Router",
    "longname": "src/core/Router.js~Router#defaultController",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "defaultMethod",
    "memberof": "src/core/Router.js~Router",
    "longname": "src/core/Router.js~Router#defaultMethod",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 117,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "run",
    "memberof": "src/core/Router.js~Router",
    "longname": "src/core/Router.js~Router#run",
    "access": null,
    "description": "On a route change, calls the corresponding controller method with the given parameter values.",
    "lineNumber": 43,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} Whether the current route was successfully ran."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the current route was successfully ran."
    },
    "generator": false
  },
  {
    "__docId__": 118,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setDefault",
    "memberof": "src/core/Router.js~Router",
    "longname": "src/core/Router.js~Router#setDefault",
    "access": null,
    "description": "Sets the initial controller and method to be activated whenever the controllers are activated.",
    "lineNumber": 52,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Controller",
          "Function",
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "controller",
        "description": "Default controller instance, controller constructor, or controller name to go to."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "Default method to call in given controller."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 119,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "src/core/Router.js~Router",
    "longname": "src/core/Router.js~Router#add",
    "access": null,
    "description": "Registers a single controller.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Route to trigger handler on."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Method to call on given route."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 120,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "go",
    "memberof": "src/core/Router.js~Router",
    "longname": "src/core/Router.js~Router#go",
    "access": null,
    "description": "Triggers navigation to one of the controllers",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Controller",
          "Function",
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "controller",
        "description": "The controller instance, controller constructor, or controller name to go to."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "The method to call in given controller."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Dictonary of key-value pairs containing named arguments (i.e. {id: 1, test: \"yes\"})"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 121,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_executeRoute",
    "memberof": "src/core/Router.js~Router",
    "longname": "src/core/Router.js~Router#_executeRoute",
    "access": "private",
    "description": "Executes the controller handler associated with a given route, passing the route as a parameter.",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "rule",
        "description": "Rule handler to execute."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Route object to pass as parameter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 122,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/core/View.js",
    "memberof": null,
    "longname": "src/core/View.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Hans van den Akker (mysim1)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport extend                       from 'lodash/extend.js';\nimport cloneDeep                    from 'lodash/cloneDeep.js';\nimport FamousView                   from 'famous/core/View.js';\nimport LayoutController             from 'famous-flex/LayoutController.js';\n\nimport {limit}                      from 'arva-js/utils/Limiter.js';\n\nimport {ObjectHelper}               from '../utils/ObjectHelper.js';\nimport {SizeResolver}               from '../utils/view/SizeResolver.js';\nimport {Utils}                      from '../utils/view/Utils.js';\nimport {\n    DockedLayoutHelper,\n    FullSizeLayoutHelper,\n    TraditionalLayoutHelper\n}\n                                    from '../utils/view/LayoutHelpers.js';\nimport {RenderableHelper}           from '../utils/view/RenderableHelper.js';\nimport {ReflowingScrollView}        from '../components/ReflowingScrollView.js';\n\n/**\n * An Arva View. Can be constructed explicitly by using new View() but is more commonly used as a base class for\n * views used by the app.\n *\n */\nexport class View extends FamousView {\n\n    /**\n     * @example\n     * HomeController extends Controller {\n     *      Index() {\n     *          let view = new View();\n     *          view.add(new Surface({properties: {backgroundColor: 'red'}}));\n     *          return view\n     *      }\n     * }\n     * @example\n     * class HomeView extends View {\n     *      @layout.size(100, 100)\n     *      @layout.place.center()\n     *      mySurface = new Surface({properties: {backgroundColor: 'red'}})\n     * }\n     *\n     *\n     *\n     * @param {Object} options. The options passed to the view will be stored in this.options, but won't change any\n     * behaviour of the core functionality of the view. Instead, configuration of the View is done by decorators.\n     *\n     */\n    constructor(options = {}) {\n\n        super(options);\n\n        /* Bind all local methods to the current object instance, so we can refer to 'this'\n         * in the methods as expected, even when they're called from event handlers.        */\n        ObjectHelper.bindAllMethods(this, this);\n\n\n        this._copyPrototypeProperties();\n        this._initDataStructures();\n        this._initOwnDecorations();\n        this._initOptions(options);\n        this._initUtils();\n        this._constructDecoratedRenderables();\n\n        this._createLayoutController();\n        this._initTrueSizedBookkeeping();\n\n    }\n\n    //noinspection JSUnusedGlobalSymbols\n    /**\n     * Deprecated, it is no longer required to call build() from within your View instances.\n     * @deprecated\n     * @returns {void}\n     */\n    build() {\n        Utils.warn(`Arva: calling build() from within views is no longer necessary, any existing calls can safely be removed. Called from ${this._name()}`);\n    }\n\n    /**\n     * Reflows the layout while also informing any subscribing parents that a reflow has to take place\n     */\n    reflowRecursively() {\n        this.layout.reflowLayout();\n        this._eventOutput.emit('recursiveReflow');\n    }\n\n    /**\n     * Gets the size used when displaying a renderable on the screen the last tick\n     * @param {Renderable/Name} renderableOrName The renderable or the name of the renderable of which you need the size\n     */\n    getResolvedSize(renderableOrName) {\n        let renderable = renderableOrName;\n        if (typeof renderableOrName === 'string') {\n            renderable = this.renderables[renderableOrName];\n        }\n        let size = this._sizeResolver.getResolvedSize(renderable);\n\n        /* Backup: If size can't be resolved, then see if there's a size specified on the decorator */\n        if (!size && renderable.decorations) {\n            let decoratedSize = renderable.decorations.size;\n            let isValidSize = (inputSize) => typeof inputSize == 'number' && inputSize > 0;\n            if (decoratedSize && decoratedSize.every(isValidSize)) {\n                size = decoratedSize;\n            }\n        }\n\n        return size || [undefined, undefined];\n    }\n\n    /**\n     * Returns true if the view contains uncalculated surfaces\n     * @returns {Boolean}\n     */\n    containsUncalculatedSurfaces() {\n        return this._sizeResolver.containsUncalculatedSurfaces();\n    }\n\n    /**\n     * Adds a renderable to the layout.\n     * @param {Renderable} renderable The renderable to be added\n     * @param {String} renderableName The name (key) of the renderable\n     * @param {Decorator} Decorator Any decorator(s) to apply to the renderable\n     * @returns {Renderable} The renderable that was assigned\n     */\n    addRenderable(renderable, renderableName, ...decorators) {\n        /* Due to common mistake, we check if renderableName is a string */\n        if (typeof renderableName !== 'string') {\n            Utils.warn(`The second argument of addRenderable(...) was not a string. Please pass the renderable name in ${this._name()}`);\n        }\n        this._renderableHelper.applyDecoratorFunctionsToRenderable(renderable, decorators);\n        this._assignRenderable(renderable, renderableName);\n        this.layout.reflowLayout();\n        return renderable;\n    }\n\n    /**\n     * Removes the renderable from the view\n     * @param {String} renderableName The name of the renderable\n     */\n    removeRenderable(renderableName) {\n        this._renderableHelper.removeRenderable(renderableName);\n        this[renderableName] = undefined;\n        this.layout.reflowLayout();\n    }\n\n    /**\n     * Rearranges the order in which docked renderables are parsed for rendering, ensuring that 'renderableName' is processed\n     * before 'nextRenderableName'.\n     * @param {String} renderableName\n     * @param {String} nextRenderableName\n     */\n    prioritiseDockBefore(renderableName, nextRenderableName) {\n        this.reflowRecursively();\n        return this._renderableHelper.prioritiseDockBefore(renderableName, nextRenderableName);\n    }\n\n    /**\n     * @param {String} renderableName\n     * @param {String} prevRenderableName\n     */\n    prioritiseDockAfter(renderableName, prevRenderableName) {\n        this.reflowRecursively();\n        return this._renderableHelper.prioritiseDockAfter(renderableName, prevRenderableName);\n    }\n\n    /**\n     *\n     * @param {String} renderableName\n     * @param {Boolean} show. Whether to show or not\n     * @returns {Promise} when the renderable has finished its animation\n     */\n    showRenderable(renderableName, show = true) {\n        let renderable = this[renderableName];\n        if (!renderable.animationController) {\n            Utils.warn(`Trying to show renderable ${renderableName} which does not have an animationcontroller. Please use @layout.animate`);\n            return;\n        }\n        let decoratedSize = this[renderableName].decorations.size || (this[renderableName].decorations.dock ? this[renderableName].decorations.dock.size : undefined);\n        if (decoratedSize) {\n            /* Check if animationController has a true size specified. If so a reflow needs to be performed since there is a\n             * new size to take into account. */\n            for (let dimension of [0, 1]) {\n                if (this._sizeResolver.isValueTrueSized(this._sizeResolver.resolveSingleSize(decoratedSize[dimension], [NaN, NaN], dimension))) {\n                    this.reflowRecursively();\n                    break;\n                }\n\n            }\n        }\n        \n        return new Promise((resolve) => this._renderableHelper.showWithAnimationController(this.renderables[renderableName], renderable, show, resolve));\n    }\n\n    /**\n     * Decorates a renderable with other decorators. Using the same decorators as used previously will override the old ones.\n     * @example\n     * this.decorateRenderable('myRenderable',layout.size(100, 100));\n     *\n     * @param {String} renderableName The name of the renderable\n     * @param ...decorators The decorators that should be applied\n     */\n    decorateRenderable(renderableName, ...decorators) {\n        this._renderableHelper.decorateRenderable(renderableName, ...decorators);\n        this.reflowRecursively();\n    }\n\n    /**\n     * Sets a renderable flow state as declared in the @flow.stateStep, or @flow.defaultState\n     * @param {String} renderableName. The name of the renderable\n     * @param {String} stateName. The name of the state as declared in the first argument of the decorator\n     * @returns {*}\n     */\n    setRenderableFlowState(renderableName = '', stateName = '') {\n        return this._renderableHelper.setRenderableFlowState(renderableName, stateName);\n    }\n\n    /**\n     * Sets a renderable flow state as declared in the @flow.viewState\n     * @param {String} renderableName. The name of the renderable\n     * @param {String} stateName. The name of the state as declared in the first argument of the decorator\n     * @returns {*}\n     */\n    setViewFlowState(stateName = '') {\n        return this._renderableHelper.setViewFlowState(stateName, this.decorations.flow);\n    }\n\n    /**\n     * Gets the name of a flow state of a renderable.\n     *\n     * @param {String} renderableName the name of the renderable of which the flow state is concerned\n     * @returns {String} stateName the name of the state that the renderable is in\n     */\n    getRenderableFlowState(renderableName = '') {\n        return this._renderableHelper.getRenderableFlowState(renderableName);\n    }\n\n    /**\n     * Gets the name of the flow state of a view.\n     *\n     * @returns {String} stateName the name of the state that this view is in.\n     */\n    getViewFlowState() {\n        return this._renderableHelper.getViewFlowState(this.decorations.flow);\n    }\n\n    /**\n     * Replaces an existing decorated renderable with a new renderable, preserving all necessary state and decorations\n     * @param {String} renderableName. The name of the renderable\n     * @param newRenderable\n     */\n    replaceRenderable(renderableName, newRenderable) {\n        this._renderableHelper.replaceRenderable(renderableName, newRenderable);\n        this.reflowRecursively();\n        this[renderableName] = newRenderable;\n    }\n\n    /**\n     * Gets the scroll view that was set if @layout.scrollable was used on the view\n     * @returns {ReflowingScrollView}\n     */\n    getScrollView() {\n        return this._scrollView;\n    }\n\n    /**\n     * getSize() is called by this view and by layoutControllers. For lazy people that don't want to specifiy their own getSize() function,\n     * we provide a fallback. This function can be performance expensive when using non-docked renderables, but for docked renderables it\n     * is efficient and convenient]\n     * @returns {*[]}\n     */\n    getSize() {\n        return this._getLayoutSize();\n    }\n\n    /**\n     * Hides a renderable that has been declared with @layout.animate\n     * @param renderableName\n     * @returns {Promise} when the renderable has finished its animation\n     */\n    hideRenderable(renderableName) {\n        return this.showRenderable(renderableName, false);\n    }\n\n    /**\n     * Passes a callback that gets called every time the context size changes.\n     *\n     * @param {Function} callback a callback with arguments (width, height)\n     */\n    onNewSize(callback) {\n        this._onNewSizeCallbacks.push(callback);\n    }\n\n    /**\n     * Gets a (new) context size of the view. This will always happen at least once immediately after the view is constructed.\n     * Hence, it can safely be used in the constructor to get the (initial) size of the view.\n     *\n     * @example\n     * constructor(options){\n     *  super(options);\n     *  onceNewSize.then((width, height) => {\n     *      console.log(width, height);\n     *  });\n     * }\n     *\n     * @returns {Promise} Resolves when there's a new size\n     */\n    onceNewSize() {\n        return new Promise((resolve) => {\n            this._onNewSizeCallbacks.push(function onNewSize(size)  {\n                this._onNewSizeCallbacks.splice(this._onNewSizeCallbacks.indexOf(onNewSize), 1);\n                resolve(size);\n            }.bind(this))\n        })\n    }\n\n    /**\n     * Repeat a certain flowState indefinitely\n     * @param renderableName\n     * @param stateName\n     * @param {Boolean} persistent. If true, then it will keep on repeating until explicitly cancelled by cancelRepeatFlowState.\n     * If false, it will be interrupted automatically by any interrput to another state. Defaults to true\n     * @returns {Promise} resolves to false if the flow state can't be repeated due to an existing running repeat\n     */\n    async repeatFlowState(renderableName = '', stateName = '', persistent = true){\n        if(!this._runningRepeatingFlowStates[renderableName]){\n            this._runningRepeatingFlowStates[renderableName] = {persistent};\n            while(this._runningRepeatingFlowStates[renderableName] && (await this.setRenderableFlowState(renderableName, stateName) || persistent))\n            {}\n            delete this._runningRepeatingFlowStates[renderableName];\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Cancel a repeating renderable. This will cancel the animation for next flow-cycle, it won't interject the current animation cycle.\n     * @param renderableName\n     */\n    cancelRepeatFlowState(renderableName){\n        if(this._runningRepeatingFlowStates){\n            delete this._runningRepeatingFlowStates[renderableName];\n        }\n    }\n\n    /**\n     * Initiate a renderable to a default flow state.\n     * @param renderableName\n     * @param stateName\n     */\n    setDefaultState(renderableName, stateName) {\n        for (let step of this[renderableName].decorations.flow.states[stateName].steps) {\n            this.decorateRenderable(renderableName, ...step.transformations);\n        }\n    }\n\n    /**\n     * Inits the utils that are used as helper classes for the view\n     * @private\n     */\n    _initUtils() {\n        this._sizeResolver = new SizeResolver();\n        this._sizeResolver.on('layoutControllerReflow', this._requestLayoutControllerReflow);\n        this._sizeResolver.on('reflow', () => this.layout.reflowLayout());\n        this._sizeResolver.on('reflowRecursively', this.reflowRecursively);\n        this._dockedRenderablesHelper = new DockedLayoutHelper(this._sizeResolver);\n        this._fullSizeLayoutHelper = new FullSizeLayoutHelper(this._sizeResolver);\n        this._traditionalLayoutHelper = new TraditionalLayoutHelper(this._sizeResolver);\n        this._renderableHelper = new RenderableHelper(this._bindToSelf,this._setPipeToSelf, this.renderables, this._sizeResolver);\n    }\n\n    /** Requests for a parent LayoutController trying to resolve the size of this view\n     * @private\n     */\n    _requestLayoutControllerReflow() {\n        this._nodes = {_trueSizeRequested: true};\n        //TODO: Do we really need to emit this?\n        this._eventOutput.emit('layoutControllerReflow');\n    }\n\n    _getRenderableOptions(renderableName, decorations = this.renderables[renderableName]) {\n        let decoratorOptions = decorations.constructionOptionsMethod ? decorations.constructionOptionsMethod.call(this, this.options) : {};\n        if (!Utils.isPlainObject(decoratorOptions)) {\n            Utils.warn(`Invalid option '${decoratorOptions}' given to item ${renderableName}`);\n        }\n        return decoratorOptions;\n    }\n\n    /**\n     * Construct all the renderables that have been decorated in the class.\n     * @private\n     */\n    _constructDecoratedRenderables() {\n\n        let classConstructorList = [];\n\n        /* Reverse the class list becaues rit makes more sense to make the renderables of the parent before the renderables\n         * of this view\n        */\n        for (let currentClass = this; currentClass.__proto__.constructor !== View; currentClass = Object.getPrototypeOf(currentClass)) {\n            classConstructorList.push(currentClass.__proto__.constructor);\n        }\n        classConstructorList.reverse();\n\n\n        for (let currentClassConstructor of classConstructorList) {\n            let renderableConstructors = this.renderableConstructors.get(currentClassConstructor);\n            for (let renderableName in renderableConstructors) {\n                let decorations = renderableConstructors[renderableName].decorations;\n\n                let renderable = renderableConstructors[renderableName].call(this, this._getRenderableOptions(renderableName, decorations));\n\n                /* Clone the decorator properties, because otherwise every view of the same type willl share them between\n                 * the same corresponding renderable. TODO: profiling reveals that cloneDeep affects performance\n                 */\n                renderable.decorations = cloneDeep(extend({}, decorations, renderable.decorations || {}));\n\n\n                /* Since after constructor() of this View class is called, all decorated renderables will\n                 * be attempted to be initialized by Babel / the ES7 class properties spec, we'll need to\n                 * override the descriptor get/initializer to return this specific instance once.\n                 *\n                 * If we don't do this, the View will have its renderables overwritten by new renderable instances\n                 * that don't have constructor.options applied to them correctly. If we always return this specific instance\n                 * instead of only just once, any instantiation of the same View class somewhere else in the code will refer\n                 * to the renderables of this instance, which is unwanted.\n                 */\n                let {descriptor} = decorations;\n                if (descriptor) {\n                    if (descriptor.get) {\n                        let originalGet = decorations.descriptor.get;\n                        descriptor.get = () => {\n                            descriptor.get = originalGet;\n                            return renderable;\n                        }\n                    }\n                    if (descriptor.initializer) {\n                        let originalInitializer = decorations.descriptor.initializer;\n                        descriptor.initializer = () => {\n                            descriptor.initializer = originalInitializer;\n                            return renderable;\n                        }\n                    }\n                }\n                this._assignRenderable(renderable, renderableName);\n            }\n        }\n    }\n\n\n    /**\n     * Assigns a renderable to this view, without setting this[renderableName]\n     * @param {Renderable} renderable the renderable that is going to be added\n     * @param {String} renderableName the name of the renderable\n     * @private\n     */\n    _assignRenderable(renderable, renderableName) {\n        this._renderableHelper.assignRenderable(renderable, renderableName);\n        /* Do add property to object because there can be a getter defined instead of a class property,\n         * in which case we have to use the ObjectHelper\n         */\n        ObjectHelper.addPropertyToObject(this, renderableName, renderable, true, true, null, false);\n    }\n\n    _layoutDecoratedRenderables(context, options) {\n        let dockedRenderables = this._renderableHelper;\n        this._dockedRenderablesHelper.layout(dockedRenderables.getRenderableGroup('docked'), dockedRenderables.getRenderableGroup('filled'), context, this.decorations);\n        this._fullSizeLayoutHelper.layout(dockedRenderables.getRenderableGroup('fullSize'), context, this.decorations);\n        this._traditionalLayoutHelper.layout(dockedRenderables.getRenderableGroup('traditional'), context, this.decorations);\n    }\n\n    /**\n     * Combines all layouts defined in subclasses of the View into a single layout for the LayoutController.\n     * @returns {void}\n     * @private\n     */\n    _createLayoutController() {\n        let hasFlowyRenderables = this._renderableHelper.hasFlowyRenderables();\n        this.layout = new LayoutController({\n            flow: !!this.decorations.useFlow || hasFlowyRenderables,\n            partialFlow: !this.decorations.useFlow,\n            flowOptions: this.decorations.flowOptions || {spring: {period: 200}},\n            layout: function (context, options) {\n\n                /* Because views that extend this View class first call super() and then define their renderables,\n                 * we wait until the first engine render tick to add our renderables to the layout, when the view will have declared them all.\n                 * layout.setDataSource() will automatically pipe events from the renderables to this View. */\n                if (!this._initialised) {\n                    this.layout.setDataSource(this.renderables);\n                    this._renderableHelper.pipeAllRenderables();\n                    this._renderableHelper.initializeAnimations();\n                    this._initialised = true;\n                    this.layout.reflowLayout();\n\n                    /*\n                     * When the data source is set, it will not be reflected in the context yet because the layout is already\n                     * prepared for the previous (empty) renderable data source. Therefore, it's a waste of resources\n                     * and mysterious bugs to continue. We will wait for the next rendering cycle. However, if views\n                     * are only having decorated renderables, then we don't have to do this whatsoever\n                     */\n                    return;\n                }\n\n                /* Layout all renderables that have decorators (e.g. @someDecorator) */\n                this._layoutDecoratedRenderables(context, options);\n                if (this.decorations.customLayoutFunction) {\n                    this.decorations.customLayoutFunction(context);\n                }\n\n                this._doTrueSizedSurfacesBookkeeping();\n\n                /* Legacy context.set() based layout functions */\n                if (this.layouts.length) {\n                    this._callLegacyLayoutFunctions(context, options);\n                }\n            }.bind(this)\n        });\n\n        this._eventInput.on('recursiveReflow', () => {\n            this.reflowRecursively();\n        });\n\n        /* Add the layoutController to this View's rendering context. */\n        this._prepareLayoutController();\n    }\n\n    /**\n     * Layout all renderables that have explicit context.set() calls in this View's legacy layout array.\n     * @returns {void}\n     * @private\n     */\n    _callLegacyLayoutFunctions(context, options) {\n        for (let layout of this.layouts) {\n            try {\n                switch (typeof layout) {\n                    case 'function':\n                        layout.call(this, context, options);\n                        break;\n                    default:\n                        Utils.warn(`Unrecognized layout specification in view '${this._name()}'.`);\n                        break;\n                }\n            } catch (error) {\n                Utils.warn(`Exception thrown in ${this._name()}:`);\n                console.log(error);\n            }\n        }\n    }\n\n    /**\n     * Either adds this.layout (a LayoutController) to the current View, or a FlexScrollView containing this.layout if this view\n     * has been decorated with a @scrollable.\n     * @returns {void}\n     * @private\n     */\n    _prepareLayoutController() {\n        let {scrollableOptions} = this.decorations;\n        if (scrollableOptions) {\n            this._scrollView = new ReflowingScrollView(scrollableOptions);\n            this.layout.getSize = this.getSize;\n            this._scrollView.push(this.layout);\n            this.pipe(this._scrollView);\n            this.add(this._scrollView);\n        }\n        else {\n            this.add(this.layout);\n        }\n    }\n\n    /**\n     * Calculates the total height of the View's layout when it's embedded inside a FlexScrollView (i.e. @scrollable is set on the View),\n     * by iterating over each renderable inside the View, and finding the minimum and maximum y values at which they are drawn.\n     *\n     *\n     * @returns {*[]}\n     * @private\n     */\n    _getLayoutSize() {\n        let dockedRenderables = this._renderableHelper.getRenderableGroup('docked');\n        let traditionalRenderables = this._renderableHelper.getRenderableGroup('traditional');\n        let filledRenderables = this._renderableHelper.getRenderableGroup('filled');\n        if (!traditionalRenderables && !dockedRenderables) {\n            return [undefined, undefined];\n        }\n        let totalSize = [undefined, undefined];\n        if (dockedRenderables || filledRenderables) {\n            totalSize = this._dockedRenderablesHelper.boundingBoxSize(dockedRenderables, filledRenderables, this.decorations);\n        }\n\n        if (traditionalRenderables) {\n            let traditionalRenderablesBoundingBox = this._traditionalLayoutHelper.boundingBoxSize(traditionalRenderables);\n            for (let [dimension, singleSize] of totalSize.entries()) {\n                let traditionalSingleSize = traditionalRenderablesBoundingBox[dimension];\n                if (traditionalSingleSize !== undefined && (singleSize === undefined || singleSize < traditionalSingleSize)) {\n                    totalSize[dimension] = traditionalSingleSize;\n                }\n            }\n        }\n        return totalSize;\n\n    }\n\n    /**\n     * Retrieves the class name of the subclass View instance.\n     * @returns {string}\n     * @private\n     */\n    _name() {\n        return Object.getPrototypeOf(this).constructor.name;\n    }\n\n    /**\n     * Copies prototype properties set by decorators to this\n     * @private\n     */\n    _copyPrototypeProperties() {\n        let prototype = Object.getPrototypeOf(this);\n\n        /* Move over all renderable- and decoration information that decorators.js set to the View prototype */\n        for (let name of ['decorationsMap', 'renderableConstructors']) {\n            this[name] = cloneDeep(prototype[name]) || new Map();\n        }\n    }\n\n    /**\n     * Inits the decorations that is set on a class level\n     * @private\n     */\n    _initOwnDecorations() {\n        for (let currentClass = this; currentClass.__proto__.constructor !== View; currentClass = Object.getPrototypeOf(currentClass)) {\n            /* The close the decoration is to this constructor in the prototype chain, the higher the priority */\n            let decorations = this.decorationsMap.get(currentClass.__proto__.constructor);\n            for (let property in decorations) {\n                if (!(property in this.decorations)) {\n                    this.decorations[property] = decorations[property];\n                }\n            }\n        }\n\n        if(this.decorations.dynamicDockPadding) {\n            this.onNewSize((size) => this.decorations.viewMargins = this.decorations.dynamicDockPadding(size));\n        }\n\n        if (!this.decorations.extraTranslate) {\n            this.decorations.extraTranslate = [0, 0, 10];\n        }\n\n    }\n\n    _doTrueSizedSurfacesBookkeeping() {\n        this._nodes._trueSizeRequested = false;\n    }\n\n    _initTrueSizedBookkeeping() {\n        this.layout.on('layoutstart', ({oldSize, size}) => {\n            if (size[0] !== oldSize[0] ||\n                size[1] !== oldSize[1]) {\n                this._sizeResolver.doTrueSizedBookkeeping();\n                ///\n                //TODO: Kept for legacy reasons, but remove all listeners to this function\n                this._eventOutput.emit('newSize', size);\n                for(let callback of this._onNewSizeCallbacks){\n                    callback(size);\n                }\n            }\n        });\n        /* Hack to make the layoutcontroller reevaluate sizes on resize of the parent */\n        this._nodes = {_trueSizedRequested: false};\n        /* This needs to be set in order for the LayoutNodeManager to be happy */\n        this.options.size = this.options.size || [true, true];\n    }\n\n    _initOptions(options) {\n        if (!Utils.isPlainObject(options)) {\n            Utils.warn(`View ${this._name()} initialized with invalid non-object arguments`);\n        }\n        /**\n         * A copy of the options that were passed in the constructor\n         *\n         * @type {Object}\n         */\n        this.options = options;\n    }\n\n    _initDataStructures() {\n        if (!this.renderables) {\n            /**\n             * The renderables \"outputted\" by the view that are passed to the underlying famous-flex layer\n             *\n             * @type {Object}\n             */\n            this.renderables = {};\n        }\n        if (!this.layouts) {\n            /**\n             * @deprecated\n             *`\n             * The old way of setting the spec of the renderables created by adding renderables through\n             * `this.renderables.myRenderable = ....\n             *\n             * @type {Array|Function}\n             */\n            this.layouts = [];\n        }\n\n        if (!this.decorations) {\n            this.decorations = {};\n        }\n\n\n        this._runningRepeatingFlowStates = {};\n        this._onNewSizeCallbacks = [];\n    }\n\n    /**\n     * Binds the method to this view. Used by the util DecoratedRenderables\n     * @param {Function} method The method that is about to be bound\n     * @returns {*}\n     * @private\n     */\n    _bindToSelf(method) {\n        return method.bind(this);\n    }\n\n    /**\n     * Pipes a renderable to this view. Used by the util DecoratedRenderables\n     * @param {Function} method The method that is about to be bound\n     * @param {Boolean} enable set to false to unpipe\n     * @returns {Boolean} true if piping was successful, otherwise false\n     * @private\n     */\n    _setPipeToSelf(renderable, enable = true) {\n        let methodName = enable ? 'pipe' : 'unpipe';\n        /* Auto pipe events from the renderable to the view */\n        if (renderable && renderable[methodName]) {\n            /*\n             * We see it as a bit of a mystery why the piping needs to be done both to this and this._eventOutput,\n             * but they both seem to be necessary so I'm gonna leave it for now.\n             */\n            renderable[methodName](this);\n            renderable[methodName](this._eventOutput);\n            return true;\n        }\n        return false;\n    }\n}"
  },
  {
    "__docId__": 123,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "View",
    "memberof": "src/core/View.js",
    "longname": "src/core/View.js~View",
    "access": null,
    "export": true,
    "importPath": "./src/core/View.js",
    "importStyle": "{View}",
    "description": "An Arva View. Can be constructed explicitly by using new View() but is more commonly used as a base class for\nviews used by the app.",
    "lineNumber": 34,
    "interface": false,
    "extends": [
      "famous/core/View.js~FamousView"
    ]
  },
  {
    "__docId__": 124,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#constructor",
    "access": null,
    "description": "",
    "examples": [
      "HomeController extends Controller {\n     Index() {\n         let view = new View();\n         view.add(new Surface({properties: {backgroundColor: 'red'}}));\n         return view\n     }\n}",
      "class HomeView extends View {\n     @layout.size(100, 100)\n     @layout.place.center()\n     mySurface = new Surface({properties: {backgroundColor: 'red'}})\n}"
    ],
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options.",
        "description": "The options passed to the view will be stored in this.options, but won't change any\nbehaviour of the core functionality of the view. Instead, configuration of the View is done by decorators."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 125,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "build",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#build",
    "access": null,
    "description": "Deprecated, it is no longer required to call build() from within your View instances.",
    "lineNumber": 85,
    "deprecated": true,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 126,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reflowRecursively",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#reflowRecursively",
    "access": null,
    "description": "Reflows the layout while also informing any subscribing parents that a reflow has to take place",
    "lineNumber": 92,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 127,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getResolvedSize",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#getResolvedSize",
    "access": null,
    "description": "Gets the size used when displaying a renderable on the screen the last tick",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "Renderable/Name"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableOrName",
        "description": "The renderable or the name of the renderable of which you need the size"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 128,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "containsUncalculatedSurfaces",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#containsUncalculatedSurfaces",
    "access": null,
    "description": "Returns true if the view contains uncalculated surfaces",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 129,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addRenderable",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#addRenderable",
    "access": null,
    "description": "Adds a renderable to the layout.",
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Renderable} The renderable that was assigned"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Renderable"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": "The renderable to be added"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": "The name (key) of the renderable"
      },
      {
        "nullable": null,
        "types": [
          "Decorator"
        ],
        "spread": false,
        "optional": false,
        "name": "Decorator",
        "description": "Any decorator(s) to apply to the renderable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Renderable"
      ],
      "spread": false,
      "description": "The renderable that was assigned"
    },
    "generator": false
  },
  {
    "__docId__": 130,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeRenderable",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#removeRenderable",
    "access": null,
    "description": "Removes the renderable from the view",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": "The name of the renderable"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 131,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "prioritiseDockBefore",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#prioritiseDockBefore",
    "access": null,
    "description": "Rearranges the order in which docked renderables are parsed for rendering, ensuring that 'renderableName' is processed\nbefore 'nextRenderableName'.",
    "lineNumber": 162,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nextRenderableName",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 132,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "prioritiseDockAfter",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#prioritiseDockAfter",
    "access": null,
    "description": "",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "prevRenderableName",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 133,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "showRenderable",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#showRenderable",
    "access": null,
    "description": "",
    "lineNumber": 182,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} when the renderable has finished its animation"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "show.",
        "description": "Whether to show or not"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "when the renderable has finished its animation"
    },
    "generator": false
  },
  {
    "__docId__": 134,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "decorateRenderable",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#decorateRenderable",
    "access": null,
    "description": "Decorates a renderable with other decorators. Using the same decorators as used previously will override the old ones.",
    "examples": [
      "this.decorateRenderable('myRenderable',layout.size(100, 100));"
    ],
    "lineNumber": 212,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": "The name of the renderable"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "...decorators",
        "description": "The decorators that should be applied"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 135,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setRenderableFlowState",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#setRenderableFlowState",
    "access": null,
    "description": "Sets a renderable flow state as declared in the @flow.stateStep, or @flow.defaultState",
    "lineNumber": 223,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName.",
        "description": "The name of the renderable"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "stateName.",
        "description": "The name of the state as declared in the first argument of the decorator"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 136,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setViewFlowState",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#setViewFlowState",
    "access": null,
    "description": "Sets a renderable flow state as declared in the @flow.viewState",
    "lineNumber": 233,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName.",
        "description": "The name of the renderable"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "stateName.",
        "description": "The name of the state as declared in the first argument of the decorator"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 137,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getRenderableFlowState",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#getRenderableFlowState",
    "access": null,
    "description": "Gets the name of a flow state of a renderable.",
    "lineNumber": 243,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} stateName the name of the state that the renderable is in"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": "the name of the renderable of which the flow state is concerned"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "stateName the name of the state that the renderable is in"
    },
    "generator": false
  },
  {
    "__docId__": 138,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getViewFlowState",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#getViewFlowState",
    "access": null,
    "description": "Gets the name of the flow state of a view.",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} stateName the name of the state that this view is in."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "stateName the name of the state that this view is in."
    },
    "generator": false
  },
  {
    "__docId__": 139,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "replaceRenderable",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#replaceRenderable",
    "access": null,
    "description": "Replaces an existing decorated renderable with a new renderable, preserving all necessary state and decorations",
    "lineNumber": 261,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName.",
        "description": "The name of the renderable"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newRenderable",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 140,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getScrollView",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#getScrollView",
    "access": null,
    "description": "Gets the scroll view that was set if @layout.scrollable was used on the view",
    "lineNumber": 271,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ReflowingScrollView}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "ReflowingScrollView"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 141,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSize",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#getSize",
    "access": null,
    "description": "getSize() is called by this view and by layoutControllers. For lazy people that don't want to specifiy their own getSize() function,\nwe provide a fallback. This function can be performance expensive when using non-docked renderables, but for docked renderables it\nis efficient and convenient]",
    "lineNumber": 281,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*[]}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*[]"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 142,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hideRenderable",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#hideRenderable",
    "access": null,
    "description": "Hides a renderable that has been declared with @layout.animate",
    "lineNumber": 290,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} when the renderable has finished its animation"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "when the renderable has finished its animation"
    },
    "generator": false
  },
  {
    "__docId__": 143,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onNewSize",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#onNewSize",
    "access": null,
    "description": "Passes a callback that gets called every time the context size changes.",
    "lineNumber": 299,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "a callback with arguments (width, height)"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 144,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onceNewSize",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#onceNewSize",
    "access": null,
    "description": "Gets a (new) context size of the view. This will always happen at least once immediately after the view is constructed.\nHence, it can safely be used in the constructor to get the (initial) size of the view.",
    "examples": [
      "constructor(options){\n super(options);\n onceNewSize.then((width, height) => {\n     console.log(width, height);\n });\n}"
    ],
    "lineNumber": 317,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Resolves when there's a new size"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves when there's a new size"
    },
    "generator": false
  },
  {
    "__docId__": 145,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "repeatFlowState",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#repeatFlowState",
    "access": null,
    "description": "Repeat a certain flowState indefinitely",
    "lineNumber": 334,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} resolves to false if the flow state can't be repeated due to an existing running repeat"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "stateName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "persistent.",
        "description": "If true, then it will keep on repeating until explicitly cancelled by cancelRepeatFlowState.\nIf false, it will be interrupted automatically by any interrput to another state. Defaults to true"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "resolves to false if the flow state can't be repeated due to an existing running repeat"
    },
    "generator": false
  },
  {
    "__docId__": 146,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "cancelRepeatFlowState",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#cancelRepeatFlowState",
    "access": null,
    "description": "Cancel a repeating renderable. This will cancel the animation for next flow-cycle, it won't interject the current animation cycle.",
    "lineNumber": 350,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 147,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setDefaultState",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#setDefaultState",
    "access": null,
    "description": "Initiate a renderable to a default flow state.",
    "lineNumber": 361,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "stateName",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 148,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_initUtils",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_initUtils",
    "access": "private",
    "description": "Inits the utils that are used as helper classes for the view",
    "lineNumber": 371,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 149,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_sizeResolver",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_sizeResolver",
    "access": null,
    "description": null,
    "lineNumber": 372,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 150,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dockedRenderablesHelper",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_dockedRenderablesHelper",
    "access": null,
    "description": null,
    "lineNumber": 376,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 151,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_fullSizeLayoutHelper",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_fullSizeLayoutHelper",
    "access": null,
    "description": null,
    "lineNumber": 377,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 152,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_traditionalLayoutHelper",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_traditionalLayoutHelper",
    "access": null,
    "description": null,
    "lineNumber": 378,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_renderableHelper",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_renderableHelper",
    "access": null,
    "description": null,
    "lineNumber": 379,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 154,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_requestLayoutControllerReflow",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_requestLayoutControllerReflow",
    "access": "private",
    "description": "Requests for a parent LayoutController trying to resolve the size of this view",
    "lineNumber": 385,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 155,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_nodes",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_nodes",
    "access": null,
    "description": null,
    "lineNumber": 386,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getRenderableOptions",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_getRenderableOptions",
    "access": null,
    "description": null,
    "lineNumber": 391,
    "undocument": true,
    "params": [
      {
        "name": "renderableName",
        "types": [
          "*"
        ]
      },
      {
        "name": "decorations",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 157,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_constructDecoratedRenderables",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_constructDecoratedRenderables",
    "access": "private",
    "description": "Construct all the renderables that have been decorated in the class.",
    "lineNumber": 403,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 158,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_assignRenderable",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_assignRenderable",
    "access": "private",
    "description": "Assigns a renderable to this view, without setting this[renderableName]",
    "lineNumber": 467,
    "params": [
      {
        "nullable": null,
        "types": [
          "Renderable"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": "the renderable that is going to be added"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": "the name of the renderable"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 159,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_layoutDecoratedRenderables",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_layoutDecoratedRenderables",
    "access": null,
    "description": null,
    "lineNumber": 475,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 160,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_createLayoutController",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_createLayoutController",
    "access": "private",
    "description": "Combines all layouts defined in subclasses of the View into a single layout for the LayoutController.",
    "lineNumber": 487,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 161,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "layout",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#layout",
    "access": null,
    "description": null,
    "lineNumber": 489,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_initialised",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_initialised",
    "access": null,
    "description": null,
    "lineNumber": 502,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_callLegacyLayoutFunctions",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_callLegacyLayoutFunctions",
    "access": "private",
    "description": "Layout all renderables that have explicit context.set() calls in this View's legacy layout array.",
    "lineNumber": 542,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 164,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_prepareLayoutController",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_prepareLayoutController",
    "access": "private",
    "description": "Either adds this.layout (a LayoutController) to the current View, or a FlexScrollView containing this.layout if this view\nhas been decorated with a @scrollable.",
    "lineNumber": 566,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 165,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_scrollView",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_scrollView",
    "access": null,
    "description": null,
    "lineNumber": 569,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getLayoutSize",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_getLayoutSize",
    "access": "private",
    "description": "Calculates the total height of the View's layout when it's embedded inside a FlexScrollView (i.e. @scrollable is set on the View),\nby iterating over each renderable inside the View, and finding the minimum and maximum y values at which they are drawn.",
    "lineNumber": 588,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*[]}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*[]"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 167,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_name",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_name",
    "access": "private",
    "description": "Retrieves the class name of the subclass View instance.",
    "lineNumber": 618,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 168,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_copyPrototypeProperties",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_copyPrototypeProperties",
    "access": "private",
    "description": "Copies prototype properties set by decorators to this",
    "lineNumber": 626,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 169,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_initOwnDecorations",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_initOwnDecorations",
    "access": "private",
    "description": "Inits the decorations that is set on a class level",
    "lineNumber": 639,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 170,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_doTrueSizedSurfacesBookkeeping",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_doTrueSizedSurfacesBookkeeping",
    "access": null,
    "description": null,
    "lineNumber": 660,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 171,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_initTrueSizedBookkeeping",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_initTrueSizedBookkeeping",
    "access": null,
    "description": null,
    "lineNumber": 664,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 172,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_nodes",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_nodes",
    "access": null,
    "description": null,
    "lineNumber": 678,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 173,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_initOptions",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_initOptions",
    "access": null,
    "description": null,
    "lineNumber": 683,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 174,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#options",
    "access": null,
    "description": "A copy of the options that were passed in the constructor",
    "lineNumber": 692,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 175,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_initDataStructures",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_initDataStructures",
    "access": null,
    "description": null,
    "lineNumber": 695,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 176,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "renderables",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#renderables",
    "access": null,
    "description": "The renderables \"outputted\" by the view that are passed to the underlying famous-flex layer",
    "lineNumber": 702,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 177,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "layouts",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#layouts",
    "access": null,
    "description": "",
    "lineNumber": 713,
    "deprecated": "`\nThe old way of setting the spec of the renderables created by adding renderables through\n`this.renderables.myRenderable = ....",
    "type": {
      "nullable": null,
      "types": [
        "Array",
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 178,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "decorations",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#decorations",
    "access": null,
    "description": null,
    "lineNumber": 717,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_runningRepeatingFlowStates",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_runningRepeatingFlowStates",
    "access": null,
    "description": null,
    "lineNumber": 721,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onNewSizeCallbacks",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_onNewSizeCallbacks",
    "access": null,
    "description": null,
    "lineNumber": 722,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_bindToSelf",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_bindToSelf",
    "access": "private",
    "description": "Binds the method to this view. Used by the util DecoratedRenderables",
    "lineNumber": 731,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "The method that is about to be bound"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 182,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_setPipeToSelf",
    "memberof": "src/core/View.js~View",
    "longname": "src/core/View.js~View#_setPipeToSelf",
    "access": "private",
    "description": "Pipes a renderable to this view. Used by the util DecoratedRenderables",
    "lineNumber": 742,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} true if piping was successful, otherwise false"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "The method that is about to be bound"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "enable",
        "description": "set to false to unpipe"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "true if piping was successful, otherwise false"
    },
    "generator": false
  },
  {
    "__docId__": 183,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/DataSource.js",
    "memberof": null,
    "longname": "src/data/DataSource.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Tom Clement (tjclement)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nexport class DataSource {\n\n    /**\n     * @param {String} path Full path to resource in remote data storage.\n     * @return {DataSource} DataSource instance.\n     **/\n    constructor(path) {\n        this._dataReference = null;\n    }\n\n    /**\n     * Indicate that the DataSource can be inherited when instantiating a list of models. By\n     * default we indicate false, which should trigger data model instantiation to create unique\n     * DataSource references to each model either in array or directly.\n     *\n     * If set to false, model updates trigger creation of a new DataSource instance. (default)\n     *\n     * @returns {Boolean} Whether the DataSource is inheritable.\n     */\n    get inheritable() {\n        return false;\n    }\n\n    /**\n     * Returns the full path to this dataSource's source on the remote storage provider.\n     * @returns {String} Full resource path.\n     */\n    toString() {\n    }\n\n    /**\n     * Returns a dataSource reference to the given child branch of the current dataSource.\n     * @param {String} childName Child branch name.\n     * @param {Object} options Optional: additional options to pass to new DataSource instance.\n     * @returns {DataSource} New dataSource instance pointing to the given child branch.\n     */\n    child(childName, options = null) {\n    }\n\n    /**\n     * Returns the full URL to the path on the dataSource. Functionally identical to toString().\n     * @returns {String} Full resource path.\n     */\n    path() {\n    }\n\n    /**\n     * Returns the name of the current branch in the path on the dataSource.\n     * @returns {String} Current branch name.\n     */\n    key() {\n    }\n\n    /**\n     * Writes newData to the path this dataSource was constructed with.\n     * @param {Object} newData Data to write to dataSource.\n     * @returns {Promise} Resolves when write to server is complete.\n     */\n    set(newData) {\n        return Promise.resolve();\n    }\n\n    /**\n     * Removes the object and all underlying children that this dataSource points to.\n     * @returns {void}\n     */\n    remove() {\n    }\n\n    /**\n     * Writes newData to the path this dataSource was constructed with, appended by a random UID generated by\n     * the dataSource.\n     * @param {Object} newData New data to append to dataSource.\n     * @returns {void}\n     */\n    push(newData) {\n    }\n\n    /**\n     * Writes newData with given priority (ordering) to the path this dataSource was constructed with.\n     * @param {Object} newData New data to set.\n     * @param {String|Number} priority Priority value by which the data should be ordered.\n     * @returns {Promise} Resolves when write to server is complete.\n     */\n    setWithPriority(newData, priority) {\n        return Promise.resolve();\n    }\n\n    /**\n     * Sets the priority (ordering) of an object on a given dataSource.\n     * @param {String|Number} newPriority New priority value to order data by.\n     * @returns {void}\n     */\n    setPriority(newPriority) {\n    }\n\n    /**\n     * Orders the DataSource's childs by the value in child[key].\n     * @param {String} childKey Key of the field to order by.\n     * @returns {DataSource} New dataSource instance.\n     */\n    orderByChild(childKey) {\n    }\n\n    /**\n     * Orders the DataSource's childs by their key names, ignoring their priority.\n     * @returns {DataSource} New dataSource instance.\n     */\n    orderByKey() {\n    }\n\n    /**\n     * Orders the DataSource's childs by their values, ignoring their priority.\n     * @returns {DataSource} New dataSource instance.\n     */\n    orderByValue() {\n    }\n\n    /**\n     * Returns a new dataSource reference that will limit the subscription to only the first given amount items.\n     * @param {Number} amount Amount of items to limit the dataSource to.\n     * @returns {DataSource} New dataSource instance.\n     */\n    limitToFirst(amount) {\n    }\n\n    /**\n     * Returns a new dataSource reference that will limit the subscription to only the last given amount items.\n     * @param {Number} amount Amount of items to limit the dataSource to.\n     * @returns {DataSource} New dataSource instance.\n     */\n    limitToLast(amount) {\n    }\n\n    /**\n     * Authenticates all instances of this DataSource with the given OAuth provider and credentials.\n     * @param {String} provider google, facebook, github, or twitter\n     * @param {String|Object} credentials Access token string, or object with key/value pairs with e.g. OAuth 1.1 credentials.\n     * @param {Function} onComplete Callback, executed when login is completed either successfully or erroneously.\n     * On error, first argument is error message.\n     * On success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires.\n     * @param {Object} options Optional, additional client arguments, such as configuring session persistence.\n     * @returns {void}\n     */\n    authWithOAuthToken(provider, credentials, onComplete, options) {\n    }\n\n    /**\n     * Authenticates all instances of this DataSource with a custom auth token or secret.\n     * @param {String} authToken Authentication token or secret.\n     * @param {Function} onComplete Callback, executed when login is completed either successfully or erroneously.\n     * On error, first argument is error message.\n     * On success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires.\n     * @param {Object} options Optional, additional client arguments, such as configuring session persistence.\n     * @returns {void}\n     */\n    authWithCustomToken(authToken, onComplete, options) {\n    }\n\n    /**\n     * Authenticates all instances of this DataSource with the given email/password credentials.\n     * @param {String|Object} credentials Object with key/value pairs {email: \"value\", password:\"value\"}.\n     * @param {Function} onComplete Callback, executed when login is completed either successfully or erroneously.\n     * On error, first argument is error message.\n     * On success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires.\n     * @param {Object} options Optional, additional client arguments, such as configuring session persistence.\n     * @returns {void}\n     */\n    authWithPassword(credentials, onComplete, options) {\n    }\n\n    /**\n     * Authenticates all instances of this DataSource as an anonymous user.\n     * @param {Function} onComplete Callback, executed when login is completed either successfully or erroneously.\n     * On error, first argument is error message.\n     * On success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires.\n     * @param {Object} options Optional, additional client arguments, such as configuring session persistence.\n     * @returns {void}\n     */\n    authAnonymously(onComplete, options) {\n    }\n\n    /**\n     * Fetches the current user's authentication state.\n     * If the user is authenticated, returns an object containing at least the fields uid, provider, auth, and expires.\n     * If the user is not authenticated, returns null.\n     * @returns {Object|null} User auth object.\n     */\n    getAuth() {\n    }\n\n    /**\n     * Logs out from the datasource, allowing to re-authenticate at a later time.\n     * @returns {void}\n     */\n    unauth() {\n    }\n\n    /**\n     * Subscribe to an event emitted by the DataSource.\n     * @param {String} event Event type to subscribe to. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed', 'child_moved'.\n     * @param {Function} handler Function to call when the subscribed event is emitted.\n     * @param {Object} context Context to set 'this' to when calling the handler function.\n     */\n    on(event, handler, context) {\n    }\n\n    /**\n     * Subscribe to an event emitted by the DataSource once, and then immediately unsubscribe.\n     * @param {String} event Event type to subscribe to. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed', 'child_moved'.\n     * @param {Function} handler Function to call when the subscribed event is emitted.\n     * @param {Object} context Context to set 'this' to when calling the handler function.\n     */\n    once(event, handler, context) {\n    }\n\n\n    /**\n     * Unsubscribe to a previously subscribed event. If no handler or context is given, all handlers for\n     * the given event are removed. If no parameters are given at all, all event types will have their handlers removed.\n     * @param {String} event Event type to unsubscribe from. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed', 'child_moved'.\n     * @param {Function} handler Optional: Function that was used in previous subscription.\n     */\n    off(event, handler) {\n    }\n\n    /**\n     * Sets the callback triggered when dataSource updates the data.\n     * @param {Function} callback Callback function to call when the subscribed data value changes.\n     * @returns {void}\n     **/\n    setValueChangedCallback(callback) {\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource updates the data.\n     * @returns {void}\n     **/\n    removeValueChangedCallback() {\n    }\n\n    /**\n     * Set the callback triggered when dataSource adds a data element.\n     * @param {Function} callback Callback function to call when a new data child is added.\n     * @returns {void}\n     **/\n    setChildAddedCallback(callback) {\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource adds a data element.\n     * @returns {void}\n     **/\n    removeChildAddedCallback() {\n    }\n\n    /**\n     * Set the callback triggered when dataSource changes a data element.\n     * @param {Function} callback Callback function to call when a child is changed.\n     * @returns {void}\n     **/\n    setChildChangedCallback(callback) {\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource changes a data element.\n     * @returns {void}\n     **/\n    removeChildChangedCallback() {\n    }\n\n    /**\n     * Set the callback triggered when dataSource moves a data element.\n     * @param {Function} callback Callback function to call when a child is moved.\n     * @returns {void}\n     **/\n    setChildMovedCallback(callback) {\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource moves a data element.\n     * @returns {void}\n     **/\n    removeChildMovedCallback() {\n    }\n\n    /**\n     * Set the callback triggered when dataSource removes a data element.\n     * @param {Function} callback Callback function to call when a child is removed.\n     * @returns {void}\n     **/\n    setChildRemovedCallback(callback) {\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource removes a data element.\n     * @returns {void}\n     **/\n    removeChildRemovedCallback() {\n    }\n\n\n    /**\n     * Resolves when the DataSource is synchronized to the server\n     * @returns {Promise} Resolves when the DataSource is synchronized\n     */\n    synced() {\n    }\n}"
  },
  {
    "__docId__": 184,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DataSource",
    "memberof": "src/data/DataSource.js",
    "longname": "src/data/DataSource.js~DataSource",
    "access": null,
    "export": true,
    "importPath": "./src/data/DataSource.js",
    "importStyle": "{DataSource}",
    "description": "\n\n@author: Tom Clement (tjclement)",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@license",
        "tagValue": "NPOSL-3.0"
      },
      {
        "tagName": "@copyright",
        "tagValue": "Bizboard, 2015"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 185,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#constructor",
    "access": null,
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Full path to resource in remote data storage."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "DataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 186,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataReference",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#_dataReference",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 187,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "inheritable",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#inheritable",
    "access": null,
    "description": "Indicate that the DataSource can be inherited when instantiating a list of models. By\ndefault we indicate false, which should trigger data model instantiation to create unique\nDataSource references to each model either in array or directly.\n\nIf set to false, model updates trigger creation of a new DataSource instance. (default)",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} Whether the DataSource is inheritable."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the DataSource is inheritable."
    },
    "type": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 188,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toString",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#toString",
    "access": null,
    "description": "Returns the full path to this dataSource's source on the remote storage provider.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} Full resource path."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Full resource path."
    },
    "generator": false
  },
  {
    "__docId__": 189,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "child",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#child",
    "access": null,
    "description": "Returns a dataSource reference to the given child branch of the current dataSource.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance pointing to the given child branch."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "childName",
        "description": "Child branch name."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional: additional options to pass to new DataSource instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance pointing to the given child branch."
    },
    "generator": false
  },
  {
    "__docId__": 190,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "path",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#path",
    "access": null,
    "description": "Returns the full URL to the path on the dataSource. Functionally identical to toString().",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} Full resource path."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Full resource path."
    },
    "generator": false
  },
  {
    "__docId__": 191,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "key",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#key",
    "access": null,
    "description": "Returns the name of the current branch in the path on the dataSource.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} Current branch name."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Current branch name."
    },
    "generator": false
  },
  {
    "__docId__": 192,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#set",
    "access": null,
    "description": "Writes newData to the path this dataSource was constructed with.",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Resolves when write to server is complete."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newData",
        "description": "Data to write to dataSource."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves when write to server is complete."
    },
    "generator": false
  },
  {
    "__docId__": 193,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#remove",
    "access": null,
    "description": "Removes the object and all underlying children that this dataSource points to.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 194,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "push",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#push",
    "access": null,
    "description": "Writes newData to the path this dataSource was constructed with, appended by a random UID generated by\nthe dataSource.",
    "lineNumber": 85,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newData",
        "description": "New data to append to dataSource."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 195,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setWithPriority",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#setWithPriority",
    "access": null,
    "description": "Writes newData with given priority (ordering) to the path this dataSource was constructed with.",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Resolves when write to server is complete."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newData",
        "description": "New data to set."
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "priority",
        "description": "Priority value by which the data should be ordered."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves when write to server is complete."
    },
    "generator": false
  },
  {
    "__docId__": 196,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setPriority",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#setPriority",
    "access": null,
    "description": "Sets the priority (ordering) of an object on a given dataSource.",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "newPriority",
        "description": "New priority value to order data by."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 197,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "orderByChild",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#orderByChild",
    "access": null,
    "description": "Orders the DataSource's childs by the value in child[key].",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "childKey",
        "description": "Key of the field to order by."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 198,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "orderByKey",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#orderByKey",
    "access": null,
    "description": "Orders the DataSource's childs by their key names, ignoring their priority.",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 199,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "orderByValue",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#orderByValue",
    "access": null,
    "description": "Orders the DataSource's childs by their values, ignoring their priority.",
    "lineNumber": 125,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 200,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "limitToFirst",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#limitToFirst",
    "access": null,
    "description": "Returns a new dataSource reference that will limit the subscription to only the first given amount items.",
    "lineNumber": 133,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "Amount of items to limit the dataSource to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 201,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "limitToLast",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#limitToLast",
    "access": null,
    "description": "Returns a new dataSource reference that will limit the subscription to only the last given amount items.",
    "lineNumber": 141,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "Amount of items to limit the dataSource to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 202,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authWithOAuthToken",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#authWithOAuthToken",
    "access": null,
    "description": "Authenticates all instances of this DataSource with the given OAuth provider and credentials.",
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "provider",
        "description": "google, facebook, github, or twitter"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "credentials",
        "description": "Access token string, or object with key/value pairs with e.g. OAuth 1.1 credentials."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "onComplete",
        "description": "Callback, executed when login is completed either successfully or erroneously.\nOn error, first argument is error message.\nOn success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional, additional client arguments, such as configuring session persistence."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 203,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authWithCustomToken",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#authWithCustomToken",
    "access": null,
    "description": "Authenticates all instances of this DataSource with a custom auth token or secret.",
    "lineNumber": 166,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "authToken",
        "description": "Authentication token or secret."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "onComplete",
        "description": "Callback, executed when login is completed either successfully or erroneously.\nOn error, first argument is error message.\nOn success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional, additional client arguments, such as configuring session persistence."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 204,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authWithPassword",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#authWithPassword",
    "access": null,
    "description": "Authenticates all instances of this DataSource with the given email/password credentials.",
    "lineNumber": 178,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "credentials",
        "description": "Object with key/value pairs {email: \"value\", password:\"value\"}."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "onComplete",
        "description": "Callback, executed when login is completed either successfully or erroneously.\nOn error, first argument is error message.\nOn success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional, additional client arguments, such as configuring session persistence."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 205,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authAnonymously",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#authAnonymously",
    "access": null,
    "description": "Authenticates all instances of this DataSource as an anonymous user.",
    "lineNumber": 189,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "onComplete",
        "description": "Callback, executed when login is completed either successfully or erroneously.\nOn error, first argument is error message.\nOn success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional, additional client arguments, such as configuring session persistence."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 206,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAuth",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#getAuth",
    "access": null,
    "description": "Fetches the current user's authentication state.\nIf the user is authenticated, returns an object containing at least the fields uid, provider, auth, and expires.\nIf the user is not authenticated, returns null.",
    "lineNumber": 198,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object|null} User auth object."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "null"
      ],
      "spread": false,
      "description": "User auth object."
    },
    "generator": false
  },
  {
    "__docId__": 207,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unauth",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#unauth",
    "access": null,
    "description": "Logs out from the datasource, allowing to re-authenticate at a later time.",
    "lineNumber": 205,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 208,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "on",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#on",
    "access": null,
    "description": "Subscribe to an event emitted by the DataSource.",
    "lineNumber": 214,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event type to subscribe to. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed', 'child_moved'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Function to call when the subscribed event is emitted."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Context to set 'this' to when calling the handler function."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 209,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "once",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#once",
    "access": null,
    "description": "Subscribe to an event emitted by the DataSource once, and then immediately unsubscribe.",
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event type to subscribe to. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed', 'child_moved'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Function to call when the subscribed event is emitted."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Context to set 'this' to when calling the handler function."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 210,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "off",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#off",
    "access": null,
    "description": "Unsubscribe to a previously subscribed event. If no handler or context is given, all handlers for\nthe given event are removed. If no parameters are given at all, all event types will have their handlers removed.",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event type to unsubscribe from. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed', 'child_moved'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Optional: Function that was used in previous subscription."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 211,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setValueChangedCallback",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#setValueChangedCallback",
    "access": null,
    "description": "Sets the callback triggered when dataSource updates the data.",
    "lineNumber": 241,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when the subscribed data value changes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 212,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeValueChangedCallback",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#removeValueChangedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource updates the data.",
    "lineNumber": 248,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 213,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setChildAddedCallback",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#setChildAddedCallback",
    "access": null,
    "description": "Set the callback triggered when dataSource adds a data element.",
    "lineNumber": 256,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when a new data child is added."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 214,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeChildAddedCallback",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#removeChildAddedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource adds a data element.",
    "lineNumber": 263,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 215,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setChildChangedCallback",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#setChildChangedCallback",
    "access": null,
    "description": "Set the callback triggered when dataSource changes a data element.",
    "lineNumber": 271,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when a child is changed."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 216,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeChildChangedCallback",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#removeChildChangedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource changes a data element.",
    "lineNumber": 278,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 217,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setChildMovedCallback",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#setChildMovedCallback",
    "access": null,
    "description": "Set the callback triggered when dataSource moves a data element.",
    "lineNumber": 286,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when a child is moved."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 218,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeChildMovedCallback",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#removeChildMovedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource moves a data element.",
    "lineNumber": 293,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 219,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setChildRemovedCallback",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#setChildRemovedCallback",
    "access": null,
    "description": "Set the callback triggered when dataSource removes a data element.",
    "lineNumber": 301,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when a child is removed."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 220,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeChildRemovedCallback",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#removeChildRemovedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource removes a data element.",
    "lineNumber": 308,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 221,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "synced",
    "memberof": "src/data/DataSource.js~DataSource",
    "longname": "src/data/DataSource.js~DataSource#synced",
    "access": null,
    "description": "Resolves when the DataSource is synchronized to the server",
    "lineNumber": 316,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Resolves when the DataSource is synchronized"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves when the DataSource is synchronized"
    },
    "generator": false
  },
  {
    "__docId__": 222,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/PrioritisedArray.js",
    "memberof": null,
    "longname": "src/data/PrioritisedArray.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n\n @author: Tom Clement (tjclement)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport extend                       from 'lodash/extend.js';\nimport EventEmitter                 from 'eventemitter3';\nimport {Injection}                  from '../utils/Injection.js';\nimport {ObjectHelper}               from '../utils/ObjectHelper.js';\nimport {DataSource}                 from './DataSource.js';\nimport {Throttler}                  from '../utils/Throttler.js';\n\n/**\n * An array of two-way bound data Models that are automatically synced with the currently used DataSource\n */\nexport class PrioritisedArray extends Array {\n\n    /**\n     * The number of items in the (synchronized or local) data set.\n     * @returns {Number}\n     */\n    get length() {\n        /* Extending Array does not work fluently yet. The length property always returns 0,\n         * regardless of how many entries are in the array. We'll override the length prop to determine\n         * the amount of enumerable properties in our PrioritisedArray instead of using the built-in length property.\n         */\n        return Object.keys(this).length;\n    }\n\n\n\n    /**\n     *\n     * @param {Function} dataType DataType of the models being added to the PrioritisedArray.\n     * @param {DataSource} [dataSource] dataSource to load the models from. If none is given, a new DataSource is made with a path guessed from\n     * the model's DataType name.\n     * @param {Snapshot} [dataSnapshot] snapshot already containing model data. Prevents initial subscription on all values in the DataSource.\n     * @param {Object} [options] options to pass to the dataSource if none is provided and a new one is constructed.\n     * @param {Object} [modelOptions] options to merge into the construction of every new Model.\n     * @returns {PrioritisedArray} PrioritisedArray instance.\n     */\n    constructor(dataType, dataSource = null, dataSnapshot = null, options = null, modelOptions = {}) {\n        super();\n        /**** Callbacks ****/\n        this._valueChangedCallback = null;\n        this._ids = {};\n\n        /**** Private properties ****/\n        this._dataType = dataType;\n        this._dataSource = dataSource;\n        this._isBeingReordered = false;\n        this._modelOptions = modelOptions;\n        /* Flag to determine when we're reordering so we don't listen to move updates */\n        this._eventEmitter = new EventEmitter();\n        this._childAddedThrottler = new Throttler(1, true, this, true);\n        this._overrideChildAddedForId = null;\n\n        /* Bind all local methods to the current object instance, so we can refer to \"this\"\n         * in the methods as expected, even when they're called from event handlers.        */\n        ObjectHelper.bindAllMethods(this, this);\n\n        /* Hide all private properties (starting with '_') and methods from enumeration,\n         * so when you do for( in ), only actual data properties show up. */\n        ObjectHelper.hideMethodsAndPrivatePropertiesFromObject(this);\n\n        /* Hide the priority field from enumeration, so we don't save it to the dataSource. */\n        ObjectHelper.hidePropertyFromObject(Object.getPrototypeOf(this), 'length');\n\n        /* If no dataSource is given, create own one with guessed path */\n        if (!dataSource) {\n            /* The this._name property can be set by Arva's babel-plugin-transform-runtime-constructor-name plugin.\n             * This allows Arva code to be minified and mangled without losing automated model name resolving.\n             * If the plugin is not set up to run, which is done e.g. when not minifying your code, we default back to the runtime constructor name. */\n            let path = this.constructor._name || Object.getPrototypeOf(this).constructor.name;\n            /* Retrieve dataSource from the DI context */\n            dataSource = Injection.get(DataSource);\n\n            if (options) {\n                dataSource = dataSource.child(options.path || path, options);\n            } else {\n                dataSource = dataSource.child(path);\n            }\n\n            this._dataSource = dataSource;\n        }\n\n        /* If a snapshot is present use it, otherwise generate one by subscribing to the dataSource one time. */\n        if (dataSnapshot) {\n            this._buildFromSnapshot(dataSnapshot);\n        } else {\n            this._buildFromDataSource(dataSource);\n        }\n    }\n\n    /**\n     * Subscribes to events emitted by this PrioritisedArray.\n     * @param {String} event One of the following Event Types: 'value', 'child_changed', 'child_moved', 'child_removed'.\n     * @param {Function} handler Function that is called when the given event type is emitted.\n     * @param {Object} context Optional: context of 'this' inside the handler function when it is called.\n     * @returns {void}\n     */\n    on(event, handler, context) {\n        /* If we're already ready, fire immediately */\n        if ((event === 'ready' || event === 'value') && this._dataSource && this._dataSource.ready) {\n            handler.call(context, this);\n        }\n\n        /* If we already have children stored locally when the subscriber calls this method,\n         * fire their callback for all pre-existing children. */\n        if (event === 'child_added') {\n\n            for (let i = 0; i < this.length; i++) {\n                this._childAddedThrottler.add(() => {\n                    let model = this[i];\n                    let previousSiblingID = i > 0 ? this[i - 1].id : null;\n                    handler.call(context, model, previousSiblingID);\n                });\n            }\n        }\n\n        this._eventEmitter.on(event, handler, context);\n    }\n\n    /**\n     * Subscribes to the given event type exactly once; it automatically unsubscribes after the first time it is triggered.\n     * @param {String} event One of the following Event Types: 'value', 'child_changed', 'child_moved', 'child_removed'.\n     * @param {Function} [handler] Function that is called when the given event type is emitted.\n     * @param {Object} [context] context of 'this' inside the handler function when it is called.\n     * @returns {Promise} If no callback function provided, a promise that resolves once the event has happened\n     */\n    once(event, handler, context = this) {\n        if (!handler) {\n            return new Promise((resolve) => this.once(event, resolve, context));\n        }\n        return this.on(event, function onceWrapper() {\n            this.off(event, onceWrapper, context);\n            handler.call(context, ...arguments);\n        }, this);\n    }\n\n    /**\n     * Removes subscription to events emitted by this PrioritisedArray. If no handler or context is given, all handlers for\n     * the given event are removed. If no parameters are given at all, all event types will have their handlers removed.\n     * @param {String} event One of the following Event Types: 'value', 'child_changed', 'child_moved', 'child_removed'.\n     * @param {Function} handler Function to remove from event callbacks.\n     * @param {Object} context Object to bind the given callback function to.\n     * @returns {void}\n     */\n    off(event, handler, context) {\n        if (event && (handler || context)) {\n            this._eventEmitter.removeListener(event, handler, context);\n        } else {\n            this._eventEmitter.removeAllListeners(event);\n        }\n    }\n\n    /**\n     * Adds a model instance to the rear of the PrioritisedArray, and emits a 'child_added' and possibly 'new_child' event after successful addition.\n     * @param {Model|Object} model Instance of a Model.\n     * @param {String} prevSiblingId ID of the model preceding the one that will be added.\n     * @returns {Object} Same model as the one originally passed as parameter.\n     */\n    add(model, prevSiblingId = null) {\n        if (model instanceof this._dataType) {\n            if (this.findIndexById(model.id) < 0) {\n\n                if (prevSiblingId) {\n                    let newPosition = this.findIndexById(prevSiblingId) + 1;\n                    this.insertAt(model, newPosition);\n                } else {\n                    this.push(model);\n                }\n\n                /* If we've already received an on('value') result, this child addition is\n                 * a new entry that wasn't on the dataSource before. */\n                if (this._dataSource.ready) {\n                    this._eventEmitter.emit('new_child', model, prevSiblingId);\n                }\n\n                this._eventEmitter.emit('child_added', model, prevSiblingId);\n                return model;\n            }\n        } else if (model instanceof Object) {\n            /* Let's try to parse the object using property reflection */\n            var options = {dataSource: this._dataSource};\n            /* Prevent child_added from being fired immediately when the model is created by creating a promise that resolves\n             * the ID that shouldn't be synced twice\n             */\n\n            this._overrideChildAddedForId = this.once('local_child_added');\n            let newModel = new this._dataType(null, model, extend({}, this._modelOptions, options));\n\n            this.add(newModel);\n            /* Remove lock */\n            this._eventEmitter.emit('local_child_added', newModel);\n            this._overrideChildAddedForId = null;\n            return newModel;\n        } else {\n            /* TODO: change to throw exception */\n            console.log('Tried to append an object that is not the same type as the one this PrioritisedArray was created with.');\n        }\n\n        /* Return model so we can do this: let newModel = PrioArray.add(new Model()); newModel.someProperty = true; */\n        return null;\n    }\n\n\n    /**\n     * Inserts a model instance at the given position of the PrioritisedArray, and recalculates the priority (position)\n     * of all models after the inserted position.\n     * @param {Model} model Subclass of Model\n     * @param {Number} position Zero-based index where to put the new model instance.\n     * @returns {Object} Same model as the one originally passed as parameter.\n     */\n    insertAt(model, position) {\n        if (model instanceof this._dataType) {\n            for (let i = position; i < this.length; i++) {\n                /* Increase the index of items further on in the prio array */\n                this._ids[this[i].id]++;\n            }\n            this.splice(position, 0, model);\n            this._ids[model._id] = position;\n        } else {\n            /* TODO: change to throw exception */\n            console.log('Tried to append an object that is not the same type as the PrioritisedArray was created with.');\n        }\n\n        /* Return model so we can do this: let newModel = PrioArray.add(new Model()); newModel.someProperty = true; */\n        return model;\n    }\n\n    /**\n     * Adds a model or object to the end of the list.\n     * @param {Object|Model} model\n     * @returns {Model} The newly inserted model\n     */\n    push(model){\n        return this.insertAt(model, this.length);\n    }\n\n    /**\n     * Removes the model instance at the given position. Does not remove the model from the datasource, to do that\n     * call model.remove() directly, or PrioArray[index].remove().\n     * @param {Number} position Index in the PrioritisedArray of the model to remove.\n     * @returns {void}\n     */\n    remove(position) {\n        /*\n         * TODO: Beware, there might be hard to reproduce prone to errors going on sometimes when deleting many things at once\n         * Sometimes, there is an inconsistent state, but I haven't been able to figure out how that happens. /Karl\n         */\n        if(this.length === 1){\n            this._ids = {};\n        } else {\n            for (let i = position; i < this.length; i++) {\n                /* Decrease the index of items further on in the prio array */\n                if(!this._ids[this[i].id] && this._ids[this[i].id] !== 0){\n                    console.log(\"Internal error, decreasing index of non-existing id. For ID: \" + this[i].id);\n                }\n                this._ids[this[i].id]--;\n            }\n        }\n        this.splice(position, 1);\n    }\n\n\n\n    /**\n     * Return the position of model's id, saved in an associative array\n     * @param {Number} id Id field of the model we're looking for\n     * @returns {Number} Zero-based index if found, -1 otherwise\n     * @private\n     */\n    findIndexById(id) {\n        let position = this._ids[id];\n        return (position == undefined || position == null) ? -1 : position;\n    }\n\n\n    /**\n     * Finds an item based on its Id in the datasource.\n     * @param id\n     * @returns {Model}\n     */\n    findById(id) {\n        return this[this.findIndexById(id)];\n    }\n\n\n    /**\n     * Interprets all childs of a given snapshot as instances of the given data type for this PrioritisedArray,\n     * and attempts to instantiate new model instances based on these sub-snapshots. It adds them to the\n     * PrioritisedArray, which also assigns their priority based on their inserted position.\n     * @param {Snapshot} dataSnapshot Snapshot to build the PrioritisedArray from.\n     * @returns {void}\n     * @private\n     */\n    _buildFromSnapshot(dataSnapshot) {\n\n        let numChildren = dataSnapshot.numChildren(), currentChild = 1;\n\n        /* If there is no data at this point yet, fire a ready event */\n        if (numChildren === 0) {\n            this._dataSource.ready = true;\n            this._eventEmitter.emit('ready');\n            this._eventEmitter.emit('value', this);\n        }\n\n        dataSnapshot.forEach(function (child) {\n            this._childAddedThrottler.add(function (child) {\n                /* Create a new instance of the given data type and prefill it with the snapshot data. */\n                let options = {dataSnapshot: child};\n                let childRef = this._dataSource.child(child.key);\n\n                /* whenever the ref() is a datasource, we can bind that source to the model.\n                 * whenever it's not a datasource, we assume the model should instantiate a new\n                 * datasource to bind the model */\n\n                if (childRef instanceof DataSource) {\n                    options.dataSource = childRef;\n                } else {\n                    var rootPath = dataSnapshot.ref().root().toString();\n                    options.path = dataSnapshot.ref().toString().replace(rootPath, '/');\n                }\n\n                let newModel = new this._dataType(child.key, child.val(), extend({}, this._modelOptions, options));\n                this.add(newModel);\n\n                /* If this is the last child, fire a ready event */\n                if (currentChild++ === numChildren) {\n                    this._dataSource.ready = true;\n                    this._eventEmitter.emit('ready');\n                    this._eventEmitter.emit('value', this);\n                }\n\n            }.bind(this, child));\n        }.bind(this))\n    }\n\n    /**\n     * Clones a dataSource (to not disturb any existing callbacks defined on the original) and uses it\n     * to get a dataSnapshot which is used in _buildSnapshot to build our array.\n     * @param {DataSource} dataSource DataSource to subscribe to for building the PrioritisedArray.\n     * @returns {void}\n     * @private\n     */\n    _buildFromDataSource(dataSource) {\n        dataSource.once('value', (dataSnapshot) => {\n            this._buildFromSnapshot(dataSnapshot);\n            this._registerCallbacks(dataSource);\n        });\n    }\n\n    /**\n     * Registers the added, moved, changed, and removed callbacks to the given DataSource.\n     * @param {DataSource} dataSource DataSource to register callbacks on.\n     * @return {void}\n     * @private\n     */\n    _registerCallbacks(dataSource) {\n        dataSource.on('child_added', this._doOnceReady(this._onChildAdded));\n        dataSource.on('child_moved', this._doOnceReady(this._onChildMoved));\n        dataSource.on('child_changed', this._doOnceReady(this._onChildChanged));\n        dataSource.on('child_removed', this._doOnceReady(this._onChildRemoved));\n    }\n\n    _doOnceReady(callback) {\n        return (...otherArgs) => {\n            if (!this._dataSource.ready) {\n                this.once('ready', () => {\n                    return callback(...otherArgs)\n                });\n            } else {\n                return callback(...otherArgs)\n            }\n        }\n    }\n\n    /**\n     * Called by dataSource when a new child is added.\n     * @param {Snapshot} snapshot Snapshot of the added child.\n     * @param {String} prevSiblingId ID of the model preceding the added model.\n     * @returns {void}\n     * @private\n     */\n    _onChildAdded(snapshot, prevSiblingId) {\n        let id = snapshot.key;\n        if (this._overrideChildAddedForId) {\n            this._overrideChildAddedForId.then((newModel) => {\n                /* If the override is concerning another id, then go ahead and make the _onChildAdded */\n                if (newModel.id !== id) {\n                    this._onChildAdded(snapshot, prevSiblingId)\n                }\n                /* Otherwise, don't recreate the same model twice */\n            });\n            return;\n        }\n\n        /* Skip addition if an item with identical ID already exists. */\n        let previousPosition = this.findIndexById(id);\n        if (previousPosition >= 0) {\n            return;\n        }\n\n        let model = new this._dataType(id, null, extend({}, this._modelOptions, {\n            dataSnapshot: snapshot\n        }));\n        this.add(model, prevSiblingId);\n\n        if (!this._dataSource.ready) {\n            this._dataSource.ready = true;\n            this._eventEmitter.emit('ready');\n        }\n        this._eventEmitter.emit('value', this);\n    }\n\n    /**\n     * Called by dataSource when a child is changed.\n     * @param {Snapshot} snapshot Snapshot of the added child.\n     * @param {String} prevSiblingId ID of the model preceding the added model.\n     * @returns {void}\n     * @private\n     */\n    _onChildChanged(snapshot, prevSiblingId) {\n        let id = snapshot.key;\n\n        let previousPosition = this.findIndexById(id);\n        if (previousPosition < 0) {\n            /* The model doesn't exist, so we won't emit a changed event. */\n            return;\n        }\n\n        let model = this[previousPosition];\n        model._onChildValue(snapshot, prevSiblingId);\n        let newPosition = this.findIndexById(prevSiblingId) + 1;\n\n        this._moveItem(previousPosition, newPosition, model);\n\n        this._eventEmitter.emit('child_changed', model, prevSiblingId);\n        this._eventEmitter.emit('value', this);\n    }\n\n    /**\n     * Called by dataSource when a child is moved, which changes its priority.\n     * @param {Snapshot} snapshot Snapshot of the added child.\n     * @param {String} prevSiblingId ID of the model preceding the added model.\n     * @returns {void}\n     * @private\n     */\n    _onChildMoved(snapshot, prevSiblingId) {\n        /* Ignore priority updates whilst we're reordering to avoid floods */\n        if (!this._isBeingReordered) {\n\n            let id = snapshot.key;\n            let previousPosition = this.findIndexById(id);\n            let newPosition = this.findIndexById(prevSiblingId) + 1;\n            let tempModel = this[previousPosition];\n            this._moveItem(previousPosition, newPosition, tempModel);\n\n            let model = this[newPosition];\n\n            this._eventEmitter.emit('child_moved', model, previousPosition);\n            this._eventEmitter.emit('value', this);\n        }\n    }\n\n    _moveItem(previousPosition, newPosition, modelToMove) {\n        this._ids[modelToMove._id] = newPosition;\n        /* Update the positions of things coming inbetween */\n        for (let positionAhead = previousPosition; positionAhead < newPosition; positionAhead++) {\n            this._ids[this[positionAhead].id]--;\n        }\n        for (let positionBefore = newPosition; positionBefore < previousPosition; positionBefore++) {\n            this._ids[this[positionBefore].id]++;\n        }\n\n        if (previousPosition === newPosition) {\n            this[newPosition] = modelToMove;\n        } else {\n            this.splice(previousPosition, 1);\n            this.splice(newPosition, 0, modelToMove);\n        }\n    }\n    /**\n     * Called by dataSource when a child is removed.\n     * @param {Snapshot} oldSnapshot Snapshot of the added child.\n     * @returns {void}\n     * @private\n     */\n    _onChildRemoved(oldSnapshot) {\n        /* TODO: figure out if we can use the snapshot's priority as our array index reliably, to avoid big loops. */\n        let id = oldSnapshot.key;\n        let position = this.findIndexById(id);\n        let model = this[position];\n\n        if (position !== -1) {\n            this.remove(position);\n            delete this._ids[id];\n\n            this._eventEmitter.emit('child_removed', model);\n            this._eventEmitter.emit('value', this);\n        }\n    }\n\n}\n"
  },
  {
    "__docId__": 223,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PrioritisedArray",
    "memberof": "src/data/PrioritisedArray.js",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray",
    "access": null,
    "export": true,
    "importPath": "./src/data/PrioritisedArray.js",
    "importStyle": "{PrioritisedArray}",
    "description": "An array of two-way bound data Models that are automatically synced with the currently used DataSource",
    "lineNumber": 21,
    "interface": false,
    "extends": [
      "Array"
    ]
  },
  {
    "__docId__": 224,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "length",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#length",
    "access": null,
    "description": "The number of items in the (synchronized or local) data set.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 225,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#constructor",
    "access": null,
    "description": "",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PrioritisedArray} PrioritisedArray instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "dataType",
        "description": "DataType of the models being added to the PrioritisedArray."
      },
      {
        "nullable": null,
        "types": [
          "DataSource"
        ],
        "spread": false,
        "optional": true,
        "name": "dataSource",
        "description": "dataSource to load the models from. If none is given, a new DataSource is made with a path guessed from\nthe model's DataType name."
      },
      {
        "nullable": null,
        "types": [
          "Snapshot"
        ],
        "spread": false,
        "optional": true,
        "name": "dataSnapshot",
        "description": "snapshot already containing model data. Prevents initial subscription on all values in the DataSource."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "options to pass to the dataSource if none is provided and a new one is constructed."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "modelOptions",
        "description": "options to merge into the construction of every new Model."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PrioritisedArray"
      ],
      "spread": false,
      "description": "PrioritisedArray instance."
    },
    "generator": false
  },
  {
    "__docId__": 226,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_valueChangedCallback",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_valueChangedCallback",
    "access": null,
    "description": "* Callbacks ***",
    "lineNumber": 50,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_ids",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_ids",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataType",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_dataType",
    "access": null,
    "description": "* Private properties ***",
    "lineNumber": 54,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isBeingReordered",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_isBeingReordered",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_modelOptions",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_modelOptions",
    "access": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_eventEmitter",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_eventEmitter",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_childAddedThrottler",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_childAddedThrottler",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_overrideChildAddedForId",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_overrideChildAddedForId",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 235,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 236,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "on",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#on",
    "access": null,
    "description": "Subscribes to events emitted by this PrioritisedArray.",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "One of the following Event Types: 'value', 'child_changed', 'child_moved', 'child_removed'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Function that is called when the given event type is emitted."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Optional: context of 'this' inside the handler function when it is called."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 237,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "once",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#once",
    "access": null,
    "description": "Subscribes to the given event type exactly once; it automatically unsubscribes after the first time it is triggered.",
    "lineNumber": 136,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} If no callback function provided, a promise that resolves once the event has happened"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "One of the following Event Types: 'value', 'child_changed', 'child_moved', 'child_removed'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "handler",
        "description": "Function that is called when the given event type is emitted."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "context",
        "description": "context of 'this' inside the handler function when it is called."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "If no callback function provided, a promise that resolves once the event has happened"
    },
    "generator": false
  },
  {
    "__docId__": 238,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "off",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#off",
    "access": null,
    "description": "Removes subscription to events emitted by this PrioritisedArray. If no handler or context is given, all handlers for\nthe given event are removed. If no parameters are given at all, all event types will have their handlers removed.",
    "lineNumber": 154,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "One of the following Event Types: 'value', 'child_changed', 'child_moved', 'child_removed'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Function to remove from event callbacks."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Object to bind the given callback function to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 239,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#add",
    "access": null,
    "description": "Adds a model instance to the rear of the PrioritisedArray, and emits a 'child_added' and possibly 'new_child' event after successful addition.",
    "lineNumber": 168,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Same model as the one originally passed as parameter."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Model",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "Instance of a Model."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "prevSiblingId",
        "description": "ID of the model preceding the one that will be added."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Same model as the one originally passed as parameter."
    },
    "generator": false
  },
  {
    "__docId__": 240,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_overrideChildAddedForId",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_overrideChildAddedForId",
    "access": null,
    "description": null,
    "lineNumber": 195,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 241,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_overrideChildAddedForId",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_overrideChildAddedForId",
    "access": null,
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "insertAt",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#insertAt",
    "access": null,
    "description": "Inserts a model instance at the given position of the PrioritisedArray, and recalculates the priority (position)\nof all models after the inserted position.",
    "lineNumber": 220,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Same model as the one originally passed as parameter."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Model"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": "Subclass of Model"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "Zero-based index where to put the new model instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Same model as the one originally passed as parameter."
    },
    "generator": false
  },
  {
    "__docId__": 243,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "push",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#push",
    "access": null,
    "description": "Adds a model or object to the end of the list.",
    "lineNumber": 242,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model} The newly inserted model"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object",
          "Model"
        ],
        "spread": false,
        "optional": false,
        "name": "model",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": "The newly inserted model"
    },
    "generator": false
  },
  {
    "__docId__": 244,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#remove",
    "access": null,
    "description": "Removes the model instance at the given position. Does not remove the model from the datasource, to do that\ncall model.remove() directly, or PrioArray[index].remove().",
    "lineNumber": 252,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "Index in the PrioritisedArray of the model to remove."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 245,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_ids",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_ids",
    "access": null,
    "description": null,
    "lineNumber": 258,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "findIndexById",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#findIndexById",
    "access": "private",
    "description": "Return the position of model's id, saved in an associative array",
    "lineNumber": 279,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number} Zero-based index if found, -1 otherwise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Id field of the model we're looking for"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "Zero-based index if found, -1 otherwise"
    },
    "generator": false
  },
  {
    "__docId__": 247,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "findById",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#findById",
    "access": null,
    "description": "Finds an item based on its Id in the datasource.",
    "lineNumber": 290,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Model}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Model"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 248,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildFromSnapshot",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_buildFromSnapshot",
    "access": "private",
    "description": "Interprets all childs of a given snapshot as instances of the given data type for this PrioritisedArray,\nand attempts to instantiate new model instances based on these sub-snapshots. It adds them to the\nPrioritisedArray, which also assigns their priority based on their inserted position.",
    "lineNumber": 303,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Snapshot"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSnapshot",
        "description": "Snapshot to build the PrioritisedArray from."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 249,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildFromDataSource",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_buildFromDataSource",
    "access": "private",
    "description": "Clones a dataSource (to not disturb any existing callbacks defined on the original) and uses it\nto get a dataSnapshot which is used in _buildSnapshot to build our array.",
    "lineNumber": 352,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataSource"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSource",
        "description": "DataSource to subscribe to for building the PrioritisedArray."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 250,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_registerCallbacks",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_registerCallbacks",
    "access": "private",
    "description": "Registers the added, moved, changed, and removed callbacks to the given DataSource.",
    "lineNumber": 365,
    "params": [
      {
        "nullable": null,
        "types": [
          "DataSource"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSource",
        "description": "DataSource to register callbacks on."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 251,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_doOnceReady",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_doOnceReady",
    "access": null,
    "description": null,
    "lineNumber": 372,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 252,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onChildAdded",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_onChildAdded",
    "access": "private",
    "description": "Called by dataSource when a new child is added.",
    "lineNumber": 391,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Snapshot"
        ],
        "spread": false,
        "optional": false,
        "name": "snapshot",
        "description": "Snapshot of the added child."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "prevSiblingId",
        "description": "ID of the model preceding the added model."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 253,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onChildChanged",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_onChildChanged",
    "access": "private",
    "description": "Called by dataSource when a child is changed.",
    "lineNumber": 429,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Snapshot"
        ],
        "spread": false,
        "optional": false,
        "name": "snapshot",
        "description": "Snapshot of the added child."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "prevSiblingId",
        "description": "ID of the model preceding the added model."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 254,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onChildMoved",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_onChildMoved",
    "access": "private",
    "description": "Called by dataSource when a child is moved, which changes its priority.",
    "lineNumber": 455,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Snapshot"
        ],
        "spread": false,
        "optional": false,
        "name": "snapshot",
        "description": "Snapshot of the added child."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "prevSiblingId",
        "description": "ID of the model preceding the added model."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 255,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_moveItem",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_moveItem",
    "access": null,
    "description": null,
    "lineNumber": 472,
    "undocument": true,
    "params": [
      {
        "name": "previousPosition",
        "types": [
          "*"
        ]
      },
      {
        "name": "newPosition",
        "types": [
          "*"
        ]
      },
      {
        "name": "modelToMove",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 256,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onChildRemoved",
    "memberof": "src/data/PrioritisedArray.js~PrioritisedArray",
    "longname": "src/data/PrioritisedArray.js~PrioritisedArray#_onChildRemoved",
    "access": "private",
    "description": "Called by dataSource when a child is removed.",
    "lineNumber": 495,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Snapshot"
        ],
        "spread": false,
        "optional": false,
        "name": "oldSnapshot",
        "description": "Snapshot of the added child."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 257,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/PrioritisedObject.js",
    "memberof": null,
    "longname": "src/data/PrioritisedObject.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n\n @author: Tom Clement (tjclement)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport isEqual          from 'lodash/isEqual.js';\nimport EventEmitter     from 'eventemitter3';\nimport {ObjectHelper}   from '../utils/ObjectHelper.js';\n\nexport class PrioritisedObject extends EventEmitter {\n\n    get id() {\n        return this._id;\n    }\n\n    set id(value) {\n        this._id = value;\n    }\n\n    /** Priority (positioning) of the object in the dataSource */\n    get priority() {\n        return this._priority;\n    }\n\n    get dataSource() {\n        return this._dataSource;\n    }\n\n    set priority(value) {\n        if (this._priority !== value) {\n            this._priority = value;\n            this._dataSource.setPriority(value);\n        }\n    }\n\n    /* TODO: refactor out after we've resolved SharepointDataSource specific issue. */\n    get _inheritable() {\n        return this._dataSource ? this._dataSource.inheritable : false;\n    }\n\n    /**\n     * @param {DataSource} dataSource DataSource to construct this PrioritisedObject with.\n     * @param {Snapshot} dataSnapshot Optional: dataSnapshot already containing model data, so we can skip subscribing to the full data on the dataSource.\n     * @returns {PrioritisedObject} PrioritisedObject instance.\n     */\n    constructor(dataSource, dataSnapshot = null) {\n        super();\n\n        /**** Callbacks ****/\n        this._valueChangedCallback = null;\n\n        /**** Private properties ****/\n        this._id = dataSource ? dataSource.key() : 0;\n        this._events = this._events || [];\n        this._dataSource = dataSource;\n        this._priority = 0; // Priority of this object on remote dataSource\n        this._isBeingWrittenByDatasource = false; // Flag to determine when dataSource is updating object\n\n        /* Bind all local methods to the current object instance, so we can refer to \"this\"\n         * in the methods as expected, even when they're called from event handlers.        */\n        ObjectHelper.bindAllMethods(this, this);\n\n        /* Hide all private properties (starting with '_') and methods from enumeration,\n         * so when you do for( in ), only actual data properties show up. */\n        ObjectHelper.hideMethodsAndPrivatePropertiesFromObject(this);\n\n        /* Hide the id field from enumeration, so we don't save it to the dataSource. */\n        ObjectHelper.hidePropertyFromObject(this, 'id');\n\n        /* Hide the priority field from enumeration, so we don't save it to the dataSource. */\n        ObjectHelper.hidePropertyFromObject(this, 'priority');\n\n        /* Hide the dataSource field from enumeration, so we don't save it to the dataSource. */\n        ObjectHelper.hidePropertyFromObject(this, 'dataSource');\n\n        if (dataSnapshot) {\n            this._buildFromSnapshot(dataSnapshot);\n        } else {\n            this._buildFromDataSource(dataSource);\n        }\n    }\n\n    /**\n     *  Deletes the current object from the dataSource, and clears itself to free memory.\n     *  @returns {void}\n     */\n    remove() {\n        this.off();\n        this._dataSource.remove(this);\n        delete this;\n    }\n\n    /**\n     * Subscribes to the given event type exactly once; it automatically unsubscribes after the first time it is triggered.\n     * @param {String} event One of the following Event Types: 'value', 'child_changed', 'child_moved', 'child_removed'.\n     * @param {Function} handler Function that is called when the given event type is emitted.\n     * @param {Object} context Optional: context of 'this' inside the handler function when it is called.\n     * @returns {void}\n     */\n    once(event, handler, context = this) {\n        return this.on(event, function onceWrapper() {\n            handler.call(context, ...arguments);\n            this.off(event, onceWrapper, context);\n        }, this);\n    }\n\n    /**\n     * Subscribes to events emitted by this PrioritisedArray.\n     * @param {String} event One of the following Event Types: 'value', 'child_changed', 'child_moved', 'child_removed'.\n     * @param {Function} handler Function that is called when the given event type is emitted.\n     * @param {Object} context Optional: context of 'this' inside the handler function when it is called.\n     * @returns {void}\n     */\n    on(event, handler, context = this) {\n        let haveListeners = this.listeners(event, true);\n        super.on(event, handler, context);\n\n        switch (event) {\n            case 'ready':\n                /* If we're already ready, fire immediately */\n                if (this._dataSource && this._dataSource.ready) {\n                    handler.call(context, this);\n                }\n                break;\n            case 'value':\n                if (!haveListeners) {\n                    /* Only subscribe to the dataSource if there are no previous listeners for this event type. */\n                    this._dataSource.setValueChangedCallback(this._onChildValue);\n                } else {\n                    if (this._dataSource.ready) {\n                        /* If there are previous listeners, fire the value callback once to present the subscriber with inital data. */\n                        handler.call(context, this);\n                    }\n                }\n                break;\n            case 'added':\n                if (!haveListeners) {\n                    this._dataSource.setChildAddedCallback(this._onChildAdded);\n                }\n                break;\n            case 'moved':\n                if (!haveListeners) {\n                    this._dataSource.setChildMovedCallback(this._onChildMoved);\n                }\n                break;\n            case 'removed':\n                if (!haveListeners) {\n                    this._dataSource.setChildRemovedCallback(this._onChildRemoved);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Removes subscription to events emitted by this PrioritisedArray. If no handler or context is given, all handlers for\n     * the given event are removed. If no parameters are given at all, all event types will have their handlers removed.\n     * @param {String} event One of the following Event Types: 'value', 'child_changed', 'child_moved', 'child_removed'.\n     * @param {Function} handler Function to remove from event callbacks.\n     * @param {Object} context Object to bind the given callback function to.\n     * @returns {void}\n     */\n    off(event, handler, context) {\n        if (event && (handler || context)) {\n            super.removeListener(event, handler, context);\n        } else {\n            super.removeAllListeners(event);\n        }\n\n        /* If we have no more listeners of this event type, remove dataSource callback. */\n        if (!this.listeners(event, true)) {\n            switch (event) {\n                case 'ready':\n                    break;\n                case 'value':\n                    this._dataSource.removeValueChangedCallback();\n                    break;\n                case 'added':\n                    this._dataSource.removeChildAddedCallback();\n                    break;\n                case 'moved':\n                    this._dataSource.removeChildMovedCallback();\n                    break;\n                case 'removed':\n                    this._dataSource.removeChildRemovedCallback();\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    /**\n     * Allows multiple modifications to be made to the model without triggering dataSource pushes and event emits for each change.\n     * Triggers a push to the dataSource after executing the given method. This push should then emit an event notifying subscribers of any changes.\n     * @param {Function} method Function in which the model can be modified.\n     * @returns {void}\n     */\n    transaction(method) {\n        this.disableChangeListener();\n        method();\n        this.enableChangeListener();\n        return this._onSetterTriggered();\n    }\n\n    /**\n     * Disables pushes of local changes to the dataSource, and stops event emits that refer to the model's data.\n     * @returns {void}\n     */\n    disableChangeListener() {\n        this._isBeingWrittenByDatasource = true;\n    }\n\n\n    /**\n     * Enables pushes of local changes to the dataSource, and enables event emits that refer to the model's data.\n     * The change listener is active by default, so you'll only need to call this method if you've previously called disableChangeListener().\n     * @returns {void}\n     */\n    enableChangeListener() {\n        this._isBeingWrittenByDatasource = false;\n    }\n\n    /**\n     * Recursively builds getter/setter based properties on current PrioritisedObject from\n     * a given dataSnapshot. If an object value is detected, the object itself gets built as\n     * another PrioritisedObject and set to the current PrioritisedObject as a property.\n     * @param {Snapshot} dataSnapshot DataSnapshot to build the PrioritisedObject from.\n     * @returns {void}\n     * @private\n     */\n    _buildFromSnapshot(dataSnapshot) {\n\n        /* Set root object _priority */\n        this._priority = dataSnapshot.getPriority();\n        let data = dataSnapshot.val();\n        let numChildren = dataSnapshot.numChildren();\n\n        if (!this._id) {\n            this._id = dataSnapshot.key;\n        }\n\n        if (!this._dataSource) {\n            this._dataSource = dataSnapshot.ref;\n        }\n\n        /* If there is no data at this point yet, fire a ready event */\n        if (numChildren === 0) {\n            this._dataSource.ready = true;\n            this.emit('ready');\n            return;\n        }\n\n        for (let key in data) {\n            /* Only map properties that exists on our model */\n            let ownPropertyDescriptor = Object.getOwnPropertyDescriptor(this, key);\n            if (ownPropertyDescriptor && ownPropertyDescriptor.enumerable) {\n                /* If child is a primitive, listen to changes so we can synch with Firebase */\n                ObjectHelper.addPropertyToObject(this, key, data[key], true, true, this._onSetterTriggered);\n            }\n\n        }\n\n        this._dataSource.ready = true;\n        this.emit('ready');\n    }\n\n    /**\n     * Clones a dataSource (to not disturb any existing callbacks defined on the original) and uses it\n     * to get a dataSnapshot which is used in _buildSnapshot to build our object.\n     * @param {DataSource} dataSource DataSource to build the PrioritisedObject from.\n     * @returns {void}\n     * @private\n     */\n    _buildFromDataSource(dataSource) {\n        if (!dataSource) {\n            return;\n        }\n        dataSource.once('value', this._buildFromSnapshot);\n    }\n\n    /**\n     * Gets called whenever a property value is set on this object.\n     * This can happen when local code modifies it, or when the dataSource updates it.\n     * We only propagate changes to the dataSource if the change was local.\n     * @returns {void}\n     * @private\n     */\n    _onSetterTriggered() {\n        if (!this._isBeingWrittenByDatasource) {\n            return this._dataSource.setWithPriority(ObjectHelper.getEnumerableProperties(this), this._priority);\n        }\n    }\n\n    /**\n     * Gets called whenever the current PrioritisedObject is changed by the dataSource.\n     * @param {Snapshot} dataSnapshot Snapshot of the new object value.\n     * @param {String} previousSiblingID ID of the model preceding the current one.\n     * @returns {void}\n     * @private\n     */\n    _onChildValue(dataSnapshot, previousSiblingID) {\n\n        /* If the new dataSource data is equal to what we have locally,\n         * this is an update triggered by a local change having been pushed\n         * to the remote dataSource. We can ignore it.\n         */\n        if (isEqual(ObjectHelper.getEnumerableProperties(this), dataSnapshot.val())) {\n            this.emit('value', this, previousSiblingID);\n            return;\n        }\n\n        /* Make sure we don't trigger pushes to dataSource whilst repopulating with new dataSource data */\n        this._isBeingWrittenByDatasource = true;\n        this._buildFromSnapshot(dataSnapshot);\n        this._isBeingWrittenByDatasource = false;\n\n        this.emit('value', this, previousSiblingID);\n    }\n\n    /* TODO: implement partial updates of model */\n    _onChildAdded(dataSnapshot, previousSiblingID) {\n        this.emit('added', this, previousSiblingID);\n    }\n\n    _onChildMoved(dataSnapshot, previousSiblingID) {\n        this.emit('moved', this, previousSiblingID);\n    }\n\n    _onChildRemoved(dataSnapshot, previousSiblingID) {\n        this.emit('removed', this, previousSiblingID);\n    }\n}\n"
  },
  {
    "__docId__": 258,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PrioritisedObject",
    "memberof": "src/data/PrioritisedObject.js",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject",
    "access": null,
    "export": true,
    "importPath": "./src/data/PrioritisedObject.js",
    "importStyle": "{PrioritisedObject}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "eventemitter3~EventEmitter"
    ]
  },
  {
    "__docId__": 259,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#id",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 260,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#id",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 261,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_id",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_id",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 262,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "priority",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#priority",
    "access": null,
    "description": "Priority (positioning) of the object in the dataSource",
    "lineNumber": 26,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 263,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "dataSource",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#dataSource",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 264,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "priority",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#priority",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 265,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_priority",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_priority",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 266,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "_inheritable",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_inheritable",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 267,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#constructor",
    "access": null,
    "description": "",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PrioritisedObject} PrioritisedObject instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataSource"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSource",
        "description": "DataSource to construct this PrioritisedObject with."
      },
      {
        "nullable": null,
        "types": [
          "Snapshot"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSnapshot",
        "description": "Optional: dataSnapshot already containing model data, so we can skip subscribing to the full data on the dataSource."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PrioritisedObject"
      ],
      "spread": false,
      "description": "PrioritisedObject instance."
    },
    "generator": false
  },
  {
    "__docId__": 268,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_valueChangedCallback",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_valueChangedCallback",
    "access": null,
    "description": "* Callbacks ***",
    "lineNumber": 55,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 269,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_id",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_id",
    "access": null,
    "description": "* Private properties ***",
    "lineNumber": 58,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 270,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_events",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_events",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 271,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 272,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_priority",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_priority",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isBeingWrittenByDatasource",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_isBeingWrittenByDatasource",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#remove",
    "access": null,
    "description": " Deletes the current object from the dataSource, and clears itself to free memory.",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 275,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "once",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#once",
    "access": null,
    "description": "Subscribes to the given event type exactly once; it automatically unsubscribes after the first time it is triggered.",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "One of the following Event Types: 'value', 'child_changed', 'child_moved', 'child_removed'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Function that is called when the given event type is emitted."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Optional: context of 'this' inside the handler function when it is called."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 276,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "on",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#on",
    "access": null,
    "description": "Subscribes to events emitted by this PrioritisedArray.",
    "lineNumber": 119,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "One of the following Event Types: 'value', 'child_changed', 'child_moved', 'child_removed'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Function that is called when the given event type is emitted."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Optional: context of 'this' inside the handler function when it is called."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 277,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "off",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#off",
    "access": null,
    "description": "Removes subscription to events emitted by this PrioritisedArray. If no handler or context is given, all handlers for\nthe given event are removed. If no parameters are given at all, all event types will have their handlers removed.",
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "One of the following Event Types: 'value', 'child_changed', 'child_moved', 'child_removed'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Function to remove from event callbacks."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Object to bind the given callback function to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 278,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "transaction",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#transaction",
    "access": null,
    "description": "Allows multiple modifications to be made to the model without triggering dataSource pushes and event emits for each change.\nTriggers a push to the dataSource after executing the given method. This push should then emit an event notifying subscribers of any changes.",
    "lineNumber": 205,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "Function in which the model can be modified."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 279,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "disableChangeListener",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#disableChangeListener",
    "access": null,
    "description": "Disables pushes of local changes to the dataSource, and stops event emits that refer to the model's data.",
    "lineNumber": 216,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 280,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isBeingWrittenByDatasource",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_isBeingWrittenByDatasource",
    "access": null,
    "description": null,
    "lineNumber": 217,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "enableChangeListener",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#enableChangeListener",
    "access": null,
    "description": "Enables pushes of local changes to the dataSource, and enables event emits that refer to the model's data.\nThe change listener is active by default, so you'll only need to call this method if you've previously called disableChangeListener().",
    "lineNumber": 226,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 282,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isBeingWrittenByDatasource",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_isBeingWrittenByDatasource",
    "access": null,
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 283,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildFromSnapshot",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_buildFromSnapshot",
    "access": "private",
    "description": "Recursively builds getter/setter based properties on current PrioritisedObject from\na given dataSnapshot. If an object value is detected, the object itself gets built as\nanother PrioritisedObject and set to the current PrioritisedObject as a property.",
    "lineNumber": 238,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Snapshot"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSnapshot",
        "description": "DataSnapshot to build the PrioritisedObject from."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 284,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_priority",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_priority",
    "access": null,
    "description": null,
    "lineNumber": 241,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 285,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_id",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_id",
    "access": null,
    "description": null,
    "lineNumber": 246,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 286,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 250,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 287,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildFromDataSource",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_buildFromDataSource",
    "access": "private",
    "description": "Clones a dataSource (to not disturb any existing callbacks defined on the original) and uses it\nto get a dataSnapshot which is used in _buildSnapshot to build our object.",
    "lineNumber": 281,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DataSource"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSource",
        "description": "DataSource to build the PrioritisedObject from."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 288,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onSetterTriggered",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_onSetterTriggered",
    "access": "private",
    "description": "Gets called whenever a property value is set on this object.\nThis can happen when local code modifies it, or when the dataSource updates it.\nWe only propagate changes to the dataSource if the change was local.",
    "lineNumber": 295,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 289,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onChildValue",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_onChildValue",
    "access": "private",
    "description": "Gets called whenever the current PrioritisedObject is changed by the dataSource.",
    "lineNumber": 308,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Snapshot"
        ],
        "spread": false,
        "optional": false,
        "name": "dataSnapshot",
        "description": "Snapshot of the new object value."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "previousSiblingID",
        "description": "ID of the model preceding the current one."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 290,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isBeingWrittenByDatasource",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_isBeingWrittenByDatasource",
    "access": null,
    "description": null,
    "lineNumber": 320,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 291,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isBeingWrittenByDatasource",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_isBeingWrittenByDatasource",
    "access": null,
    "description": null,
    "lineNumber": 322,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 292,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onChildAdded",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_onChildAdded",
    "access": null,
    "description": null,
    "lineNumber": 328,
    "undocument": true,
    "params": [
      {
        "name": "dataSnapshot",
        "types": [
          "*"
        ]
      },
      {
        "name": "previousSiblingID",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 293,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onChildMoved",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_onChildMoved",
    "access": null,
    "description": null,
    "lineNumber": 332,
    "undocument": true,
    "params": [
      {
        "name": "dataSnapshot",
        "types": [
          "*"
        ]
      },
      {
        "name": "previousSiblingID",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 294,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onChildRemoved",
    "memberof": "src/data/PrioritisedObject.js~PrioritisedObject",
    "longname": "src/data/PrioritisedObject.js~PrioritisedObject#_onChildRemoved",
    "access": null,
    "description": null,
    "lineNumber": 336,
    "undocument": true,
    "params": [
      {
        "name": "dataSnapshot",
        "types": [
          "*"
        ]
      },
      {
        "name": "previousSiblingID",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 295,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/Snapshot.js",
    "memberof": null,
    "longname": "src/data/Snapshot.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n\n @author: Tom Clement (tjclement)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nexport class Snapshot{\n    constructor(dataSnapshot){}\n\n    get key(){}\n    val(){}\n    get ref(){}\n    getPriority(){}\n    forEach(){}\n    numChildren(){}\n}"
  },
  {
    "__docId__": 296,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Snapshot",
    "memberof": "src/data/Snapshot.js",
    "longname": "src/data/Snapshot.js~Snapshot",
    "access": null,
    "export": true,
    "importPath": "./src/data/Snapshot.js",
    "importStyle": "{Snapshot}",
    "description": "\n\n\n@author: Tom Clement (tjclement)",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@license",
        "tagValue": "NPOSL-3.0"
      },
      {
        "tagName": "@copyright",
        "tagValue": "Bizboard, 2015"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 297,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/data/Snapshot.js~Snapshot",
    "longname": "src/data/Snapshot.js~Snapshot#constructor",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "dataSnapshot",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 298,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "key",
    "memberof": "src/data/Snapshot.js~Snapshot",
    "longname": "src/data/Snapshot.js~Snapshot#key",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "generator": false
  },
  {
    "__docId__": 299,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "val",
    "memberof": "src/data/Snapshot.js~Snapshot",
    "longname": "src/data/Snapshot.js~Snapshot#val",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 300,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "ref",
    "memberof": "src/data/Snapshot.js~Snapshot",
    "longname": "src/data/Snapshot.js~Snapshot#ref",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "generator": false
  },
  {
    "__docId__": 301,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPriority",
    "memberof": "src/data/Snapshot.js~Snapshot",
    "longname": "src/data/Snapshot.js~Snapshot#getPriority",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 302,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "forEach",
    "memberof": "src/data/Snapshot.js~Snapshot",
    "longname": "src/data/Snapshot.js~Snapshot#forEach",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 303,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "numChildren",
    "memberof": "src/data/Snapshot.js~Snapshot",
    "longname": "src/data/Snapshot.js~Snapshot#numChildren",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 304,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/datasources/FirebaseDataSource.js",
    "memberof": null,
    "longname": "src/data/datasources/FirebaseDataSource.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Tom Clement (tjclement)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\nimport firebase                     from 'firebase';\nimport merge                        from 'lodash/merge.js';\nimport {DataSource}                 from '../DataSource.js';\nimport {ObjectHelper}               from '../../utils/ObjectHelper.js';\nimport {provide}                    from '../../utils/di/Decorators.js';\nimport {combineOptions}             from '../../utils/CombineOptions.js';\n\n@provide(DataSource)\nexport class FirebaseDataSource extends DataSource {\n\n    get dataReference() {\n        return this._orderedDataReference;\n    }\n\n    set dataReference(value) {\n        this._orderedDataReference = value;\n    }\n\n    /**\n     * @param {String} path Full path to resource in remote data storage.\n     * @return {FirebaseDataSource} FirebaseDataSource instance.\n     * @param {Object} options Optional: options to construct the DataSource with.\n     * @param {String} [options.orderBy] Optional, order all items received through the dataSource.\n     *                                   Options are: '.priority', '.value', or a string containing the child key to order by (e.g. 'MyModelProperty')\n     * @param {Number} [options.limitToFirst] Optional, only subscribe to the first amount of entries.\n     * @param {Number} [options.limitToLast] Optional, only subscribe to the last amount of entries.\n     * @param {Promise} [options.synced] Optional, a promise to tell the data source that it is only synchronized after this promise is resolved\n     **/\n    constructor(path, options = {orderBy: '.priority'}) {\n        super(path);\n        this._onValueCallback = null;\n        this._onAddCallback = null;\n        this._onChangeCallback = null;\n        this._onMoveCallback = null;\n        this._onRemoveCallback = null;\n        this._dataReference = firebase.database().ref(path);\n        this.handlers = {};\n        this.options = combineOptions({synced: Promise.resolve()},options);\n        this._synced = this.options.synced;\n\n        /* Populate the orderedReference, which is the standard Firebase reference with an optional ordering\n         * defined. This needs to be saved seperately, because methods like child() and key() can't be called\n         * from the ordered reference, and must instead be performed on the standard reference. */\n\n        if (this.options.orderBy && this.options.orderBy === '.priority') {\n            this._orderedDataReference = this._dataReference.orderByPriority();\n        } else if (this.options.orderBy && this.options.orderBy === '.value') {\n            this._orderedDataReference = this._dataReference.orderByValue();\n        } else if (this.options.orderBy && this.options.orderBy !== '') {\n            this._orderedDataReference = this._dataReference.orderByChild(this.options.orderBy);\n        } else {\n            this._orderedDataReference = this._dataReference;\n        }\n\n        if (this.options.limitToFirst !== undefined) {\n            this._orderedDataReference = this._orderedDataReference.limitToFirst(this.options.limitToFirst);\n        } else if (this.options.limitToLast !== undefined) {\n            this._orderedDataReference = this._orderedDataReference.limitToLast(this.options.limitToLast);\n        }\n\n        /* Bind all local methods to the current object instance, so we can refer to \"this\"\n         * in the methods as expected, even when they're called from event handlers. */\n        ObjectHelper.bindAllMethods(this, this);\n    }\n\n    /**\n     * Returns the full path to this dataSource's source on the remote storage provider.\n     * @returns {String} Full resource path.\n     */\n    toString() {\n        return this._dataReference.toString();\n    }\n\n    /**\n     * Resolves when the DataSource is synchronized to the server\n     * @returns {Promise} Resolves when the DataSource is synchronized\n     */\n    synced() {\n        return this._synced;\n    }\n\n    /**\n     * Returns a dataSource reference to the given child branch of the current datasource.\n     * @param {String} childName Child branch name.\n     * @param {Object} options Optional: additional options to pass to new DataSource instance.\n     * @returns {DataSource} New dataSource instance pointing to the given child branch.\n     */\n    child(childName, options = {}) {\n        return new FirebaseDataSource(`${this.path()}/${childName}`, options);\n    }\n\n    /**\n     * Returns the full URL to the path on the dataSource. Functionally identical to toString().\n     * @returns {String} Full resource path.\n     */\n    path() {\n        let rootUrl = this.root();\n        let parentUrl = this.parent();\n\n        let relativePath = parentUrl.replace(rootUrl, '');\n        return `${relativePath}/${this.key()}`;\n    }\n\n    /**\n     * Returns the name of the current branch in the path on the dataSource.\n     * @returns {String} Current branch name.\n     */\n    key() {\n        return (this._dataReference.key || '').toString();\n    }\n\n    /**\n     * Returns the full URL to the parent of the current branch on the dataSource.\n     * @returns {String} Full resource path of parent.\n     */\n    parent() {\n        return (this._dataReference.parent || '').toString();\n    }\n\n    /**\n     * Returns the full URL to the root on the dataSource.\n     * @returns {String} Full resource path of root.\n     */\n    root() {\n        return (this._dataReference.root || '').toString();\n    }\n\n    /**\n     * Writes newData to the path this dataSource was constructed with.\n     * @param {Object} newData Data to write to dataSource.\n     * @returns {Promise} Resolves when write to server is complete.\n     */\n    set(newData) {\n        let completionPromise = this._dataReference.set(newData);\n        /* Append another promise to the chain to keep track of whether it's still synchronized */\n        this._synced = this._synced.then(() => completionPromise);\n        return completionPromise\n    }\n\n    /**\n     * Removes the object and all underlying children that this dataSource points to.\n     * @returns {void}\n     */\n    remove() {\n        return this._dataReference.remove();\n    }\n\n    /**\n     * Writes newData to the path this dataSource was constructed with, appended by a random UID generated by\n     * the dataSource.\n     * @param {Object} newData New data to append to dataSource.\n     * @returns {FirebaseDataSource} A new FirebaseDataSource pointing to the injected data.\n     */\n    push(newData) {\n        let pushResult = this._dataReference.push(newData);\n        return new FirebaseDataSource(`${this.path()}/${pushResult.key}`, {synced: pushResult});\n    }\n\n    /**\n     * Writes newData with given priority (ordering) to the path this dataSource was constructed with.\n     * @param {Object} newData New data to set.\n     * @param {String|Number} priority Priority value by which the data should be ordered.\n     * @returns {Promise} Resolves when write to server is complete.\n     */\n    setWithPriority(newData, priority) {\n        let completionPromise = this.dataReference.setWithPriority(newData, priority);\n        /* Append another promise to the chain to keep track of whether it's still synchronized */\n        this._synced = this._synced.then(() => completionPromise);\n        return completionPromise;\n    }\n\n    /**\n     * Sets the priority (ordering) of an object on a given dataSource.\n     * @param {String|Number} newPriority New priority value to order data by.\n     * @returns {void}\n     */\n    setPriority(newPriority) {\n        return this.dataReference.setPriority(newPriority);\n    }\n\n    /**\n     * Orders the DataSource's childs by the value in child[key].\n     * @param {String} childKey Key of the field to order by.\n     * @returns {DataSource} New dataSource instance.\n     */\n    orderByChild(childKey) {\n        return new FirebaseDataSource(this.path(), merge({}, this.options, {orderBy: childKey}));\n    }\n\n    /**\n     * Orders the DataSource's childs by their key names, ignoring their priority.\n     * @returns {DataSource} New dataSource instance.\n     */\n    orderByKey() {\n        return new FirebaseDataSource(this.path(), merge({}, this.options, {orderBy: '.key'}));\n    }\n\n    /**\n     * Orders the DataSource's childs by their values, ignoring their priority.\n     * @returns {DataSource} New dataSource instance.\n     */\n    orderByValue() {\n        return new FirebaseDataSource(this.path(), merge({}, this.options, {orderBy: '.value'}));\n    }\n\n    /**\n     * Returns a new dataSource reference that will limit the subscription to only the first given amount items.\n     * @param {Number} amount Amount of items to limit the dataSource to.\n     * @returns {DataSource} New dataSource instance.\n     */\n    limitToFirst(amount) {\n        return new FirebaseDataSource(this.path(), merge({}, this.options, {limitToFirst: amount}));\n    }\n\n    /**\n     * Returns a new dataSource reference that will limit the subscription to only the last given amount items.\n     * @param {Number} amount Amount of items to limit the dataSource to.\n     * @returns {DataSource} New dataSource instance.\n     */\n    limitToLast(amount) {\n        return new FirebaseDataSource(this.path(), merge({}, this.options, {limitToLast: amount}));\n    }\n\n    /**\n     * Authenticates all instances of this DataSource with the given OAuth provider and credentials.\n     * @param {String} provider google, facebook, github, or twitter\n     * @param {String|Object} credentials Access token string, or object with key/value pairs with e.g. OAuth 1.1 credentials.\n     * @param {Function} onComplete Callback, executed when login is completed either successfully or erroneously.\n     * On error, first argument is error message.\n     * On success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires.\n     * @returns {Promise} A promise that resolves after successful authentication.\n     */\n    authWithOAuthToken(provider, credentials, onComplete) {\n        credentials.provider = provider;\n        return firebase.auth().signInWithCredential(credentials).then((user) => {\n            if (onComplete) {\n                onComplete(user);\n            }\n            return user;\n        });\n    }\n\n    /**\n     * Authenticates all instances of this DataSource with a custom auth token or secret.\n     * @param {String} authToken Authentication token or secret.\n     * @param {Function} onComplete Callback, executed when login is completed either successfully or erroneously.\n     * On error, first argument is error message.\n     * On success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires.\n     * @returns {Promise} A promise that resolves after successful authentication.\n     */\n    authWithCustomToken(authToken, onComplete) {\n        return firebase.auth().signInWithCustomToken(authToken).then((user) => {\n            if (onComplete) {\n                onComplete(user);\n            }\n            return user;\n        });\n    }\n\n    /**\n     * Authenticates all instances of this DataSource with the given email/password credentials.\n     * @param {String|Object} credentials Object with key/value pairs {email: \"value\", password:\"value\"}.\n     * @param {Function} onComplete Callback, executed when login is completed either successfully or erroneously.\n     * On error, first argument is error message.\n     * On success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires.\n     * @returns {Promise} A promise that resolves after successful authentication.\n     */\n    authWithPassword(credentials, onComplete) {\n        return firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password).then((user) => {\n            if (onComplete) {\n                onComplete(user);\n            }\n            return user;\n        });\n    }\n\n    /**\n     * Authenticates all instances of this DataSource as an anonymous user.\n     * @param {Function} onComplete Callback, executed when login is completed either successfully or erroneously.\n     * On error, first argument is error message.\n     * On success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires.\n     * @param {Object} options Optional, additional client arguments, such as configuring session persistence.\n     * @returns {Promise} A promise that resolves after successful authentication.\n     */\n    authAnonymously(options) {\n        return firebase.auth().signInAnonymously();\n    }\n\n    /**\n     * Fetches the current user's authentication state.\n     * If the user is authenticated, returns an object containing at least the fields uid, provider, auth, and expires.\n     * If the user is not authenticated, returns null.\n     * @returns {Object|null} User auth object.\n     */\n    getAuth() {\n        let firebaseAuth = firebase.auth();\n        let {currentUser} = firebaseAuth;\n        if (!this._authDataPresent) {\n            if (currentUser) {\n                this._authDataPresent = true;\n                return Promise.resolve(currentUser);\n            } else {\n                return new Promise((resolve) => {\n                    firebaseAuth.onAuthStateChanged((newUser) => {\n                        this._authDataPresent = true;\n                        resolve(newUser);\n                    });\n                });\n            }\n        } else {\n            return Promise.resolve(currentUser);\n        }\n    }\n\n    /**\n     * Logs out from the datasource, allowing to re-authenticate at a later time.\n     * @returns {void}\n     */\n    unauth() {\n        return firebase.auth().signOut();\n    }\n\n    /**\n     * Subscribe to an event emitted by the DataSource.\n     * @param {String} event Event type to subscribe to. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed', 'child_moved'.\n     * @param {Function} handler Function to call when the subscribed event is emitted.\n     * @param {Object} context Context to set 'this' to when calling the handler function.\n     * @returns {void}\n     */\n    on(event, handler, context = this) {\n        let boundHandler = this.handlers[handler] = handler.bind(this);\n        this._orderedDataReference.on(event, boundHandler);\n    }\n\n    /**\n     * Subscribe to an event emitted by the DataSource once, and then immediately unsubscribe again once it has been emitted a single time.\n     * @param {String} event Event type to subscribe to. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed', 'child_moved'.\n     * @param {Function} handler Function to call when the subscribed event is emitted.\n     * @param {Object} context Context to set 'this' to when calling the handler function.\n     * @returns {void}\n     */\n    once(event, handler, context = this) {\n        function onceWrapper() {\n            handler.call(context, ...arguments);\n            this.off(event, onceWrapper);\n        }\n\n        return this.on(event, onceWrapper, this);\n    }\n\n\n    /**\n     * Unsubscribe to a previously subscribed event. If no handler or context is given, all handlers for\n     * the given event are removed. If no parameters are given at all, all event types will have their handlers removed.\n     * @param {String} event Event type to unsubscribe from. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed', 'child_moved'.\n     * @param {Function} handler Optional: Function that was used in previous subscription.\n     * @returns {void}\n     */\n    off(event, handler) {\n        let boundHandler = this.handlers[handler];\n        this._orderedDataReference.off(event, boundHandler);\n    }\n\n    /**\n     * Sets the callback triggered when dataSource updates the data.\n     * @param {Function} callback Callback function to call when the subscribed data value changes.\n     * @deprecated Use the on() method instead.\n     * @returns {void}\n     **/\n    setValueChangedCallback(callback) {\n        this._onValueCallback = callback;\n        this.on('value', callback);\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource updates the data.\n     * @deprecated Use the off() method instead.\n     * @returns {void}\n     **/\n    removeValueChangedCallback() {\n        if (this._onValueCallback) {\n            this.off('value', this._onValueCallback);\n            this._onValueCallback = null;\n        }\n    }\n\n    /**\n     * Set the callback triggered when dataSource adds a data element.\n     * @param {Function} callback Callback function to call when a new data child is added.\n     * @deprecated Use the on() method instead.\n     * @returns {void}\n     **/\n    setChildAddedCallback(callback) {\n        this._onAddCallback = callback;\n        this.on('child_added', callback);\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource adds a data element.\n     * @deprecated Use the off() method instead.\n     * @returns {void}\n     **/\n    removeChildAddedCallback() {\n        if (this._onAddCallback) {\n            this.off('child_added', this._onAddCallback);\n            this._onAddCallback = null;\n        }\n    }\n\n    /**\n     * Set the callback triggered when dataSource changes a data element.\n     * @param {Function} callback Callback function to call when a child is changed.\n     * @deprecated Use the on() method instead.\n     * @returns {void}\n     **/\n    setChildChangedCallback(callback) {\n        this._onChangeCallback = callback;\n        this.on('child_changed', callback);\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource changes a data element.\n     * @deprecated Use the off() method instead.\n     * @returns {void}\n     **/\n    removeChildChangedCallback() {\n        if (this._onChangeCallback) {\n            this.off('child_changed', this._onChangeCallback);\n            this._onChangeCallback = null;\n        }\n    }\n\n    /**\n     * Set the callback triggered when dataSource moves a data element.\n     * @param {Function} callback Callback function to call when a child is moved.\n     * @deprecated Use the on() method instead.\n     * @returns {void}\n     **/\n    setChildMovedCallback(callback) {\n        this._onMoveCallback = callback;\n        this.on('child_moved', callback);\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource moves a data element.\n     * @deprecated Use the off() method instead.\n     * @returns {void}\n     **/\n    removeChildMovedCallback() {\n        if (this._onMoveCallback) {\n            this.off('child_moved', this._onMoveCallback);\n            this._onMoveCallback = null;\n        }\n    }\n\n    /**\n     * Set the callback triggered when dataSource removes a data element.\n     * @param {Function} callback Callback function to call when a child is removed.\n     * @deprecated Use the on() method instead.\n     * @returns {void}\n     **/\n    setChildRemovedCallback(callback) {\n        this._onRemoveCallback = callback;\n        this.on('child_removed', this._onRemoveCallback);\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource removes a data element.\n     * @deprecated Use the off() method instead.\n     * @returns {void}\n     **/\n    removeChildRemovedCallback() {\n        if (this._onRemoveCallback) {\n            this.off('child_removed', this._onRemoveCallback);\n            this._onRemoveCallback = null;\n        }\n    }\n}"
  },
  {
    "__docId__": 305,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FirebaseDataSource",
    "memberof": "src/data/datasources/FirebaseDataSource.js",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "access": null,
    "export": true,
    "importPath": "./src/data/datasources/FirebaseDataSource.js",
    "importStyle": "{FirebaseDataSource}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/data/DataSource.js~DataSource"
    ]
  },
  {
    "__docId__": 306,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "dataReference",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#dataReference",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 307,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "dataReference",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#dataReference",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 308,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_orderedDataReference",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_orderedDataReference",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 309,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#constructor",
    "access": null,
    "description": "",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Full path to resource in remote data storage."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional: options to construct the DataSource with."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "options.orderBy",
        "description": "Optional, order all items received through the dataSource.\n                                  Options are: '.priority', '.value', or a string containing the child key to order by (e.g. 'MyModelProperty')"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.limitToFirst",
        "description": "Optional, only subscribe to the first amount of entries."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.limitToLast",
        "description": "Optional, only subscribe to the last amount of entries."
      },
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": true,
        "name": "options.synced",
        "description": "Optional, a promise to tell the data source that it is only synchronized after this promise is resolved"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FirebaseDataSource"
      ],
      "spread": false,
      "description": "FirebaseDataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 310,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onValueCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onValueCallback",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 311,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onAddCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onAddCallback",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 312,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onChangeCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onChangeCallback",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onMoveCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onMoveCallback",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onRemoveCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onRemoveCallback",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataReference",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_dataReference",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "handlers",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#handlers",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 317,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#options",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_synced",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_synced",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_orderedDataReference",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_orderedDataReference",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_orderedDataReference",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_orderedDataReference",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 321,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_orderedDataReference",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_orderedDataReference",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_orderedDataReference",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_orderedDataReference",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 323,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_orderedDataReference",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_orderedDataReference",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_orderedDataReference",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_orderedDataReference",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toString",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#toString",
    "access": null,
    "description": "Returns the full path to this dataSource's source on the remote storage provider.",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} Full resource path."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Full resource path."
    },
    "generator": false
  },
  {
    "__docId__": 326,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "synced",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#synced",
    "access": null,
    "description": "Resolves when the DataSource is synchronized to the server",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Resolves when the DataSource is synchronized"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves when the DataSource is synchronized"
    },
    "generator": false
  },
  {
    "__docId__": 327,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "child",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#child",
    "access": null,
    "description": "Returns a dataSource reference to the given child branch of the current datasource.",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance pointing to the given child branch."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "childName",
        "description": "Child branch name."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional: additional options to pass to new DataSource instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance pointing to the given child branch."
    },
    "generator": false
  },
  {
    "__docId__": 328,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "path",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#path",
    "access": null,
    "description": "Returns the full URL to the path on the dataSource. Functionally identical to toString().",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} Full resource path."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Full resource path."
    },
    "generator": false
  },
  {
    "__docId__": 329,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "key",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#key",
    "access": null,
    "description": "Returns the name of the current branch in the path on the dataSource.",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} Current branch name."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Current branch name."
    },
    "generator": false
  },
  {
    "__docId__": 330,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "parent",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#parent",
    "access": null,
    "description": "Returns the full URL to the parent of the current branch on the dataSource.",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} Full resource path of parent."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Full resource path of parent."
    },
    "generator": false
  },
  {
    "__docId__": 331,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "root",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#root",
    "access": null,
    "description": "Returns the full URL to the root on the dataSource.",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} Full resource path of root."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Full resource path of root."
    },
    "generator": false
  },
  {
    "__docId__": 332,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#set",
    "access": null,
    "description": "Writes newData to the path this dataSource was constructed with.",
    "lineNumber": 141,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Resolves when write to server is complete."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newData",
        "description": "Data to write to dataSource."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves when write to server is complete."
    },
    "generator": false
  },
  {
    "__docId__": 333,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_synced",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_synced",
    "access": null,
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#remove",
    "access": null,
    "description": "Removes the object and all underlying children that this dataSource points to.",
    "lineNumber": 152,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 335,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "push",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#push",
    "access": null,
    "description": "Writes newData to the path this dataSource was constructed with, appended by a random UID generated by\nthe dataSource.",
    "lineNumber": 162,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{FirebaseDataSource} A new FirebaseDataSource pointing to the injected data."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newData",
        "description": "New data to append to dataSource."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "FirebaseDataSource"
      ],
      "spread": false,
      "description": "A new FirebaseDataSource pointing to the injected data."
    },
    "generator": false
  },
  {
    "__docId__": 336,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setWithPriority",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#setWithPriority",
    "access": null,
    "description": "Writes newData with given priority (ordering) to the path this dataSource was constructed with.",
    "lineNumber": 173,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Resolves when write to server is complete."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newData",
        "description": "New data to set."
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "priority",
        "description": "Priority value by which the data should be ordered."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves when write to server is complete."
    },
    "generator": false
  },
  {
    "__docId__": 337,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_synced",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_synced",
    "access": null,
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setPriority",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#setPriority",
    "access": null,
    "description": "Sets the priority (ordering) of an object on a given dataSource.",
    "lineNumber": 185,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "newPriority",
        "description": "New priority value to order data by."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 339,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "orderByChild",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#orderByChild",
    "access": null,
    "description": "Orders the DataSource's childs by the value in child[key].",
    "lineNumber": 194,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "childKey",
        "description": "Key of the field to order by."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 340,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "orderByKey",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#orderByKey",
    "access": null,
    "description": "Orders the DataSource's childs by their key names, ignoring their priority.",
    "lineNumber": 202,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 341,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "orderByValue",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#orderByValue",
    "access": null,
    "description": "Orders the DataSource's childs by their values, ignoring their priority.",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 342,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "limitToFirst",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#limitToFirst",
    "access": null,
    "description": "Returns a new dataSource reference that will limit the subscription to only the first given amount items.",
    "lineNumber": 219,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "Amount of items to limit the dataSource to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 343,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "limitToLast",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#limitToLast",
    "access": null,
    "description": "Returns a new dataSource reference that will limit the subscription to only the last given amount items.",
    "lineNumber": 228,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "Amount of items to limit the dataSource to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 344,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authWithOAuthToken",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#authWithOAuthToken",
    "access": null,
    "description": "Authenticates all instances of this DataSource with the given OAuth provider and credentials.",
    "lineNumber": 241,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} A promise that resolves after successful authentication."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "provider",
        "description": "google, facebook, github, or twitter"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "credentials",
        "description": "Access token string, or object with key/value pairs with e.g. OAuth 1.1 credentials."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "onComplete",
        "description": "Callback, executed when login is completed either successfully or erroneously.\nOn error, first argument is error message.\nOn success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that resolves after successful authentication."
    },
    "generator": false
  },
  {
    "__docId__": 345,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authWithCustomToken",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#authWithCustomToken",
    "access": null,
    "description": "Authenticates all instances of this DataSource with a custom auth token or secret.",
    "lineNumber": 259,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} A promise that resolves after successful authentication."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "authToken",
        "description": "Authentication token or secret."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "onComplete",
        "description": "Callback, executed when login is completed either successfully or erroneously.\nOn error, first argument is error message.\nOn success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that resolves after successful authentication."
    },
    "generator": false
  },
  {
    "__docId__": 346,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authWithPassword",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#authWithPassword",
    "access": null,
    "description": "Authenticates all instances of this DataSource with the given email/password credentials.",
    "lineNumber": 276,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} A promise that resolves after successful authentication."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "credentials",
        "description": "Object with key/value pairs {email: \"value\", password:\"value\"}."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "onComplete",
        "description": "Callback, executed when login is completed either successfully or erroneously.\nOn error, first argument is error message.\nOn success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that resolves after successful authentication."
    },
    "generator": false
  },
  {
    "__docId__": 347,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authAnonymously",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#authAnonymously",
    "access": null,
    "description": "Authenticates all instances of this DataSource as an anonymous user.",
    "lineNumber": 293,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} A promise that resolves after successful authentication."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "onComplete",
        "description": "Callback, executed when login is completed either successfully or erroneously.\nOn error, first argument is error message.\nOn success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional, additional client arguments, such as configuring session persistence."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that resolves after successful authentication."
    },
    "generator": false
  },
  {
    "__docId__": 348,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAuth",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#getAuth",
    "access": null,
    "description": "Fetches the current user's authentication state.\nIf the user is authenticated, returns an object containing at least the fields uid, provider, auth, and expires.\nIf the user is not authenticated, returns null.",
    "lineNumber": 303,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object|null} User auth object."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "null"
      ],
      "spread": false,
      "description": "User auth object."
    },
    "generator": false
  },
  {
    "__docId__": 349,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_authDataPresent",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_authDataPresent",
    "access": null,
    "description": null,
    "lineNumber": 308,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_authDataPresent",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_authDataPresent",
    "access": null,
    "description": null,
    "lineNumber": 313,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unauth",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#unauth",
    "access": null,
    "description": "Logs out from the datasource, allowing to re-authenticate at a later time.",
    "lineNumber": 327,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 352,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "on",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#on",
    "access": null,
    "description": "Subscribe to an event emitted by the DataSource.",
    "lineNumber": 338,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event type to subscribe to. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed', 'child_moved'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Function to call when the subscribed event is emitted."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Context to set 'this' to when calling the handler function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 353,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "once",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#once",
    "access": null,
    "description": "Subscribe to an event emitted by the DataSource once, and then immediately unsubscribe again once it has been emitted a single time.",
    "lineNumber": 350,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event type to subscribe to. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed', 'child_moved'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Function to call when the subscribed event is emitted."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Context to set 'this' to when calling the handler function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 354,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "off",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#off",
    "access": null,
    "description": "Unsubscribe to a previously subscribed event. If no handler or context is given, all handlers for\nthe given event are removed. If no parameters are given at all, all event types will have their handlers removed.",
    "lineNumber": 367,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event type to unsubscribe from. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed', 'child_moved'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Optional: Function that was used in previous subscription."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 355,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setValueChangedCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#setValueChangedCallback",
    "access": null,
    "description": "Sets the callback triggered when dataSource updates the data.",
    "lineNumber": 378,
    "deprecated": "Use the on() method instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when the subscribed data value changes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 356,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onValueCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onValueCallback",
    "access": null,
    "description": null,
    "lineNumber": 379,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeValueChangedCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#removeValueChangedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource updates the data.",
    "lineNumber": 388,
    "deprecated": "Use the off() method instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 358,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onValueCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onValueCallback",
    "access": null,
    "description": null,
    "lineNumber": 391,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 359,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setChildAddedCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#setChildAddedCallback",
    "access": null,
    "description": "Set the callback triggered when dataSource adds a data element.",
    "lineNumber": 401,
    "deprecated": "Use the on() method instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when a new data child is added."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 360,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onAddCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onAddCallback",
    "access": null,
    "description": null,
    "lineNumber": 402,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 361,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeChildAddedCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#removeChildAddedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource adds a data element.",
    "lineNumber": 411,
    "deprecated": "Use the off() method instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 362,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onAddCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onAddCallback",
    "access": null,
    "description": null,
    "lineNumber": 414,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 363,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setChildChangedCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#setChildChangedCallback",
    "access": null,
    "description": "Set the callback triggered when dataSource changes a data element.",
    "lineNumber": 424,
    "deprecated": "Use the on() method instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when a child is changed."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 364,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onChangeCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onChangeCallback",
    "access": null,
    "description": null,
    "lineNumber": 425,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 365,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeChildChangedCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#removeChildChangedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource changes a data element.",
    "lineNumber": 434,
    "deprecated": "Use the off() method instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 366,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onChangeCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onChangeCallback",
    "access": null,
    "description": null,
    "lineNumber": 437,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 367,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setChildMovedCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#setChildMovedCallback",
    "access": null,
    "description": "Set the callback triggered when dataSource moves a data element.",
    "lineNumber": 447,
    "deprecated": "Use the on() method instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when a child is moved."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 368,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onMoveCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onMoveCallback",
    "access": null,
    "description": null,
    "lineNumber": 448,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeChildMovedCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#removeChildMovedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource moves a data element.",
    "lineNumber": 457,
    "deprecated": "Use the off() method instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 370,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onMoveCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onMoveCallback",
    "access": null,
    "description": null,
    "lineNumber": 460,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 371,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setChildRemovedCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#setChildRemovedCallback",
    "access": null,
    "description": "Set the callback triggered when dataSource removes a data element.",
    "lineNumber": 470,
    "deprecated": "Use the on() method instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when a child is removed."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 372,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onRemoveCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onRemoveCallback",
    "access": null,
    "description": null,
    "lineNumber": 471,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 373,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeChildRemovedCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#removeChildRemovedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource removes a data element.",
    "lineNumber": 480,
    "deprecated": "Use the off() method instead.",
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 374,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onRemoveCallback",
    "memberof": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource",
    "longname": "src/data/datasources/FirebaseDataSource.js~FirebaseDataSource#_onRemoveCallback",
    "access": null,
    "description": null,
    "lineNumber": 483,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 375,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/datasources/SharePoint/DataModelGenerator.js",
    "memberof": null,
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Hans van den Akker (mysim1)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport XML2JS               from './xml2js.js';\nimport template             from 'lodash/template.js';\nimport {PostRequest}        from '../../../utils/request/RequestClient.js';\nimport {ObjectHelper}       from '../../../utils/ObjectHelper.js';\nimport {UrlParser}          from '../../../utils/request/UrlParser.js';\nimport {ParseStringToXml}   from '../../../utils/request/XmlParser.js';\n\n\nexport class DataModelGenerator {\n\n    constructor(originalPath, schema) {\n\n        // initialize the arguments\n        if (!schema) throw 'Schema wasn\\'t provided.';\n        if (schema && schema.Prefix) {\n            this._applicationId = schema.Prefix;\n        }\n\n        this.hidden = 'TRUE';\n        this._originalPath = originalPath;\n        this._Schema = schema.Schema;\n        this._Seed = schema.Seed;\n\n        // if the dataspec contains an instruction 'hidden' have this setting override the default\n        if (schema &&\n            typeof schema.hidden == 'boolean') {\n            this.hidden = schema.hidden.toString().toUpperCase();\n        }\n\n        /* Bind all local methods to the current object instance, so we can refer to 'this'\n         * in the methods as expected, even when they're called from event handlers.        */\n        ObjectHelper.bindAllMethods(this, this);\n\n        /* Hide all private properties (starting with '_') and methods from enumeration,\n         * so when you do for( in ), only actual data properties show up. */\n        ObjectHelper.hideMethodsAndPrivatePropertiesFromObject(this);\n    }\n\n\n    Deploy() {\n        if (!this._Schema) throw 'There is no schema to deploy.';\n        //var listOfPromisesToFullfill = [];\n\n        return new Promise(async function (resolve, reject) {\n\n            // iterate through all tables listed.\n            for (let table in this._Schema) {\n\n                try {\n                    let listCreated = await this._GetOrCreateList(table);\n                    var fields = this._Schema[table];\n                    if (fields && fields.length > 0) {\n                        let modelCreated = await this._GetOrCreateModel(table, fields, listCreated);\n                        let viewCreated = await this._UpdateDefaultView(table, fields, listCreated);\n                    }\n\n                } catch (ex) {\n                    console.log(ex);\n                }\n            }\n\n            resolve();\n\n        }.bind(this));\n    }\n\n    Seed() {\n        if (!this._Seed) throw 'There is no seed to deploy.';\n\n\n    }\n\n\n    _UpdateDefaultView(listName, fields, listCreated) {\n\n        return new Promise(async function (resolve, reject) {\n\n            try {\n\n                // resolve correct info\n                let firstRequest = this._getDefaultViewRequest(listName);\n                let viewResult = await PostRequest(firstRequest);\n\n                // update\n                let viewId = this._ResolveViewID(viewResult.response);\n                let updateRequest = this._getUpdateViewRequest(listName, viewId, fields);\n                let updateResult = await PostRequest(updateRequest);\n\n                resolve(updateResult.response);\n            }\n            catch (ex) {\n                console.log(ex);\n                reject(ex);\n            }\n        }.bind(this));\n    }\n\n\n    _ResolveViewID(response) {\n\n        let data = ParseStringToXml(response);\n        let idNode;\n\n        if (typeof(data.selectSingleNode) != 'undefined')\n            idNode = data.selectSingleNode('//View[@DefaultView=\\'TRUE\\']');\n        else\n            idNode = data.querySelector('View[DefaultView=\\'TRUE\\']');\n\n        let idAttribute = '';\n        if (idNode) idAttribute = idNode.getAttribute('Name');\n\n        return idAttribute;\n    }\n\n    _getUpdateViewRequest(listName, viewName, fieldNames) {\n\n        // rough configuration object\n        let params = {\n            listName: listName,\n            viewName: viewName,\n            viewFields: {\n                ViewFields: {\n                    FieldRef: []\n                }\n            },\n            rowLimit: {RowLimit: 100}\n        };\n\n        for (let fn = 0; fn < fieldNames.length; fn++) {\n            params.viewFields.ViewFields.FieldRef.push({\n                '_Name': fieldNames[fn].name\n            });\n        }\n\n        return {\n            url: this._ParsePath(this._originalPath, this._GetViewService),\n            headers: new Map([\n                ['SOAPAction', 'http://schemas.microsoft.com/sharepoint/soap/UpdateView'],\n                ['Content-Type', 'text/xml']\n            ]),\n            data: this._applySoapTemplate({\n                method: 'UpdateView',\n                params: this._serializeParams(params)\n            })\n        };\n    }\n\n    _getDefaultViewRequest(listName) {\n        // rough configuration object\n        let params = {\n            listName: listName\n        };\n\n        return {\n            url: this._ParsePath(this._originalPath, this._GetViewService),\n            headers: new Map([\n                ['SOAPAction', 'http://schemas.microsoft.com/sharepoint/soap/GetView'],\n                ['Content-Type', 'text/xml']\n            ]),\n            data: this._applySoapTemplate({\n                method: 'GetView',\n                params: this._serializeParams(params)\n            })\n        };\n    }\n\n    _getListExistRequest(listName) {\n        // rough configuration object\n        let params = {\n            listName: listName\n        };\n\n        return {\n            url: this._ParsePath(this._originalPath, this._GetListService),\n            headers: new Map([\n                ['SOAPAction', 'http://schemas.microsoft.com/sharepoint/soap/GetList'],\n                ['Content-Type', 'text/xml']\n            ]),\n            data: this._applySoapTemplate({\n                method: 'GetList',\n                params: this._serializeParams(params)\n            })\n        };\n    }\n\n    _getListCreationRequest(listName, listDescription) {\n        // rough configuration object\n        let params = {\n            listName: listName,\n            description: listDescription,\n            templateID: '100'\n        };\n\n        return {\n            url: this._ParsePath(this._originalPath, this._GetListService),\n            headers: new Map([\n                ['SOAPAction', 'http://schemas.microsoft.com/sharepoint/soap/AddList'],\n                ['Content-Type', 'text/xml']\n            ]),\n            data: this._applySoapTemplate({\n                method: 'AddList',\n                params: this._serializeParams(params)\n            })\n        };\n    }\n\n    _getListUpdateRequest(params) {\n\n        return {\n            url: this._ParsePath(this._originalPath, this._GetListService),\n            headers: new Map([\n                ['SOAPAction', 'http://schemas.microsoft.com/sharepoint/soap/UpdateList'],\n                ['Content-Type', 'text/xml']\n            ]),\n            data: this._applySoapTemplate({\n                method: 'UpdateList',\n                params: this._serializeParams(params)\n            })\n        };\n    }\n\n    /**\n     *\n     * @param listName\n     * @param description\n     * @returns {Promise}\n     * @constructor\n     */\n    _GetOrCreateList(listName, description = '') {\n\n        return new Promise(async function (resolve, reject) {\n\n            try {\n                let existingListRequest = this._getListExistRequest(listName);\n                let existingResult = await PostRequest(existingListRequest);\n                resolve(existingResult.response);\n            }\n            catch (ex) {\n                let newListRequest = this._getListCreationRequest(listName, description);\n                let creationResult = await PostRequest(newListRequest);\n                resolve(creationResult.response);\n            }\n        }.bind(this));\n    }\n\n    async _GetOrCreateModel(listName, modelDescription, listData) {\n\n        let listOfLookups = [];\n        let fieldsAdded = 0;\n        // rough configuration object\n        let params = {\n            listName: listName,\n            updateFields: {\n                Fields: {\n                    Method: [{\n                        '_ID': 0, /* We automatically add an id field of our own, so we can push our own IDs to SharePoint. */\n                        Field: {\n                            '_Type': 'Text',\n                            '_Name': 'Title',\n                            '_DisplayName': 'Title',\n                            '_Required': 'FALSE'\n                        }\n                    }]\n                }\n            },\n            listProperties: {\n                List: {\n                    _Hidden: this.hidden,\n                    _EnableAttachments: 'FALSE'\n                }\n            }\n        };\n\n        if (listData.indexOf(`StaticName=\"__id\"`)) {\n            params.newFields = {\n                Fields: {\n                    Method: [{\n                        '_ID': 0, /* We automatically add an id field of our own, so we can push our own IDs to SharePoint. */\n                        Field: {\n                            '_Type': 'Integer',\n                            '_DisplayName': '__id',\n                            '_FromBaseType': 'TRUE',\n                            '_Hidden': 'TRUE'\n                        }\n                    }]\n                }\n            };\n        }\n\n        for (let i = 1; i < modelDescription.length; i++) {\n            let internalName = modelDescription[i].name;\n            if (this._applicationId) internalName = this._applicationId + '_' + internalName;\n            if (listData.indexOf(`StaticName=\"${internalName}\"`) != -1) continue;\n\n            // handle Lookups differently\n            if (modelDescription[i].type == 'Lookup' || modelDescription[i].type == 'LookupMulti') {\n                listOfLookups.push([listName, internalName, modelDescription[i].type, modelDescription[i].source, modelDescription[i].showField]);\n            }\n            else {\n                // handle primitives\n\n                var modelData = {\n                    '_ID': i,\n                    Field: {\n                        '_Type': modelDescription[i].type,\n                        '_DisplayName': internalName,\n                        '_FromBaseType': 'TRUE'\n                    }\n                };\n                params.newFields.Fields.Method.push(modelData);\n            }\n        }\n\n        return new Promise(async function (resolve, reject) {\n\n            try {\n                // update list with settings and simple fields\n                let updateListRequest = this._getListUpdateRequest(params);\n                let updateResult = await PostRequest(updateListRequest);\n\n                // go add lookups\n                for (let lf = 0; lf < listOfLookups.length; lf++) {\n                    try {\n                        let lookupResult = await this._CreateLookup(...listOfLookups[lf]);\n                    }\n                    catch (ex) {\n                        console.error('Error creating lookup field');\n                    }\n                }\n                resolve(updateResult.response);\n            }\n            catch (ex) {\n                reject(ex);\n            }\n\n        }.bind(this));\n    }\n\n\n    async _CreateLookup(listName, fieldName, type, sourceName, showField) {\n\n        let listResult = await this._GetOrCreateList(sourceName);\n\n        let listId = this._ResolveListID(listResult);\n\n        // rough configuration object\n        let params = {\n            listName: listName,\n            newFields: {\n                Fields: {\n                    Method: [{\n                        '_ID': 1,\n                        Field: {\n                            '_Type': type,\n                            '_DisplayName': fieldName,\n                            '_FromBaseType': 'TRUE',\n                            '_List': listId,\n                            '_Mult': type === 'LookupMulti' ? 'TRUE' : 'FALSE',\n                            '_ShowField': showField || 'ID'\n                        }\n                    }]\n                }\n            }\n        };\n\n        let updateListRequest = this._getListUpdateRequest(params);\n        try {\n            let updateListResult = await PostRequest(updateListRequest);\n            return updateListResult;\n        }\n        catch (ex) {\n            return '';\n        }\n    }\n\n\n    _ResolveListID(response) {\n\n        let data = ParseStringToXml(response);\n        let idNode;\n\n\n        if (typeof(data.selectSingleNode) != 'undefined')\n            idNode = data.selectSingleNode('//List');\n        else\n            idNode = data.querySelector('List');\n\n        let idAttribute = '';\n        if (idNode) idAttribute = idNode.getAttribute('ID');\n\n        return idAttribute;\n    }\n\n\n    _applySoapTemplate(properties) {\n        return `<?xml version=\"1.0\" encoding=\"utf-8\"?>\n              <soap:Envelope\n               xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n                xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"\n                xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n              <soap:Body>\n              <${properties.method} xmlns=\"http://schemas.microsoft.com/sharepoint/soap/\">\n                ${properties.params}\n              </${properties.method}>\n              </soap:Body>\n              </soap:Envelope>`;\n        /*\n         return template(\n         '<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\n         '<soap:Envelope ' +\n         '  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' +\n         '  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ' +\n         '  xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">' +\n         '<soap:Body>' +\n         '<<%= method %> xmlns=\"http://schemas.microsoft.com/sharepoint/soap/\">' +\n         '<%= params %>' +\n         '</<%= method %>>' +\n         '</soap:Body>' +\n         '</soap:Envelope>')(properties);*/\n    }\n\n    get _GetListService() {\n        return '_vti_bin/Lists.asmx';\n    }\n\n    get _GetViewService() {\n        return '_vti_bin/Views.asmx';\n    }\n\n\n    _ParsePath(path, endPoint) {\n        var url = UrlParser(path);\n        if (!url) console.log('Invalid datasource path provided!');\n\n        var pathParts = url.path.split('/');\n        var newPath = url.protocol + '://' + url.host + '/';\n        for (var i = 0; i < pathParts.length; i++)\n            newPath += pathParts[i] + '/';\n        newPath += endPoint;\n        return newPath;\n    }\n\n    _serializeParams(params) {\n        if (!params || params.length == 0) return '';\n        var data = {root: params};\n        var creator = new XML2JS();\n        var payload = creator.json2xml_str(data);\n\n        return payload.replace('<root>', '').replace('</root>', '');\n    }\n}\n"
  },
  {
    "__docId__": 376,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DataModelGenerator",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "access": null,
    "export": true,
    "importPath": "./src/data/datasources/SharePoint/DataModelGenerator.js",
    "importStyle": "{DataModelGenerator}",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 377,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#constructor",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "originalPath",
        "types": [
          "*"
        ]
      },
      {
        "name": "schema",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 378,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_applicationId",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_applicationId",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 379,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "hidden",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#hidden",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 380,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_originalPath",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_originalPath",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 381,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_Schema",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_Schema",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 382,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_Seed",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_Seed",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 383,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "hidden",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#hidden",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 384,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "Deploy",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#Deploy",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 385,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "Seed",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#Seed",
    "access": null,
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 386,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_UpdateDefaultView",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_UpdateDefaultView",
    "access": null,
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "params": [
      {
        "name": "listName",
        "types": [
          "*"
        ]
      },
      {
        "name": "fields",
        "types": [
          "*"
        ]
      },
      {
        "name": "listCreated",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 387,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_ResolveViewID",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_ResolveViewID",
    "access": null,
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "params": [
      {
        "name": "response",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 388,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getUpdateViewRequest",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_getUpdateViewRequest",
    "access": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [
      {
        "name": "listName",
        "types": [
          "*"
        ]
      },
      {
        "name": "viewName",
        "types": [
          "*"
        ]
      },
      {
        "name": "fieldNames",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 389,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getDefaultViewRequest",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_getDefaultViewRequest",
    "access": null,
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "params": [
      {
        "name": "listName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 390,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getListExistRequest",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_getListExistRequest",
    "access": null,
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "params": [
      {
        "name": "listName",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 391,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getListCreationRequest",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_getListCreationRequest",
    "access": null,
    "description": null,
    "lineNumber": 195,
    "undocument": true,
    "params": [
      {
        "name": "listName",
        "types": [
          "*"
        ]
      },
      {
        "name": "listDescription",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 392,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getListUpdateRequest",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_getListUpdateRequest",
    "access": null,
    "description": null,
    "lineNumber": 216,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 393,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_GetOrCreateList",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_GetOrCreateList",
    "access": null,
    "description": "",
    "lineNumber": 238,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise}"
      },
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "listName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 394,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_GetOrCreateModel",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_GetOrCreateModel",
    "access": null,
    "description": null,
    "lineNumber": 255,
    "undocument": true,
    "params": [
      {
        "name": "listName",
        "types": [
          "*"
        ]
      },
      {
        "name": "modelDescription",
        "types": [
          "*"
        ]
      },
      {
        "name": "listData",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 395,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_CreateLookup",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_CreateLookup",
    "access": null,
    "description": null,
    "lineNumber": 349,
    "undocument": true,
    "params": [
      {
        "name": "listName",
        "types": [
          "*"
        ]
      },
      {
        "name": "fieldName",
        "types": [
          "*"
        ]
      },
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "sourceName",
        "types": [
          "*"
        ]
      },
      {
        "name": "showField",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 396,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_ResolveListID",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_ResolveListID",
    "access": null,
    "description": null,
    "lineNumber": 386,
    "undocument": true,
    "params": [
      {
        "name": "response",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 397,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_applySoapTemplate",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_applySoapTemplate",
    "access": null,
    "description": null,
    "lineNumber": 404,
    "undocument": true,
    "params": [
      {
        "name": "properties",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 398,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "_GetListService",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_GetListService",
    "access": null,
    "description": null,
    "lineNumber": 431,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 399,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "_GetViewService",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_GetViewService",
    "access": null,
    "description": null,
    "lineNumber": 435,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 400,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_ParsePath",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_ParsePath",
    "access": null,
    "description": null,
    "lineNumber": 440,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "endPoint",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 401,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_serializeParams",
    "memberof": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator",
    "longname": "src/data/datasources/SharePoint/DataModelGenerator.js~DataModelGenerator#_serializeParams",
    "access": null,
    "description": null,
    "lineNumber": 452,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 402,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/datasources/SharePoint/SPSoapAdapter/Settings.js",
    "memberof": null,
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Settings.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by tom on 20/11/15.\n */\n\nexport class Settings {\n    static get localKeyPrefix() {\n        return '_local_';\n    }\n}"
  },
  {
    "__docId__": 403,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Settings",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Settings.js",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Settings.js~Settings",
    "access": null,
    "export": true,
    "importPath": "./src/data/datasources/SharePoint/SPSoapAdapter/Settings.js",
    "importStyle": "{Settings}",
    "description": "Created by tom on 20/11/15.",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 404,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "localKeyPrefix",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Settings.js~Settings",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Settings.js~Settings.localKeyPrefix",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 405,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js",
    "memberof": null,
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by mysim1 on 13/06/15.\n */\n\nimport extend           from 'lodash/extend.js';\nimport EventEmitter     from 'eventemitter3';\nimport {Settings}       from './Settings.js';\nimport {UrlParser}      from '../../../../utils/request/UrlParser.js';\nimport {ObjectHelper}   from '../../../../utils/ObjectHelper.js';\nimport {BlobHelper}     from '../../../../utils/BlobHelper.js';\n\nlet DEBUG_WORKER = true;\nlet SPWorker = new Worker('worker.js');\nlet workerEvents = new EventEmitter();\nSPWorker.onmessage = (messageEvent) => {\n    workerEvents.emit('message', messageEvent);\n};\n\n/**\n * The SharePoint class will utilize a Web Worker to perform data operations. Running the data interfacing in a\n * seperate thread from the UI thread will ensure there is minimal interruption of the user interaction.\n */\n\nexport class SharePoint extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n\n        ObjectHelper.bindAllMethods(this, this);\n\n        let endpoint = UrlParser(options.endPoint);\n        if (!endpoint) throw Error('Invalid configuration.');\n\n        this.subscriberID = SharePoint.hashCode(endpoint.path + JSON.stringify(options.query) + options.orderBy + options.limit);\n        this.options = options;\n        this.cache = null;\n\n        workerEvents.on('message', this._onMessage.bind(this));\n    }\n\n    getAuth(callback, context = this) {\n        super.once('auth_result', (authData) => this._handleAuthResult(authData, callback, context));\n\n        /* Grab any existing cached data for this path. There will be data if there are other\n         * subscribers on the same path already. */\n        SPWorker.postMessage(extend({}, this.options, {\n            subscriberID: this.subscriberID,\n            endPoint: this.options.endPoint,\n            operation: 'get_auth'\n        }));\n    }\n\n    once(event, handler, context = this) {\n        this.on(event, function () {\n            handler.call(context, ...arguments);\n            this.off(event, handler, context);\n        }.bind(this), context);\n    }\n\n    on(event, handler, context = this) {\n        /* Hold off on initialising the actual SharePoint connection until someone actually subscribes to data changes. */\n        if (!this._initialised) {\n            this._initialise();\n            this._initialised = true;\n        }\n\n        /* Fix to make Arva-ds PrioArray.add() work, by immediately returning the model data with an ID when the model is created. */\n        if (!this._ready && this.cache && event === 'value') {\n            handler.call(context, this.cache);\n        }\n\n        if (this._ready && event === 'value') {\n            this.once('cache_data', (cacheData) => this._handleCacheData(cacheData, event, handler, context));\n\n            /* Grab any existing cached data for this path. There will be data if there are other\n             * subscribers on the same path already. */\n            SPWorker.postMessage(extend({}, this.options, {\n                subscriberID: this.subscriberID,\n                operation: 'get_cache'\n            }));\n        }\n\n        /* Tell the SharePoint worker that we want to be subscribed to changes from now on (can be called multiple times) */\n        SPWorker.postMessage(extend({}, this.options, {\n            subscriberID: this.subscriberID,\n            operation: 'subscribe'\n        }));\n\n        super.on(event, handler, context);\n    }\n\n    off(event, handler) {\n        let amountRemoved;\n        if (event && handler) {\n            this.removeListener(event, handler);\n            amountRemoved = 1;\n        } else {\n            this.removeAllListeners(event);\n            amountRemoved = this.listeners(event).length;\n        }\n\n        for (let i = 0; i < amountRemoved; i++) {\n            /* Tell the Manager that this subscription is cancelled and no longer requires refreshed data from SharePoint. */\n            SPWorker.postMessage(extend({}, this.options, {\n                subscriberID: this.subscriberID,\n                operation: 'dispose'\n            }));\n        }\n    }\n\n    set(model) {\n        /* Hold off on initialising the actual SharePoint connection until someone actually subscribes to data changes. */\n        if (!this._initialised) {\n            this._initialise();\n            this._initialised = true;\n        }\n\n        /* If there is no ID, make a temporary ID for reference in the main thread for the session scope. */\n        let modelId = model.id;\n        if (!modelId || modelId === 0) {\n            model['_temporary-identifier'] = `${Settings.localKeyPrefix}${Math.floor((Math.random() * 2000000000))}`;\n        }\n\n        SPWorker.postMessage({\n            subscriberID: this.subscriberID,\n            endPoint: this.options.endPoint,\n            listName: this.options.listName,\n            operation: 'set',\n            model: model\n        });\n\n        if (model['_temporary-identifier']) {\n            /* Set the model's ID to the temporary one so it can be used to query the dataSource with. */\n            if (model.disableChangeListener) {\n                model.disableChangeListener();\n            }\n            model.id = model['_temporary-identifier'];\n            if (model.enableChangeListener) {\n                model.enableChangeListener();\n            }\n        }\n\n        /* Cache is used to immediately trigger the value callback if a new model was created and subscribes to its own changes. */\n        this.cache = model;\n        return model;\n    }\n\n    remove(model) {\n        SPWorker.postMessage({\n            subscriberID: this.subscriberID,\n            endPoint: this.options.endPoint,\n            listName: this.options.listName,\n            operation: 'remove',\n            model: model\n        });\n    }\n\n    _initialise() {\n\n        super.once('value', () => {\n            this._ready = true;\n        });\n\n        /* Initialise the worker */\n        SPWorker.postMessage(extend({}, this.options, {\n            subscriberID: this.subscriberID,\n            operation: 'init'\n        }));\n    }\n\n    _onMessage(messageEvent) {\n        let message = messageEvent.data;\n        /* Ignore messages not meant for this SharePoint instance. */\n        if (message.subscriberID !== this.subscriberID) {\n            return;\n        }\n\n        if (message.event === 'cache_data') {\n            this.emit('cache_data', message.cache);\n        } else if (message.event === 'auth_result') {\n            this.emit('auth_result', message.auth);\n        } else if (message.event !== 'INVALIDSTATE') {\n            this.emit(message.event, message.result, message.previousSiblingId);\n        } else {\n            console.log(\"Worker Error:\", message.result);\n        }\n    }\n\n    _handleCacheData(cacheData, event, handler, context) {\n        if (!cacheData) {\n            cacheData = [];\n        }\n\n        if (event === 'child_added') {\n            for (let index = 0; index < cacheData.length; index++) {\n                let child = cacheData[index];\n                let previousChildID = index > 0 ? cacheData[index - 1] : null;\n                handler.call(context, child, previousChildID);\n            }\n        } else if (event === 'value') {\n            handler.call(context, cacheData.length ? cacheData : null);\n        }\n    }\n\n    _handleAuthResult(authData, handler, context = this) {\n        if (!authData) {\n            authData = {};\n        }\n\n        handler.call(context, authData);\n\n    }\n\n    static hashCode(s) {\n        return s.split(\"\").reduce(function (a, b) {\n            a = ((a << 5) - a) + b.charCodeAt(0);\n            return a & a\n        }, 0);\n    }\n}\n"
  },
  {
    "__docId__": 406,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "DEBUG_WORKER",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~DEBUG_WORKER",
    "access": null,
    "export": false,
    "importPath": "./src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 407,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "SPWorker",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SPWorker",
    "access": null,
    "export": false,
    "importPath": "./src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "Worker"
      ]
    }
  },
  {
    "__docId__": 408,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "workerEvents",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~workerEvents",
    "access": null,
    "export": false,
    "importPath": "./src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "eventemitter3~EventEmitter"
      ]
    }
  },
  {
    "__docId__": 409,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SharePoint",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "access": null,
    "export": true,
    "importPath": "./src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js",
    "importStyle": "{SharePoint}",
    "description": "The SharePoint class will utilize a Web Worker to perform data operations. Running the data interfacing in a\nseperate thread from the UI thread will ensure there is minimal interruption of the user interaction.",
    "lineNumber": 24,
    "interface": false,
    "extends": [
      "eventemitter3~EventEmitter"
    ]
  },
  {
    "__docId__": 410,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#constructor",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 411,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "subscriberID",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#subscriberID",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 412,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#options",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 413,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "cache",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#cache",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 414,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAuth",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#getAuth",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 415,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "once",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#once",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "handler",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 416,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "on",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#on",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "handler",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 417,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_initialised",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#_initialised",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 418,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "off",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#off",
    "access": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "handler",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 419,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#set",
    "access": null,
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 420,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_initialised",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#_initialised",
    "access": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 421,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "cache",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#cache",
    "access": null,
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 422,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#remove",
    "access": null,
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 423,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_initialise",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#_initialise",
    "access": null,
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 424,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_ready",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#_ready",
    "access": null,
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 425,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onMessage",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#_onMessage",
    "access": null,
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "params": [
      {
        "name": "messageEvent",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 426,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_handleCacheData",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#_handleCacheData",
    "access": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "params": [
      {
        "name": "cacheData",
        "types": [
          "*"
        ]
      },
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "handler",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 427,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_handleAuthResult",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint#_handleAuthResult",
    "access": null,
    "description": null,
    "lineNumber": 205,
    "undocument": true,
    "params": [
      {
        "name": "authData",
        "types": [
          "*"
        ]
      },
      {
        "name": "handler",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 428,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "hashCode",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/SharePoint.js~SharePoint.hashCode",
    "access": null,
    "description": null,
    "lineNumber": 214,
    "undocument": true,
    "params": [
      {
        "name": "s",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 429,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/Manager.js",
    "memberof": null,
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/Manager.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by tom on 28/08/15.\n */\nimport '../../../../../utils/hotfixes/polyfills/FunctionName.js';\nimport '../../../../../utils/hotfixes/polyfills/ObjectKeys.js';\nimport '../../../../../utils/hotfixes/polyfills/StartsWith.js';\nimport {SharePointClient}               from './SharePointClient.js';\n\nlet clients = {};\n\nlet onmessage = async function (messageEvent) {\n    let message = messageEvent.data;\n    let {subscriberID, operation} = message;\n    let client = clients[subscriberID];\n    let clientExisted = !!client;\n\n    /* If the requested client doesn't exist yet, create a new instance. */\n    if (!clientExisted) {\n        /* This automatically subscribes to changes, so for a set/remove operation that\n         * isn't interested in listening to changes we'll need to unsubscribe again after the operation. */\n        client = clients[subscriberID] = new SharePointClient(message);\n        client.referenceCount = 0;\n    }\n\n    switch (operation) {\n        case 'init':\n            if (!client.initialised) {\n                client.init();\n                client.initialised = true;\n                client.on('message', (message) => {\n                    message.subscriberID = subscriberID;\n                    postMessage(message);\n                });\n            }\n            break;\n        case 'subscribe':\n            client.subscribeToChanges();\n            client.referenceCount++;\n            break;\n        case 'dispose':\n            client.referenceCount--;\n            if (client.referenceCount <= 0) {\n                client.dispose();\n            }\n            break;\n        case 'set':\n            client.set(message.model);\n            /* If the client was created for this set operation,\n             * cancel all subscriptions that were automatically created on instantiation. */\n            if (!clientExisted) {\n                client.dispose();\n            }\n            break;\n        case 'remove':\n            client.remove(message.model);\n            /* If the client was created for this remove operation,\n             * cancel all subscriptions that were automatically created on instantiation. */\n            if (!clientExisted) {\n                client.dispose();\n            }\n            break;\n        case 'get_cache':\n            let cacheData = client.cache;\n            postMessage({\n                subscriberID: subscriberID,\n                event: 'cache_data',\n                cache: cacheData\n            });\n            break;\n        case 'get_auth':\n            try {\n                let authData = await client.getAuth();\n                postMessage({\n                    subscriberID: subscriberID,\n                    event: 'auth_result',\n                    auth: authData\n                });\n            } catch (error) {\n                console.log('Error whilst fetching user auth data: ', error);\n            }\n            break;\n    }\n};\n"
  },
  {
    "__docId__": 430,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "clients",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/Manager.js",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/Manager.js~clients",
    "access": null,
    "export": false,
    "importPath": "./src/data/datasources/SharePoint/SPSoapAdapter/Worker/Manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 431,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "onmessage",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/Manager.js",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/Manager.js~onmessage",
    "access": null,
    "export": false,
    "importPath": "./src/data/datasources/SharePoint/SPSoapAdapter/Worker/Manager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "messageEvent",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 432,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js",
    "memberof": null,
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by mysim1 on 13/06/15.\n */\nimport pick             from 'lodash/pick.js';\nimport pluck            from 'lodash/pluck.js';\nimport extend           from 'lodash/extend.js';\nimport findIndex        from 'lodash/findIndex.js';\nimport EventEmitter     from 'eventemitter3';\nimport {SoapClient}     from './SoapClient.js';\nimport {Settings}       from '../Settings.js';\nimport {ExistsRequest}  from '../../../../../utils/request/RequestClient.js';\nimport {UrlParser}      from '../../../../../utils/request/UrlParser.js';\n\n// setup the soapClient.\nvar soapClient = new SoapClient();\nvar window = this;\nvar global = this;\nvar tempKeys = [];\n\nexport class SharePointClient extends EventEmitter {\n\n    get refreshTimer() {\n        return this._refreshTimer;\n    }\n\n    set refreshTimer(value) {\n        this._refreshTimer = value;\n    }\n\n    constructor(options) {\n        super();\n\n        this.settings = options;\n        this.interval = 3000;\n        this.retriever = null;\n        this.cache = [];\n        this.hasNoServerResponse = true;\n        this._active = false;\n    }\n\n    init() {\n        try {\n            let {settings, isChild} = this._initializeSettings(this.settings);\n            this.settings = settings;\n            this.isChild = isChild;\n\n            this._handleInit(this.settings);\n        } catch (exception) {\n            this.dispose();\n        }\n    }\n\n    set(options) {\n        return this._handleSet(options);\n    }\n\n    remove(options) {\n        return this._handleRemove(options);\n    }\n\n    dispose() {\n        clearTimeout(this.refreshTimer);\n        this.refreshTimer = null;\n        this._active = false;\n    }\n\n    getAuth() {\n        return new Promise((resolve, reject) => {\n            /* initialize with SharePoint configuration */\n            let configuration = this._getUserGroupDefaultConfiguration();\n\n            /* Append the listName to the URL for easy debugging */\n            configuration.url = `${this.settings.endPoint}/${this._getUserGroupService()}?view=getUserGroup`;\n\n            soapClient.call(configuration).then((result) => {\n                let data = result.data[\"soap:Envelope\"][\"soap:Body\"][0].GetCurrentUserInfoResponse[0].GetCurrentUserInfoResult[0].GetUserInfo[0].User[0].$;\n                let user = {\n                    uid: data.ID,\n                    name: data.Name,\n                    email: data.Email\n                };\n                resolve(user);\n            }).catch((error) => reject(error));\n        });\n    }\n\n    subscribeToChanges() {\n        if (!this.isChild) {\n            /* Don't monitor child item updates/removes. We only do that on parent arrays. */\n            if (!this._active) {\n                this._active = true;\n                this._refresh();\n            }\n        }\n    }\n\n    _initializeSettings(args) {\n\n        // rebuild endpoint from polling server and interpreting response\n        let url = UrlParser(args.endPoint);\n        if (!url) throw new Error('Invalid DataSource path provided!');\n\n        let newPath = url.protocol + '://' + url.host + '/';\n        let pathParts = url.path.split('/');\n        let identifiedParts = [];\n\n        let isChild = this._isChildItem(url.path);\n\n        if (!isChild) {\n            /* We can always remove the last part of the path, since it will be a list name (which we don't need in the sharepoint URL). */\n            identifiedParts.unshift(pathParts.splice(pathParts.length - 1, 1)[0]);\n\n            try {\n                while (!ExistsRequest(newPath + pathParts.join('/') + '/' + this._getListService())) {\n                    identifiedParts.unshift(pathParts.splice(pathParts.length - 1, 1)[0]);\n                }\n            } catch (error) {\n                console.log('SharePoint URL detection error:', error);\n            }\n        } else {\n            /* We're initializing a child element that has an array-based parent.\n             * This means we can't automatically find the correct SharePoint path, and we'll have to assume the listName and itemId. */\n            identifiedParts[0] = pathParts[pathParts.length - 2];\n            identifiedParts[1] = pathParts[pathParts.length - 1];\n            pathParts.splice(pathParts.length - 2, 2);\n            /* Remove the child ID from the endpoint so we can modify its value through the parent endpoint. */\n        }\n\n        if (identifiedParts.length < 1) {\n            throw {\n                endPoint: pathParts.join('/') + '/' + identifiedParts[0],\n                message: 'Parameters could not be correctly extracted for polling. Assuming invalid state.'\n            }\n        }\n        else {\n            let resultconfig = {\n                endPoint: newPath + pathParts.join('/'),\n                listName: identifiedParts[0],\n                itemId: identifiedParts[1]\n            };\n\n\n            extend(resultconfig, pick(args, ['query', 'limit', 'orderBy', 'pageSize']));\n\n            return {settings: resultconfig, isChild: isChild};\n        }\n    }\n\n    /**\n     * Start reading the list from SharePoint and only retrieve changes from last polling timestamp.\n     * @param args\n     * @private\n     */\n    _handleInit(args) {\n\n        if (!args.listName) return;\n\n        // initialize with SharePoint configuration\n        this.retriever = this._getListItemsDefaultConfiguration();\n\n        /* Append the listName to the URL for easy debugging */\n        this.retriever.url = this._parsePath(args.endPoint, this._getListService()) + `?view=${args.listName}`;\n        this.retriever.params = {\n            'listName': args.listName,\n            'viewFields': {\n                'ViewFields': ''\n            },\n            //'since': new Date(0).toISOString(),\n            'queryOptions': {\n                'QueryOptions': {\n                    'IncludeMandatoryColumns': 'FALSE',\n                    'ViewAttributes': {\n                        '_Scope': 'RecursiveAll'\n                    }\n                }\n            }\n        };\n\n        if (args.query) {\n            this.retriever.params.query = args.query;\n        }\n\n        if (args.orderBy) {\n            if (this.retriever.params.query) {\n                this.retriever.params.query.OrderBy = {\n                    \"FieldRef\": {\n                        \"_Ascending\": \"TRUE\",\n                        \"_Name\": args.orderBy\n                    }\n                };\n            }\n            else {\n                this.retriever.params.query = {\n                    Query: {\n                        OrderBy: {\n                            \"FieldRef\": {\n                                \"_Ascending\": \"TRUE\",\n                                \"_Name\": args.orderBy\n                            }\n                        }\n                    }\n                };\n            }\n        }\n\n\n        let rowLimit;\n        this.explicitRowLimit = args.limit !== undefined;\n        if (this.explicitRowLimit) {\n            rowLimit = this.explicitRowLimit = args.limit;\n        }\n        if (args.pageSize) {\n            rowLimit = args.pageSize;\n            this.pageSize = args.pageSize;\n        }\n        if (rowLimit) {\n            this.retriever.params.rowLimit = rowLimit;\n        }\n    }\n\n    _isLimitExceeded() {\n        return this.explicitRowLimit !== false && this.cache.length >= this.explicitRowLimit;\n    }\n\n\n    /**\n     *\n     * Refresh SharePoint with latest changes.\n     * @param {Boolean} calledManually If set to false, ignores any existing timer in this.refreshTimer and executes the refresh regardless.\n     * @private\n     */\n    _refresh() {\n        if (this.retriever) {\n            if (this._isLimitExceeded()) {\n                this.retriever.params.rowLimit = this.explicitRowLimit;\n            }\n            soapClient.call(this.retriever, tempKeys)\n                .then((result) => {\n\n\n                    let listItem = result.data[\"soap:Envelope\"][\"soap:Body\"][0].GetListItemChangesSinceTokenResponse[0].GetListItemChangesSinceTokenResult[0].listitems[0];\n                    let hasDeletions = false;\n                    if (listItem.Changes) {\n                        let changes = listItem.Changes[0];\n                        hasDeletions = this._handleDeleted(changes);\n                    }\n\n                    let data = this._getResults(result.data);\n                    let messages = this._updateCache(data);\n\n                    this._handleNextToken(listItem);\n\n                    /* If any data is new or modified, emit a 'value' event. */\n                    if (hasDeletions || data.length > 0) {\n                        this.emit('message', {event: 'value', result: this.cache});\n\n                    } else if (this.hasNoServerResponse) {\n                        /* If there is no data, and this is the first time we get a response from the server,\n                         * emit a value event that shows subscribers that there is no data at this path. */\n                        this.emit('message', {event: 'value', result: null});\n                    }\n\n                    if (!this.hasNoServerResponse) {\n                        /* Emit any added/changed events. */\n                        for (let message of messages) {\n                            this.emit('message', message);\n                        }\n                    }\n                    this.hasNoServerResponse = false;\n                    if (this._active) {\n                        this.refreshTimer = setTimeout(this._refresh.bind(this), this.interval);\n                    }\n\n                }).catch((err) => {\n                this.emit('error', err);\n                if (this._active) {\n\n                    this.refreshTimer = setTimeout(this._refresh.bind(this), this.interval);\n                }\n\n            });\n        }\n    }\n\n\n    /**\n     * Add or Update a data record.\n     * @private\n     */\n    _handleSet(newData) {\n        var configuration = this._updateListItemsDefaultConfiguration();\n        /* Append the listName to the URL for easy debugging */\n        configuration.url = this._parsePath(this.settings.endPoint, this._getListService()) + `?update=${this.settings.listName}`;\n        var fieldCollection = [];\n        var method = '';\n\n        let isLocal = findIndex(tempKeys, function (key) {\n            return key.localId == newData.id;\n        });\n\n        if (isLocal > -1) {\n            newData.id = tempKeys[isLocal].remoteId;\n        }\n\n        if (!newData.id && this.childID) {\n            newData.id = this.childID;\n        }\n\n        // assume existing record to be updated.\n        if (newData.id) {\n\n            fieldCollection.push({\n                \"_Name\": \"ID\",\n                \"__text\": newData.id\n            });\n\n            method = \"Update\";\n        }\n        // create a new record, because there is no id.\n        else {\n            fieldCollection.push({\n                \"_Name\": \"ID\",\n                \"__text\": 'New'\n            });\n            method = 'New';\n        }\n\n        for (var prop in newData) {\n            let fieldValue = newData[prop];\n            if (prop == \"id\" || typeof(fieldValue) == \"undefined\") continue;\n            if (prop == \"priority\" || prop == \"_temporary-identifier\" || prop == \"remoteId\") continue;\n            if (typeof fieldValue === 'object') {\n                if (fieldValue.id && fieldValue.value) {\n                    /* This is a SharePoint lookup type field. We must write it as a specially formatted value instead of an id/value object. */\n                    fieldValue = `${fieldValue.id};#`;\n                } else if (fieldValue.length !== undefined && fieldValue[0] && fieldValue[0].id && fieldValue[0].value) {\n                    /* This is a SharePoint LookupMulti field. It is specially formatted like above. */\n                    let IDs = pluck(fieldValue, 'id');\n                    fieldValue = IDs.join(';#;#');\n                } else {\n                    continue;\n                }\n            }\n\n\n            fieldCollection.push({\n                \"_Name\": prop,\n                \"__text\": fieldValue\n            });\n        }\n\n        configuration.params = {\n            \"listName\": this.settings.listName,\n            \"updates\": {\n                \"Batch\": {\n                    \"Method\": {\n                        \"Field\": fieldCollection,\n\n                        \"_ID\": \"1\",\n                        \"_Cmd\": method\n                    },\n\n                    \"_OnError\": \"Continue\",\n                    \"_ListVersion\": \"1\",\n                    \"_ViewName\": \"\"\n                }\n            }\n        };\n\n        // initial initialisation of the datasource\n        (function (newData) {\n            soapClient.call(configuration, tempKeys)\n                .then((result)=> {\n\n                    let data = this._getResults(result.data);\n                    if (data.length == 1) {\n                        let remoteId = data[0].id;\n\n                        // push ID mapping for given session to collection of temp keys\n                        if (newData['_temporary-identifier']) {\n                            tempKeys.push({\n                                localId: newData['_temporary-identifier'],\n                                remoteId: remoteId,\n                                client: this\n                            });\n                        }\n                        let messages = this._updateCache(data);\n                        for (let message of messages) {\n                            this.emit('message', message);\n                        }\n\n                        /* Fire a value/child_changed event with the now available remoteId present */\n                        let model = newData;\n                        model.id = model['_temporary-identifier'] || model.id;\n                        model.remoteId = remoteId;\n                        if (this.isChild) {\n                            /* TODO: re-enable value emit on children when child subscriptions are implemented */\n                            //this.emit('message', {event: 'value', result: model});\n                        } else {\n                            this.emit('message', {event: 'child_changed', result: model});\n                            this.emit('message', {event: 'value', result: this.cache});\n                        }\n                    }\n                }, (error) => {\n                    console.log(error);\n                });\n        }.bind(this))(newData);\n    }\n\n    /**\n     * Remove a record from SharePoint\n     * @param record\n     * @private\n     */\n    _handleRemove(record) {\n        var configuration = this._updateListItemsDefaultConfiguration();\n        /* Append the listName to the URL for easy debugging */\n        configuration.url = this._parsePath(this.settings.endPoint, this._getListService()) + `?remove=${this.settings.listName}`;\n        var fieldCollection = [];\n\n        record.remoteId = record.id;\n\n        let isLocal = findIndex(tempKeys, function (key) {\n            return key.localId == record.id;\n        });\n\n        if (isLocal > -1) {\n            record.id = tempKeys[isLocal].remoteId;\n        }\n\n        fieldCollection.push({\n            \"_Name\": \"ID\",\n            \"__text\": record.id\n        });\n\n        configuration.params = {\n            \"listName\": this.settings.listName,\n            \"updates\": {\n                \"Batch\": {\n                    \"Method\": {\n                        \"Field\": fieldCollection,\n\n                        \"_ID\": '1',\n                        \"_Cmd\": 'Delete'\n                    },\n\n                    \"_OnError\": 'Continue',\n                    \"_ListVersion\": '1',\n                    \"_ViewName\": ''\n                }\n            }\n        };\n\n        // initial initialisation of the datasource\n        soapClient.call(configuration, tempKeys)\n            .then(()=> {\n                this.emit('message', {event: 'child_removed', result: record});\n            }, (error) => {\n                console.log(error);\n            });\n    }\n\n\n    /**\n     * Update our cache and bubble child_added or child_changed events\n     * @param data\n     * @private\n     */\n    _updateCache(data) {\n        let messages = [];\n        for (let record in data) {\n            let shouldUseRemoteId = false;\n            let model = data[record];\n            model.remoteId = model.id;\n\n            let localIndex = findIndex(tempKeys, function (key) {\n                return key.remoteId == model.id;\n            });\n\n            if (localIndex > -1) {\n                let tempKey = tempKeys[localIndex];\n\n                /* If this SPClient instance created the temp ID, we need to use it in our events.\n                 * Otherwise, we should use the remote ID that SharePoint generated. */\n                shouldUseRemoteId = tempKey.client !== this;\n                model.id = shouldUseRemoteId ? model.remoteId : tempKey.localId;\n            }\n\n            let cacheIndex = findIndex(this.cache, function (item) {\n                return model.id == item.id;\n            });\n\n            if (cacheIndex === -1) {\n                this.cache.push(model);\n\n                let previousSiblingId = this.cache.length == 0 ? null : this.cache[this.cache.length - 1];\n                messages.push({\n                    event: 'child_added',\n                    result: model,\n                    previousSiblingId: previousSiblingId ? previousSiblingId.id : null\n                });\n            }\n            else {\n                if (!_.isEqual(model, this.cache[cacheIndex])) {\n                    this.cache[cacheIndex] = model;\n\n                    let previousSibling = cacheIndex == 0 ? null : this.cache[cacheIndex - 1];\n                    messages.push({\n                        event: 'child_changed',\n                        result: model,\n                        previousSiblingId: previousSibling ? previousSibling.id : null\n                    });\n                }\n            }\n        }\n        return messages;\n    }\n\n\n    /**\n     * Update the last polling timestamp so we only get the latest changes.\n     * @param newDate\n     * @private\n     */\n    _activateChangeToken(lastChangeToken) {\n        this.retriever.params.changeToken = lastChangeToken;\n    }\n\n    _setNextPage(nextPaginationToken) {\n        this.retriever.params.queryOptions.QueryOptions.Paging = {_ListItemCollectionPositionNext: nextPaginationToken};\n    }\n\n    _clearNextPage() {\n        delete this.retriever.params.queryOptions.QueryOptions.Paging;\n    }\n\n    _deactivateChangeToken() {\n        delete this.retriever.params.changeToken;\n    }\n\n\n    _handleNextToken(listItem) {\n        let lastQueryHadPagination = this.retriever.params.queryOptions.QueryOptions.Paging;\n\n        if (!lastQueryHadPagination && listItem.Changes) {\n            this.lastChangeToken = listItem.Changes[0].$.LastChangeToken;\n        }\n\n        if (this._isLimitExceeded()) {\n            this._clearNextPage();\n            this._activateChangeToken(this.lastChangeToken);\n        } else {\n            let {ListItemCollectionPositionNext: nextPaginationToken} = listItem[\"rs:data\"][0].$;\n\n            if (nextPaginationToken !== undefined) {\n                this._setNextPage(nextPaginationToken);\n                this._deactivateChangeToken();\n            } else {\n                this._clearNextPage();\n                this._activateChangeToken(this.lastChangeToken);\n            }\n        }\n    }\n\n\n    _handleDeleted(result) {\n\n        let changes = result.Id || null;\n\n        if (changes && changes.length > 0) {\n\n            for (let change in changes) {\n\n                if (changes[change].$.ChangeType == \"Delete\") {\n\n                    let recordId = changes[change]._;\n\n                    let localIndex = findIndex(tempKeys, function (key) {\n                        return key.remoteId == recordId;\n                    });\n\n                    if (localIndex > -1) {\n                        let tempKey = tempKeys[localIndex];\n                        let isOurTempKey = tempKey.client === this;\n                        recordId = isOurTempKey ? tempKey.localId : tempKey.remoteId;\n                    }\n\n                    let cacheItem = findIndex(this.cache, function (item) {\n                        return item.id == recordId;\n                    });\n\n                    this.emit('message', {\n                        event: 'child_removed',\n                        result: this.cache[cacheItem]\n                    });\n                    this.cache.splice(cacheItem, 1);\n                }\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Parse SharePoint response into formatted records\n     * @param result\n     * @returns {Array}\n     * @private\n     */\n    _getResults(result) {\n\n        let arrayOfObjects = [];\n        let node = null;\n\n\n        if (result[\"soap:Envelope\"][\"soap:Body\"][0].GetListItemChangesSinceTokenResponse) {\n\n            node = result[\"soap:Envelope\"][\"soap:Body\"][0].GetListItemChangesSinceTokenResponse[0].GetListItemChangesSinceTokenResult[0].listitems[0][\"rs:data\"][0];\n\n            if (node) {\n                if (node.$.ItemCount !== '0') {\n                    for (let row in node['z:row']) {\n                        let raw = node['z:row'][row].$;\n                        let record = this._formatRecord(raw);\n                        arrayOfObjects.push(record);\n                    }\n                }\n            }\n        }\n        else if (result[\"soap:Envelope\"][\"soap:Body\"][0].UpdateListItemsResponse) {\n\n            // check for error\n            let error = result[\"soap:Envelope\"][\"soap:Body\"][0].UpdateListItemsResponse[0].UpdateListItemsResult[0].Results[0].Result[0].ErrorCode;\n            if (error == '0x00000000') {\n                node = result[\"soap:Envelope\"][\"soap:Body\"][0].UpdateListItemsResponse[0].UpdateListItemsResult[0].Results[0];\n                if (node) {\n                    for (let row in node.Result) {\n                        let raw = node.Result[row][\"z:row\"][0].$;\n                        let record = this._formatRecord(raw);\n                        arrayOfObjects.push(record);\n                    }\n                }\n            }\n        }\n\n        return arrayOfObjects;\n    }\n\n    /**\n     * Strip SharePoint record from SharePoint specifics\n     * @param record\n     * @returns {{}}\n     * @private\n     */\n    _formatRecord(record) {\n        let result = {};\n        for (let attribute in record) {\n\n            let name = attribute.replace('ows_', '');\n            if (name == 'xmlns:z') {\n                continue;\n            }\n\n            let value = record[attribute];\n            if (value === '') {\n                continue;\n            }\n\n            if (name == \"ID\") {\n                name = \"id\";\n                result[name] = value;\n            } else if (value.indexOf(\";#\") > -1) {\n                var keys = value.split(\";#\");\n                var pairs = keys.length / 2;\n                var assignable = pairs > 1 ? [] : {};\n                for (var pair = 0; pair < keys.length; pair += 2) {\n                    if (pairs > 1) assignable.push({id: keys[pair], value: keys[pair + 1]});\n                    else assignable = {id: keys[pair], value: keys[pair + 1]};\n                }\n                result[name] = assignable;\n            } else if (!isNaN(value)) {\n                /* Map a number when that number is detected */\n                result[name] = parseFloat(value);\n            } else {\n                /* By default map the attribute 1:1 */\n                result[name] = value;\n            }\n        }\n\n        return result;\n    }\n\n\n    /**\n     * Double check if given path is a valid path\n     * @param path\n     * @param endPoint\n     * @returns {string}\n     * @private\n     */\n    _parsePath(path = '', endPoint = '') {\n\n        var url = UrlParser(path);\n        if (!url) console.log('Invalid datasource path provided!');\n\n        var pathParts = url.path.split('/');\n        var newPath = url.protocol + '://' + url.host + '/';\n        for (var i = 0; i < pathParts.length; i++)\n            newPath += pathParts[i] + '/';\n        newPath += endPoint;\n        return newPath;\n    }\n\n\n    /**\n     * Get Default resource for Updating Lists\n     * @returns {{url: string, service: string, method: string, params: string, headers: (Map|*)}}\n     * @private\n     */\n    _updateListItemsDefaultConfiguration() {\n        return {\n            url: '',\n            service: 'Lists',\n            method: 'UpdateListItems',\n            params: '',\n            headers: new Map([\n                ['SOAPAction', 'http://schemas.microsoft.com/sharepoint/soap/UpdateListItems'],\n                ['Content-Type', 'text/xml']\n            ])\n        };\n    }\n\n\n    /**\n     * Get Default resource for Reading Lists\n     * @returns {{url: string, service: string, method: string, params: string, headers: (Map|*)}}\n     * @private\n     */\n    _getListItemsDefaultConfiguration() {\n        return {\n            url: '',\n            service: 'Lists',\n            method: 'GetListItemChangesSinceToken',\n            params: '',\n            headers: new Map([\n                ['SOAPAction', 'http://schemas.microsoft.com/sharepoint/soap/GetListItemChangesSinceToken'],\n                ['Content-Type', 'text/xml']\n            ])\n        };\n    }\n\n\n    /**\n     * Get Default resource for Reading Lists\n     * @returns {{url: string, service: string, method: string, params: string, headers: (Map|*)}}\n     * @private\n     */\n    _getUserGroupDefaultConfiguration() {\n        return {\n            url: '',\n            service: 'UserGroup',\n            method: 'GetCurrentUserInfo',\n            params: '',\n            headers: new Map([\n                ['SOAPAction', 'http://schemas.microsoft.com/sharepoint/soap/directory/GetCurrentUserInfo'],\n                ['Content-Type', 'text/xml']\n            ])\n        };\n    }\n\n\n    /**\n     * Default interface for Get list\n     * @returns {string}\n     * @private\n     */\n    _getListService() {\n        return '_vti_bin/Lists.asmx';\n    }\n\n\n    /**\n     * Default interface for Update list\n     * @returns {string}\n     * @private\n     */\n    _getUserGroupService() {\n        return '_vti_bin/UserGroup.asmx';\n    }\n\n    /* Ignores all paths ending in a numeric value. These paths don't contain an array, but rather a specific child.\n     * Binding to specific children is not supported by the SharePoint interface, and shouldn't be necessary either\n     * because there is a subscription to child_changed events on the parent array containing this child. */\n    _isChildItem(path) {\n        if (path[path.length - 1] === '/') {\n            path = path.substring(0, path.length - 2);\n        }\n\n        let parts = path.split('/');\n        if (parts.length) {\n            let lastArgument = parts[parts.length - 1];\n\n            let isNumeric = (n) => !isNaN(parseFloat(n)) && isFinite(n);\n\n            if (isNumeric(lastArgument) || lastArgument.indexOf(Settings.localKeyPrefix) === 0) {\n                this.childID = lastArgument;\n                return true;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n"
  },
  {
    "__docId__": 433,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "soapClient",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~soapClient",
    "access": null,
    "export": false,
    "importPath": "./src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient"
      ]
    }
  },
  {
    "__docId__": 434,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "window",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~window",
    "access": null,
    "export": false,
    "importPath": "./src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 435,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "global",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~global",
    "access": null,
    "export": false,
    "importPath": "./src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 436,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "tempKeys",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~tempKeys",
    "access": null,
    "export": false,
    "importPath": "./src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 437,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SharePointClient",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "access": null,
    "export": true,
    "importPath": "./src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js",
    "importStyle": "{SharePointClient}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false,
    "extends": [
      "eventemitter3~EventEmitter"
    ]
  },
  {
    "__docId__": 438,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "refreshTimer",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#refreshTimer",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 439,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "refreshTimer",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#refreshTimer",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 440,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_refreshTimer",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_refreshTimer",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 441,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#constructor",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 442,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "settings",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#settings",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 443,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "interval",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#interval",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 444,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "retriever",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#retriever",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 445,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "cache",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#cache",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 446,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "hasNoServerResponse",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#hasNoServerResponse",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 447,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_active",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_active",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 448,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#init",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 449,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "settings",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#settings",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 450,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "isChild",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#isChild",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 451,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#set",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 452,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#remove",
    "access": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 453,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dispose",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#dispose",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 454,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "refreshTimer",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#refreshTimer",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 455,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_active",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_active",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 456,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAuth",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#getAuth",
    "access": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 457,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "subscribeToChanges",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#subscribeToChanges",
    "access": null,
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 458,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_active",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_active",
    "access": null,
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 459,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_initializeSettings",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_initializeSettings",
    "access": null,
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 460,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_handleInit",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_handleInit",
    "access": "private",
    "description": "Start reading the list from SharePoint and only retrieve changes from last polling timestamp.",
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 461,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "retriever",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#retriever",
    "access": null,
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 462,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "explicitRowLimit",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#explicitRowLimit",
    "access": null,
    "description": null,
    "lineNumber": 208,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 463,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "pageSize",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#pageSize",
    "access": null,
    "description": null,
    "lineNumber": 214,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 464,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_isLimitExceeded",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_isLimitExceeded",
    "access": null,
    "description": null,
    "lineNumber": 221,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 465,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_refresh",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_refresh",
    "access": "private",
    "description": "\nRefresh SharePoint with latest changes.",
    "lineNumber": 232,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "calledManually",
        "description": "If set to false, ignores any existing timer in this.refreshTimer and executes the refresh regardless."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 466,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "hasNoServerResponse",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#hasNoServerResponse",
    "access": null,
    "description": null,
    "lineNumber": 269,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 467,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "refreshTimer",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#refreshTimer",
    "access": null,
    "description": null,
    "lineNumber": 271,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 468,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "refreshTimer",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#refreshTimer",
    "access": null,
    "description": null,
    "lineNumber": 278,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 469,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_handleSet",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_handleSet",
    "access": "private",
    "description": "Add or Update a data record.",
    "lineNumber": 290,
    "params": [
      {
        "name": "newData",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 470,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_handleRemove",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_handleRemove",
    "access": "private",
    "description": "Remove a record from SharePoint",
    "lineNumber": 415,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "record",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 471,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_updateCache",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_updateCache",
    "access": "private",
    "description": "Update our cache and bubble child_added or child_changed events",
    "lineNumber": 469,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 472,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_activateChangeToken",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_activateChangeToken",
    "access": "private",
    "description": "Update the last polling timestamp so we only get the latest changes.",
    "lineNumber": 525,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "newDate",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 473,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_setNextPage",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_setNextPage",
    "access": null,
    "description": null,
    "lineNumber": 529,
    "undocument": true,
    "params": [
      {
        "name": "nextPaginationToken",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 474,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_clearNextPage",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_clearNextPage",
    "access": null,
    "description": null,
    "lineNumber": 533,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 475,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_deactivateChangeToken",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_deactivateChangeToken",
    "access": null,
    "description": null,
    "lineNumber": 537,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 476,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_handleNextToken",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_handleNextToken",
    "access": null,
    "description": null,
    "lineNumber": 542,
    "undocument": true,
    "params": [
      {
        "name": "listItem",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 477,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lastChangeToken",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#lastChangeToken",
    "access": null,
    "description": null,
    "lineNumber": 546,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 478,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_handleDeleted",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_handleDeleted",
    "access": null,
    "description": null,
    "lineNumber": 566,
    "undocument": true,
    "params": [
      {
        "name": "result",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 479,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getResults",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_getResults",
    "access": "private",
    "description": "Parse SharePoint response into formatted records",
    "lineNumber": 612,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 480,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_formatRecord",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_formatRecord",
    "access": "private",
    "description": "Strip SharePoint record from SharePoint specifics",
    "lineNumber": 657,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{}}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "record",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{}"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 481,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_parsePath",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_parsePath",
    "access": "private",
    "description": "Double check if given path is a valid path",
    "lineNumber": 703,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "endPoint",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 482,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_updateListItemsDefaultConfiguration",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_updateListItemsDefaultConfiguration",
    "access": "private",
    "description": "Get Default resource for Updating Lists",
    "lineNumber": 722,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{url: string, service: string, method: string, params: string, headers: (Map|*)}}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "{url: string, service: string, method: string, params: string, headers: (Map|*)}"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 483,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getListItemsDefaultConfiguration",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_getListItemsDefaultConfiguration",
    "access": "private",
    "description": "Get Default resource for Reading Lists",
    "lineNumber": 741,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{url: string, service: string, method: string, params: string, headers: (Map|*)}}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "{url: string, service: string, method: string, params: string, headers: (Map|*)}"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 484,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getUserGroupDefaultConfiguration",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_getUserGroupDefaultConfiguration",
    "access": "private",
    "description": "Get Default resource for Reading Lists",
    "lineNumber": 760,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{url: string, service: string, method: string, params: string, headers: (Map|*)}}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "{url: string, service: string, method: string, params: string, headers: (Map|*)}"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 485,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getListService",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_getListService",
    "access": "private",
    "description": "Default interface for Get list",
    "lineNumber": 779,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 486,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getUserGroupService",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_getUserGroupService",
    "access": "private",
    "description": "Default interface for Update list",
    "lineNumber": 789,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 487,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_isChildItem",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#_isChildItem",
    "access": null,
    "description": null,
    "lineNumber": 796,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 488,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "childID",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SharePointClient.js~SharePointClient#childID",
    "access": null,
    "description": null,
    "lineNumber": 808,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 489,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js",
    "memberof": null,
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n This Source Code is licensed under the MIT license. If a copy of the\n MIT-license was not distributed with this file, You can obtain one at:\n http://opensource.org/licenses/mit-license.html.\n\n @author: Hans van den Akker (mysim1)\n @license MIT\n @copyright Bizboard, 2015\n\n */\n\nimport XML2JS               from './xmljs';\nimport xmljs                from 'xml2js';\nimport template             from 'lodash/template.js';\nimport {ObjectHelper}       from '../../../../../utils/ObjectHelper';\nimport {PostRequest}        from '../../../../../utils/request/RequestClient';\nimport {ParseStringToXml}   from '../../../../../utils/request/XmlParser';\n\nexport class SoapClient {\n\n    constructor() {\n\n        /* Bind all local methods to the current object instance, so we can refer to \"this\"\n         * in the methods as expected, even when they're called from event handlers.        */\n        ObjectHelper.bindAllMethods(this, this);\n\n        /* Hide all private properties (starting with '_') and methods from enumeration,\n         * so when you do for( in ), only actual data properties show up. */\n        ObjectHelper.hideMethodsAndPrivatePropertiesFromObject(this);\n\n        /* Hide the priority field from enumeration, so we don't save it to the dataSource. */\n        ObjectHelper.hidePropertyFromObject(Object.getPrototypeOf(this), 'length');\n    }\n\n\n    _applySoapTemplate(properties) {\n        return template('<?xml version=\"1.0\" encoding=\"utf-8\"?>' +\n            '<soap:Envelope ' +\n            '  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" ' +\n            '  xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" ' +\n            '  xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">' +\n            '<soap:Body>' +\n            '<<%= method %> xmlns=\"http://schemas.microsoft.com/sharepoint/soap/\">' +\n            '<%= params %>' +\n            '</<%= method %>>' +\n            '</soap:Body>' +\n            '</soap:Envelope>')(properties);\n    }\n\n\n    _serializeParams(params) {\n        if (!params || params.length == 0) return \"\";\n        var data = {\"root\": params};\n        var creator = new XML2JS();\n        var payload = creator.json2xml_str(data);\n\n        return payload.replace(\"<root>\", \"\").replace(\"</root>\", \"\");\n    }\n\n    _handleError(error) {\n        return \"Error!\";\n    }\n\n    /**\n     * Replaces locally generated item IDs with their remote SharePoint counterparts.\n     * @param {String} text Text to replace the IDs in.\n     * @param {Array} tempKeys Array of {localId:x, remoteId:y} pairs.\n     * @returns {string} Text with the replaced IDs\n     * @private\n     */\n    _replaceTempKeys(text = '', tempKeys = []) {\n        for (let tempKey of tempKeys) {\n            /* Split/join is faster than doing a regex replace:\n             * http://stackoverflow.com/questions/1144783/replacing-all-occurrences-of-a-string-in-javascript#comment27942520_1145525 */\n            text = text.split(tempKey.localId).join(tempKey.remoteId);\n        }\n\n        return text;\n    }\n\n    call(config, tempKeys = []) {\n\n        var request;\n        config = config || {};\n\n        request = {\n            url: config.url,\n            headers: config.headers,\n            data: this._applySoapTemplate({\n                method: config.method,\n                params: this._replaceTempKeys(this._serializeParams(config.params), tempKeys)\n            })\n        };\n\n        var context = this;\n        // Make the request.\n        return new Promise(function (resolve, reject) {\n\n            PostRequest(request)\n                .then(function (soapresult) {\n\n                    var parseString = xmljs.parseString;\n                    parseString(soapresult.response, function (err, result) {\n                        resolve({data: result, timestamp: soapresult.timestamp});\n                    });\n\n                }, function (error) {\n                    reject(context._handleError(error));\n                });\n        });\n    }\n}\n"
  },
  {
    "__docId__": 490,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SoapClient",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient",
    "access": null,
    "export": true,
    "importPath": "./src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js",
    "importStyle": "{SoapClient}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 491,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient#constructor",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 492,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_applySoapTemplate",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient#_applySoapTemplate",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "properties",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 493,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_serializeParams",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient#_serializeParams",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 494,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_handleError",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient#_handleError",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [
      {
        "name": "error",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 495,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_replaceTempKeys",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient#_replaceTempKeys",
    "access": "private",
    "description": "Replaces locally generated item IDs with their remote SharePoint counterparts.",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Text with the replaced IDs"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "Text to replace the IDs in."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "tempKeys",
        "description": "Array of {localId:x, remoteId:y} pairs."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Text with the replaced IDs"
    },
    "generator": false
  },
  {
    "__docId__": 496,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "call",
    "memberof": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient",
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/SoapClient.js~SoapClient#call",
    "access": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "params": [
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "tempKeys",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 497,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/xmljs.js",
    "memberof": null,
    "longname": "src/data/datasources/SharePoint/SPSoapAdapter/Worker/xmljs.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*\n Copyright 2011-2013 Abdulla Abdurakhmanov\n Original sources are available at https://code.google.com/p/x2js/\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\ndefine(function (require) {\n\n    return function (config) {\n        'use strict';\n\n        var VERSION = \"1.1.6\";\n\n        config = config || {};\n        initConfigDefaults();\n        initRequiredPolyfills();\n\n        function initConfigDefaults() {\n            if (config.escapeMode === undefined) {\n                config.escapeMode = true;\n            }\n            config.attributePrefix = config.attributePrefix || \"_\";\n            config.arrayAccessForm = config.arrayAccessForm || \"none\";\n            config.emptyNodeForm = config.emptyNodeForm || \"text\";\n            if (config.enableToStringFunc === undefined) {\n                config.enableToStringFunc = true;\n            }\n            config.arrayAccessFormPaths = config.arrayAccessFormPaths || [];\n            if (config.skipEmptyTextNodesForObj === undefined) {\n                config.skipEmptyTextNodesForObj = true;\n            }\n            if (config.stripWhitespaces === undefined) {\n                config.stripWhitespaces = true;\n            }\n            config.datetimeAccessFormPaths = config.datetimeAccessFormPaths || [];\n        }\n\n        var DOMNodeTypes = {\n            ELEMENT_NODE: 1,\n            TEXT_NODE: 3,\n            CDATA_SECTION_NODE: 4,\n            COMMENT_NODE: 8,\n            DOCUMENT_NODE: 9\n        };\n\n        function initRequiredPolyfills() {\n            function pad(number) {\n                var r = String(number);\n                if (r.length === 1) {\n                    r = '0' + r;\n                }\n                return r;\n            }\n\n            // Hello IE8-\n            if (typeof String.prototype.trim !== 'function') {\n                String.prototype.trim = function () {\n                    return this.replace(/^\\s+|^\\n+|(\\s|\\n)+$/g, '');\n                }\n            }\n            if (typeof Date.prototype.toISOString !== 'function') {\n                // Implementation from http://stackoverflow.com/questions/2573521/how-do-i-output-an-iso-8601-formatted-string-in-javascript\n                Date.prototype.toISOString = function () {\n                    return this.getUTCFullYear()\n                        + '-' + pad(this.getUTCMonth() + 1)\n                        + '-' + pad(this.getUTCDate())\n                        + 'T' + pad(this.getUTCHours())\n                        + ':' + pad(this.getUTCMinutes())\n                        + ':' + pad(this.getUTCSeconds())\n                        + '.' + String((this.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\n                        + 'Z';\n                };\n            }\n        }\n\n        function getNodeLocalName(node) {\n            var nodeLocalName = node.localName;\n            if (nodeLocalName == null) // Yeah, this is IE!!\n                nodeLocalName = node.baseName;\n            if (nodeLocalName == null || nodeLocalName == \"\") // ==\"\" is IE too\n                nodeLocalName = node.nodeName;\n            return nodeLocalName;\n        }\n\n        function getNodePrefix(node) {\n            return node.prefix;\n        }\n\n        function escapeXmlChars(str) {\n            if (typeof(str) == \"string\")\n                return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;');\n            else\n                return str;\n        }\n\n        function unescapeXmlChars(str) {\n            return str.replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&#x27;/g, \"'\");\n        }\n\n        function toArrayAccessForm(obj, childName, path) {\n            switch (config.arrayAccessForm) {\n                case \"property\":\n                    if (!(obj[childName] instanceof Array))\n                        obj[childName + \"_asArray\"] = [obj[childName]];\n                    else\n                        obj[childName + \"_asArray\"] = obj[childName];\n                    break;\n                /*case \"none\":\n                 break;*/\n            }\n\n            if (!(obj[childName] instanceof Array) && config.arrayAccessFormPaths.length > 0) {\n                var idx = 0;\n                for (; idx < config.arrayAccessFormPaths.length; idx++) {\n                    var arrayPath = config.arrayAccessFormPaths[idx];\n                    if (typeof arrayPath === \"string\") {\n                        if (arrayPath == path)\n                            break;\n                    }\n                    else if (arrayPath instanceof RegExp) {\n                        if (arrayPath.test(path))\n                            break;\n                    }\n                    else if (typeof arrayPath === \"function\") {\n                        if (arrayPath(obj, childName, path))\n                            break;\n                    }\n                }\n                if (idx != config.arrayAccessFormPaths.length) {\n                    obj[childName] = [obj[childName]];\n                }\n            }\n        }\n\n        function fromXmlDateTime(prop) {\n            // Implementation based up on http://stackoverflow.com/questions/8178598/xml-datetime-to-javascript-date-object\n            // Improved to support full spec and optional parts\n            var bits = prop.split(/[-T:+Z]/g);\n\n            var d = new Date(bits[0], bits[1] - 1, bits[2]);\n            var secondBits = bits[5].split(\"\\.\");\n            d.setHours(bits[3], bits[4], secondBits[0]);\n            if (secondBits.length > 1)\n                d.setMilliseconds(secondBits[1]);\n\n            // Get supplied time zone offset in minutes\n            if (bits[6] && bits[7]) {\n                var offsetMinutes = bits[6] * 60 + Number(bits[7]);\n                var sign = /\\d\\d-\\d\\d:\\d\\d$/.test(prop) ? '-' : '+';\n\n                // Apply the sign\n                offsetMinutes = 0 + (sign == '-' ? -1 * offsetMinutes : offsetMinutes);\n\n                // Apply offset and local timezone\n                d.setMinutes(d.getMinutes() - offsetMinutes - d.getTimezoneOffset())\n            }\n            else if (prop.indexOf(\"Z\", prop.length - 1) !== -1) {\n                d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds()));\n            }\n\n            // d is now a local time equivalent to the supplied time\n            return d;\n        }\n\n        function checkFromXmlDateTimePaths(value, childName, fullPath) {\n            if (config.datetimeAccessFormPaths.length > 0) {\n                var path = fullPath.split(\"\\.#\")[0];\n                var idx = 0;\n                for (; idx < config.datetimeAccessFormPaths.length; idx++) {\n                    var dtPath = config.datetimeAccessFormPaths[idx];\n                    if (typeof dtPath === \"string\") {\n                        if (dtPath == path)\n                            break;\n                    }\n                    else if (dtPath instanceof RegExp) {\n                        if (dtPath.test(path))\n                            break;\n                    }\n                    else if (typeof dtPath === \"function\") {\n                        if (dtPath(obj, childName, path))\n                            break;\n                    }\n                }\n                if (idx != config.datetimeAccessFormPaths.length) {\n                    return fromXmlDateTime(value);\n                }\n                else\n                    return value;\n            }\n            else\n                return value;\n        }\n\n        function parseDOMChildren(node, path) {\n            if (node.nodeType == DOMNodeTypes.DOCUMENT_NODE) {\n                var result = new Object;\n                var nodeChildren = node.childNodes;\n                // Alternative for firstElementChild which is not supported in some environments\n                for (var cidx = 0; cidx < nodeChildren.length; cidx++) {\n                    var child = nodeChildren.item(cidx);\n                    if (child.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n                        var childName = getNodeLocalName(child);\n                        result[childName] = parseDOMChildren(child, childName);\n                    }\n                }\n                return result;\n            }\n            else if (node.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n                var result = new Object;\n                result.__cnt = 0;\n\n                var nodeChildren = node.childNodes;\n\n                // Children nodes\n                for (var cidx = 0; cidx < nodeChildren.length; cidx++) {\n                    var child = nodeChildren.item(cidx); // nodeChildren[cidx];\n                    var childName = getNodeLocalName(child);\n\n                    if (child.nodeType != DOMNodeTypes.COMMENT_NODE) {\n                        result.__cnt++;\n                        if (result[childName] == null) {\n                            result[childName] = parseDOMChildren(child, path + \".\" + childName);\n                            toArrayAccessForm(result, childName, path + \".\" + childName);\n                        }\n                        else {\n                            if (result[childName] != null) {\n                                if (!(result[childName] instanceof Array)) {\n                                    result[childName] = [result[childName]];\n                                    toArrayAccessForm(result, childName, path + \".\" + childName);\n                                }\n                            }\n                            (result[childName])[result[childName].length] = parseDOMChildren(child, path + \".\" + childName);\n                        }\n                    }\n                }\n\n                // Attributes\n                for (var aidx = 0; aidx < node.attributes.length; aidx++) {\n                    var attr = node.attributes.item(aidx); // [aidx];\n                    result.__cnt++;\n                    result[config.attributePrefix + attr.name] = attr.value;\n                }\n\n                // Node namespace prefix\n                var nodePrefix = getNodePrefix(node);\n                if (nodePrefix != null && nodePrefix != \"\") {\n                    result.__cnt++;\n                    result.__prefix = nodePrefix;\n                }\n\n                if (result[\"#text\"] != null) {\n                    result.__text = result[\"#text\"];\n                    if (result.__text instanceof Array) {\n                        result.__text = result.__text.join(\"\\n\");\n                    }\n                    if (config.escapeMode)\n                        result.__text = unescapeXmlChars(result.__text);\n                    if (config.stripWhitespaces)\n                        result.__text = result.__text.trim();\n                    delete result[\"#text\"];\n                    if (config.arrayAccessForm == \"property\")\n                        delete result[\"#text_asArray\"];\n                    result.__text = checkFromXmlDateTimePaths(result.__text, childName, path + \".\" + childName);\n                }\n                if (result[\"#cdata-section\"] != null) {\n                    result.__cdata = result[\"#cdata-section\"];\n                    delete result[\"#cdata-section\"];\n                    if (config.arrayAccessForm == \"property\")\n                        delete result[\"#cdata-section_asArray\"];\n                }\n\n                if (result.__cnt == 1 && result.__text != null) {\n                    result = result.__text;\n                }\n                else if (result.__cnt == 0 && config.emptyNodeForm == \"text\") {\n                    result = '';\n                }\n                else if (result.__cnt > 1 && result.__text != null && config.skipEmptyTextNodesForObj) {\n                    if ((config.stripWhitespaces && result.__text == \"\") || (result.__text.trim() == \"\")) {\n                        delete result.__text;\n                    }\n                }\n                delete result.__cnt;\n\n                if (config.enableToStringFunc && (result.__text != null || result.__cdata != null )) {\n                    result.toString = function () {\n                        return (this.__text != null ? this.__text : '') + ( this.__cdata != null ? this.__cdata : '');\n                    };\n                }\n\n                return result;\n            }\n            else if (node.nodeType == DOMNodeTypes.TEXT_NODE || node.nodeType == DOMNodeTypes.CDATA_SECTION_NODE) {\n                return node.nodeValue;\n            }\n        }\n\n        function startTag(jsonObj, element, attrList, closed) {\n            var resultStr = \"<\" + ( (jsonObj != null && jsonObj.__prefix != null) ? (jsonObj.__prefix + \":\") : \"\") + element;\n            if (attrList != null) {\n                for (var aidx = 0; aidx < attrList.length; aidx++) {\n                    var attrName = attrList[aidx];\n                    var attrVal = jsonObj[attrName];\n                    if (config.escapeMode)\n                        attrVal = escapeXmlChars(attrVal);\n                    resultStr += \" \" + attrName.substr(config.attributePrefix.length) + \"='\" + attrVal + \"'\";\n                }\n            }\n            if (!closed)\n                resultStr += \">\";\n            else\n                resultStr += \"/>\";\n            return resultStr;\n        }\n\n        function endTag(jsonObj, elementName) {\n            return \"</\" + (jsonObj.__prefix != null ? (jsonObj.__prefix + \":\") : \"\") + elementName + \">\";\n        }\n\n        function endsWith(str, suffix) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function jsonXmlSpecialElem(jsonObj, jsonObjField) {\n            if ((config.arrayAccessForm == \"property\" && endsWith(jsonObjField.toString(), (\"_asArray\")))\n                || jsonObjField.toString().indexOf(config.attributePrefix) == 0\n                || jsonObjField.toString().indexOf(\"__\") == 0\n                || (jsonObj[jsonObjField] instanceof Function))\n                return true;\n            else\n                return false;\n        }\n\n        function jsonXmlElemCount(jsonObj) {\n            var elementsCnt = 0;\n            if (jsonObj instanceof Object) {\n                for (var it in jsonObj) {\n                    if (jsonXmlSpecialElem(jsonObj, it))\n                        continue;\n                    elementsCnt++;\n                }\n            }\n            return elementsCnt;\n        }\n\n        function parseJSONAttributes(jsonObj) {\n            var attrList = [];\n            if (jsonObj instanceof Object) {\n                for (var ait in jsonObj) {\n                    if (ait.toString().indexOf(\"__\") == -1 && ait.toString().indexOf(config.attributePrefix) == 0) {\n                        attrList.push(ait);\n                    }\n                }\n            }\n            return attrList;\n        }\n\n        function parseJSONTextAttrs(jsonTxtObj) {\n            var result = \"\";\n\n            if (jsonTxtObj.__cdata != null) {\n                result += \"<![CDATA[\" + jsonTxtObj.__cdata + \"]]>\";\n            }\n\n            if (jsonTxtObj.__text != null) {\n                if (config.escapeMode)\n                    result += escapeXmlChars(jsonTxtObj.__text);\n                else\n                    result += jsonTxtObj.__text;\n            }\n            return result;\n        }\n\n        function parseJSONTextObject(jsonTxtObj) {\n            var result = \"\";\n\n            if (jsonTxtObj instanceof Object) {\n                result += parseJSONTextAttrs(jsonTxtObj);\n            }\n            else if (jsonTxtObj != null) {\n                if (config.escapeMode)\n                    result += escapeXmlChars(jsonTxtObj);\n                else\n                    result += jsonTxtObj;\n            }\n\n            return result;\n        }\n\n        function parseJSONArray(jsonArrRoot, jsonArrObj, attrList) {\n            var result = \"\";\n            if (jsonArrRoot.length == 0) {\n                result += startTag(jsonArrRoot, jsonArrObj, attrList, true);\n            }\n            else {\n                for (var arIdx = 0; arIdx < jsonArrRoot.length; arIdx++) {\n                    result += startTag(jsonArrRoot[arIdx], jsonArrObj, parseJSONAttributes(jsonArrRoot[arIdx]), false);\n                    result += parseJSONObject(jsonArrRoot[arIdx]);\n                    result += endTag(jsonArrRoot[arIdx], jsonArrObj);\n                }\n            }\n            return result;\n        }\n\n        function parseJSONObject(jsonObj) {\n            var result = \"\";\n\n            var elementsCnt = jsonXmlElemCount(jsonObj);\n\n            if (elementsCnt > 0) {\n                for (var it in jsonObj) {\n\n                    if (jsonXmlSpecialElem(jsonObj, it))\n                        continue;\n\n                    var subObj = jsonObj[it];\n\n                    var attrList = parseJSONAttributes(subObj)\n\n                    if (subObj == null || subObj == undefined) {\n                        result += startTag(subObj, it, attrList, true);\n                    }\n                    else if (subObj instanceof Object) {\n\n                        if (subObj instanceof Array) {\n                            result += parseJSONArray(subObj, it, attrList);\n                        }\n                        else if (subObj instanceof Date) {\n                            result += startTag(subObj, it, attrList, false);\n                            result += subObj.toISOString();\n                            result += endTag(subObj, it);\n                        }\n                        else {\n                            var subObjElementsCnt = jsonXmlElemCount(subObj);\n                            if (subObjElementsCnt > 0 || subObj.__text != null || subObj.__cdata != null) {\n                                result += startTag(subObj, it, attrList, false);\n                                result += parseJSONObject(subObj);\n                                result += endTag(subObj, it);\n                            }\n                            else {\n                                result += startTag(subObj, it, attrList, true);\n                            }\n                        }\n                    }\n                    else {\n                        result += startTag(subObj, it, attrList, false);\n                        result += parseJSONTextObject(subObj);\n                        result += endTag(subObj, it);\n                    }\n                }\n            }\n            result += parseJSONTextObject(jsonObj);\n\n            return result;\n        }\n\n        this.parseXmlString = function (xmlDocStr) {\n            var isIEParser = window.ActiveXObject || \"ActiveXObject\" in window;\n            if (xmlDocStr === undefined) {\n                return null;\n            }\n            var xmlDoc;\n            if (window.DOMParser) {\n                var parser = new window.DOMParser();\n                var parsererrorNS = null;\n                // IE9+ now is here\n                if (!isIEParser) {\n                    try {\n                        parsererrorNS = parser.parseFromString(\"INVALID\", \"text/xml\").childNodes[0].namespaceURI;\n                    }\n                    catch (err) {\n                        parsererrorNS = null;\n                    }\n                }\n                try {\n                    xmlDoc = parser.parseFromString(xmlDocStr, \"text/xml\");\n                    if (parsererrorNS != null && xmlDoc.getElementsByTagNameNS(parsererrorNS, \"parsererror\").length > 0) {\n                        //throw new Error('Error parsing XML: '+xmlDocStr);\n                        xmlDoc = null;\n                    }\n                }\n                catch (err) {\n                    xmlDoc = null;\n                }\n            }\n            else {\n                // IE :(\n                if (xmlDocStr.indexOf(\"<?\") == 0) {\n                    xmlDocStr = xmlDocStr.substr(xmlDocStr.indexOf(\"?>\") + 2);\n                }\n                xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n                xmlDoc.async = \"false\";\n                xmlDoc.loadXML(xmlDocStr);\n            }\n            return xmlDoc;\n        };\n\n        this.asArray = function (prop) {\n            if (prop instanceof Array)\n                return prop;\n            else\n                return [prop];\n        };\n\n        this.toXmlDateTime = function (dt) {\n            if (dt instanceof Date)\n                return dt.toISOString();\n            else if (typeof(dt) === 'number')\n                return new Date(dt).toISOString();\n            else\n                return null;\n        };\n\n        this.asDateTime = function (prop) {\n            if (typeof(prop) == \"string\") {\n                return fromXmlDateTime(prop);\n            }\n            else\n                return prop;\n        };\n\n        this.xml2json = function (xmlDoc) {\n            return parseDOMChildren(xmlDoc);\n        };\n\n        this.xml_str2json = function (xmlDocStr) {\n            var xmlDoc = this.parseXmlString(xmlDocStr);\n            if (xmlDoc != null)\n                return this.xml2json(xmlDoc);\n            else\n                return null;\n        };\n\n        this.json2xml_str = function (jsonObj) {\n            return parseJSONObject(jsonObj);\n        };\n\n        this.json2xml = function (jsonObj) {\n            var xmlDocStr = this.json2xml_str(jsonObj);\n            return this.parseXmlString(xmlDocStr);\n        };\n\n        this.getVersion = function () {\n            return VERSION;\n        };\n    }\n});\n"
  },
  {
    "__docId__": 498,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/datasources/SharePoint/SharePointSnapshot.js",
    "memberof": null,
    "longname": "src/data/datasources/SharePoint/SharePointSnapshot.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Hans van den Akker (mysim1)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport {ObjectHelper}               from '../../../utils/ObjectHelper.js';\nimport {Snapshot}                   from '../../Snapshot.js';\n\nexport class SharePointSnapshot extends Snapshot {\n\n    constructor(dataSnapshot, dataSource = null, kvpair = null) {\n        super();\n        this._data = dataSnapshot;\n        this._dataSource = dataSource;\n        this._kvpair = kvpair;\n\n        /* Bind all local methods to the current object instance, so we can refer to \"this\"\n         * in the methods as expected, even when they're called from event handlers.        */\n        ObjectHelper.bindAllMethods(this, this);\n    }\n\n    get key() {\n\n        if (this._kvpair) return this._kvpair.key;\n\n        else if (this._data instanceof Array && this._data.length == 1)\n            return this._data[0].id;\n        else if (this._data instanceof Object)\n            return this._data.id;\n\n        //return this._data.id ? this._data.id : this._dataSource.key();\n    }\n\n    val() {\n        if (this._kvpair) return this._kvpair.value;\n        else return this._data;\n    }\n\n    get ref() {\n        return this._dataSource;\n    }\n\n    getPriority() { /* Not implemented for SharePoint */\n        //TODO: have priority be part of list schema. and makes ordering super easy\n    }\n\n\n    forEach(callback) {\n\n        if (this._data instanceof Array) {\n            for (let object of this._data) {\n                callback(new SharePointSnapshot(object, this._dataSource));\n            }\n        }\n        else if (this._data instanceof Object) {\n            for (let key in this._data) {\n                callback(new SharePointSnapshot(object, this._dataSource, {key: key, value: this._data[key]}));\n            }\n        }\n    }\n\n    numChildren() {\n        if (this._data instanceof Array) {\n            return this._data.length;\n        } else if (this._data instanceof Object) {\n            return ObjectHelper.getEnumerableProperties(this._data).length;\n        } else {\n            return 0;\n        }\n    }\n}\n\n"
  },
  {
    "__docId__": 499,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SharePointSnapshot",
    "memberof": "src/data/datasources/SharePoint/SharePointSnapshot.js",
    "longname": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot",
    "access": null,
    "export": true,
    "importPath": "./src/data/datasources/SharePoint/SharePointSnapshot.js",
    "importStyle": "{SharePointSnapshot}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/data/Snapshot.js~Snapshot"
    ]
  },
  {
    "__docId__": 500,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot",
    "longname": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot#constructor",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "dataSnapshot",
        "types": [
          "*"
        ]
      },
      {
        "name": "dataSource",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      },
      {
        "name": "kvpair",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 501,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_data",
    "memberof": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot",
    "longname": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot#_data",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 502,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot",
    "longname": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 503,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_kvpair",
    "memberof": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot",
    "longname": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot#_kvpair",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 504,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "key",
    "memberof": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot",
    "longname": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot#key",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 505,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "val",
    "memberof": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot",
    "longname": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot#val",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 506,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "ref",
    "memberof": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot",
    "longname": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot#ref",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 507,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPriority",
    "memberof": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot",
    "longname": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot#getPriority",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 508,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "forEach",
    "memberof": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot",
    "longname": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot#forEach",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 509,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "numChildren",
    "memberof": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot",
    "longname": "src/data/datasources/SharePoint/SharePointSnapshot.js~SharePointSnapshot#numChildren",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "number"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 510,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/datasources/SharePoint/xml2js.js",
    "memberof": null,
    "longname": "src/data/datasources/SharePoint/xml2js.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/*\n Copyright 2011-2013 Abdulla Abdurakhmanov\n Original sources are available at https://code.google.com/p/x2js/\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n */\n\ndefine(function (require) {\n\n    return function (config) {\n        'use strict';\n\n        var VERSION = \"1.1.6\";\n\n        config = config || {};\n        initConfigDefaults();\n        initRequiredPolyfills();\n\n        function initConfigDefaults() {\n            if (config.escapeMode === undefined) {\n                config.escapeMode = true;\n            }\n            config.attributePrefix = config.attributePrefix || \"_\";\n            config.arrayAccessForm = config.arrayAccessForm || \"none\";\n            config.emptyNodeForm = config.emptyNodeForm || \"text\";\n            if (config.enableToStringFunc === undefined) {\n                config.enableToStringFunc = true;\n            }\n            config.arrayAccessFormPaths = config.arrayAccessFormPaths || [];\n            if (config.skipEmptyTextNodesForObj === undefined) {\n                config.skipEmptyTextNodesForObj = true;\n            }\n            if (config.stripWhitespaces === undefined) {\n                config.stripWhitespaces = true;\n            }\n            config.datetimeAccessFormPaths = config.datetimeAccessFormPaths || [];\n        }\n\n        var DOMNodeTypes = {\n            ELEMENT_NODE: 1,\n            TEXT_NODE: 3,\n            CDATA_SECTION_NODE: 4,\n            COMMENT_NODE: 8,\n            DOCUMENT_NODE: 9\n        };\n\n        function initRequiredPolyfills() {\n            function pad(number) {\n                var r = String(number);\n                if (r.length === 1) {\n                    r = '0' + r;\n                }\n                return r;\n            }\n\n            // Hello IE8-\n            if (typeof String.prototype.trim !== 'function') {\n                String.prototype.trim = function () {\n                    return this.replace(/^\\s+|^\\n+|(\\s|\\n)+$/g, '');\n                }\n            }\n            if (typeof Date.prototype.toISOString !== 'function') {\n                // Implementation from http://stackoverflow.com/questions/2573521/how-do-i-output-an-iso-8601-formatted-string-in-javascript\n                Date.prototype.toISOString = function () {\n                    return this.getUTCFullYear()\n                        + '-' + pad(this.getUTCMonth() + 1)\n                        + '-' + pad(this.getUTCDate())\n                        + 'T' + pad(this.getUTCHours())\n                        + ':' + pad(this.getUTCMinutes())\n                        + ':' + pad(this.getUTCSeconds())\n                        + '.' + String((this.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\n                        + 'Z';\n                };\n            }\n        }\n\n        function getNodeLocalName(node) {\n            var nodeLocalName = node.localName;\n            if (nodeLocalName == null) // Yeah, this is IE!! \n                nodeLocalName = node.baseName;\n            if (nodeLocalName == null || nodeLocalName == \"\") // ==\"\" is IE too\n                nodeLocalName = node.nodeName;\n            return nodeLocalName;\n        }\n\n        function getNodePrefix(node) {\n            return node.prefix;\n        }\n\n        function escapeXmlChars(str) {\n            if (typeof(str) == \"string\")\n                return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;');\n            else\n                return str;\n        }\n\n        function unescapeXmlChars(str) {\n            return str.replace(/&amp;/g, '&').replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&#x27;/g, \"'\");\n        }\n\n        function toArrayAccessForm(obj, childName, path) {\n            switch (config.arrayAccessForm) {\n                case \"property\":\n                    if (!(obj[childName] instanceof Array))\n                        obj[childName + \"_asArray\"] = [obj[childName]];\n                    else\n                        obj[childName + \"_asArray\"] = obj[childName];\n                    break;\n                /*case \"none\":\n                 break;*/\n            }\n\n            if (!(obj[childName] instanceof Array) && config.arrayAccessFormPaths.length > 0) {\n                var idx = 0;\n                for (; idx < config.arrayAccessFormPaths.length; idx++) {\n                    var arrayPath = config.arrayAccessFormPaths[idx];\n                    if (typeof arrayPath === \"string\") {\n                        if (arrayPath == path)\n                            break;\n                    }\n                    else if (arrayPath instanceof RegExp) {\n                        if (arrayPath.test(path))\n                            break;\n                    }\n                    else if (typeof arrayPath === \"function\") {\n                        if (arrayPath(obj, childName, path))\n                            break;\n                    }\n                }\n                if (idx != config.arrayAccessFormPaths.length) {\n                    obj[childName] = [obj[childName]];\n                }\n            }\n        }\n\n        function fromXmlDateTime(prop) {\n            // Implementation based up on http://stackoverflow.com/questions/8178598/xml-datetime-to-javascript-date-object\n            // Improved to support full spec and optional parts\n            var bits = prop.split(/[-T:+Z]/g);\n\n            var d = new Date(bits[0], bits[1] - 1, bits[2]);\n            var secondBits = bits[5].split(\"\\.\");\n            d.setHours(bits[3], bits[4], secondBits[0]);\n            if (secondBits.length > 1)\n                d.setMilliseconds(secondBits[1]);\n\n            // Get supplied time zone offset in minutes\n            if (bits[6] && bits[7]) {\n                var offsetMinutes = bits[6] * 60 + Number(bits[7]);\n                var sign = /\\d\\d-\\d\\d:\\d\\d$/.test(prop) ? '-' : '+';\n\n                // Apply the sign\n                offsetMinutes = 0 + (sign == '-' ? -1 * offsetMinutes : offsetMinutes);\n\n                // Apply offset and local timezone\n                d.setMinutes(d.getMinutes() - offsetMinutes - d.getTimezoneOffset())\n            }\n            else if (prop.indexOf(\"Z\", prop.length - 1) !== -1) {\n                d = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds()));\n            }\n\n            // d is now a local time equivalent to the supplied time\n            return d;\n        }\n\n        function checkFromXmlDateTimePaths(value, childName, fullPath) {\n            if (config.datetimeAccessFormPaths.length > 0) {\n                var path = fullPath.split(\"\\.#\")[0];\n                var idx = 0;\n                for (; idx < config.datetimeAccessFormPaths.length; idx++) {\n                    var dtPath = config.datetimeAccessFormPaths[idx];\n                    if (typeof dtPath === \"string\") {\n                        if (dtPath == path)\n                            break;\n                    }\n                    else if (dtPath instanceof RegExp) {\n                        if (dtPath.test(path))\n                            break;\n                    }\n                    else if (typeof dtPath === \"function\") {\n                        if (dtPath(obj, childName, path))\n                            break;\n                    }\n                }\n                if (idx != config.datetimeAccessFormPaths.length) {\n                    return fromXmlDateTime(value);\n                }\n                else\n                    return value;\n            }\n            else\n                return value;\n        }\n\n        function parseDOMChildren(node, path) {\n            if (node.nodeType == DOMNodeTypes.DOCUMENT_NODE) {\n                var result = new Object;\n                var nodeChildren = node.childNodes;\n                // Alternative for firstElementChild which is not supported in some environments\n                for (var cidx = 0; cidx < nodeChildren.length; cidx++) {\n                    var child = nodeChildren.item(cidx);\n                    if (child.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n                        var childName = getNodeLocalName(child);\n                        result[childName] = parseDOMChildren(child, childName);\n                    }\n                }\n                return result;\n            }\n            else if (node.nodeType == DOMNodeTypes.ELEMENT_NODE) {\n                var result = new Object;\n                result.__cnt = 0;\n\n                var nodeChildren = node.childNodes;\n\n                // Children nodes\n                for (var cidx = 0; cidx < nodeChildren.length; cidx++) {\n                    var child = nodeChildren.item(cidx); // nodeChildren[cidx];\n                    var childName = getNodeLocalName(child);\n\n                    if (child.nodeType != DOMNodeTypes.COMMENT_NODE) {\n                        result.__cnt++;\n                        if (result[childName] == null) {\n                            result[childName] = parseDOMChildren(child, path + \".\" + childName);\n                            toArrayAccessForm(result, childName, path + \".\" + childName);\n                        }\n                        else {\n                            if (result[childName] != null) {\n                                if (!(result[childName] instanceof Array)) {\n                                    result[childName] = [result[childName]];\n                                    toArrayAccessForm(result, childName, path + \".\" + childName);\n                                }\n                            }\n                            (result[childName])[result[childName].length] = parseDOMChildren(child, path + \".\" + childName);\n                        }\n                    }\n                }\n\n                // Attributes\n                for (var aidx = 0; aidx < node.attributes.length; aidx++) {\n                    var attr = node.attributes.item(aidx); // [aidx];\n                    result.__cnt++;\n                    result[config.attributePrefix + attr.name] = attr.value;\n                }\n\n                // Node namespace prefix\n                var nodePrefix = getNodePrefix(node);\n                if (nodePrefix != null && nodePrefix != \"\") {\n                    result.__cnt++;\n                    result.__prefix = nodePrefix;\n                }\n\n                if (result[\"#text\"] != null) {\n                    result.__text = result[\"#text\"];\n                    if (result.__text instanceof Array) {\n                        result.__text = result.__text.join(\"\\n\");\n                    }\n                    if (config.escapeMode)\n                        result.__text = unescapeXmlChars(result.__text);\n                    if (config.stripWhitespaces)\n                        result.__text = result.__text.trim();\n                    delete result[\"#text\"];\n                    if (config.arrayAccessForm == \"property\")\n                        delete result[\"#text_asArray\"];\n                    result.__text = checkFromXmlDateTimePaths(result.__text, childName, path + \".\" + childName);\n                }\n                if (result[\"#cdata-section\"] != null) {\n                    result.__cdata = result[\"#cdata-section\"];\n                    delete result[\"#cdata-section\"];\n                    if (config.arrayAccessForm == \"property\")\n                        delete result[\"#cdata-section_asArray\"];\n                }\n\n                if (result.__cnt == 1 && result.__text != null) {\n                    result = result.__text;\n                }\n                else if (result.__cnt == 0 && config.emptyNodeForm == \"text\") {\n                    result = '';\n                }\n                else if (result.__cnt > 1 && result.__text != null && config.skipEmptyTextNodesForObj) {\n                    if ((config.stripWhitespaces && result.__text == \"\") || (result.__text.trim() == \"\")) {\n                        delete result.__text;\n                    }\n                }\n                delete result.__cnt;\n\n                if (config.enableToStringFunc && (result.__text != null || result.__cdata != null )) {\n                    result.toString = function () {\n                        return (this.__text != null ? this.__text : '') + ( this.__cdata != null ? this.__cdata : '');\n                    };\n                }\n\n                return result;\n            }\n            else if (node.nodeType == DOMNodeTypes.TEXT_NODE || node.nodeType == DOMNodeTypes.CDATA_SECTION_NODE) {\n                return node.nodeValue;\n            }\n        }\n\n        function startTag(jsonObj, element, attrList, closed) {\n            var resultStr = \"<\" + ( (jsonObj != null && jsonObj.__prefix != null) ? (jsonObj.__prefix + \":\") : \"\") + element;\n            if (attrList != null) {\n                for (var aidx = 0; aidx < attrList.length; aidx++) {\n                    var attrName = attrList[aidx];\n                    var attrVal = jsonObj[attrName];\n                    if (config.escapeMode)\n                        attrVal = escapeXmlChars(attrVal);\n                    resultStr += \" \" + attrName.substr(config.attributePrefix.length) + \"='\" + attrVal + \"'\";\n                }\n            }\n            if (!closed)\n                resultStr += \">\";\n            else\n                resultStr += \"/>\";\n            return resultStr;\n        }\n\n        function endTag(jsonObj, elementName) {\n            return \"</\" + (jsonObj.__prefix != null ? (jsonObj.__prefix + \":\") : \"\") + elementName + \">\";\n        }\n\n        function endsWith(str, suffix) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n\n        function jsonXmlSpecialElem(jsonObj, jsonObjField) {\n            if ((config.arrayAccessForm == \"property\" && endsWith(jsonObjField.toString(), (\"_asArray\")))\n                || jsonObjField.toString().indexOf(config.attributePrefix) == 0\n                || jsonObjField.toString().indexOf(\"__\") == 0\n                || (jsonObj[jsonObjField] instanceof Function))\n                return true;\n            else\n                return false;\n        }\n\n        function jsonXmlElemCount(jsonObj) {\n            var elementsCnt = 0;\n            if (jsonObj instanceof Object) {\n                for (var it in jsonObj) {\n                    if (jsonXmlSpecialElem(jsonObj, it))\n                        continue;\n                    elementsCnt++;\n                }\n            }\n            return elementsCnt;\n        }\n\n        function parseJSONAttributes(jsonObj) {\n            var attrList = [];\n            if (jsonObj instanceof Object) {\n                for (var ait in jsonObj) {\n                    if (ait.toString().indexOf(\"__\") == -1 && ait.toString().indexOf(config.attributePrefix) == 0) {\n                        attrList.push(ait);\n                    }\n                }\n            }\n            return attrList;\n        }\n\n        function parseJSONTextAttrs(jsonTxtObj) {\n            var result = \"\";\n\n            if (jsonTxtObj.__cdata != null) {\n                result += \"<![CDATA[\" + jsonTxtObj.__cdata + \"]]>\";\n            }\n\n            if (jsonTxtObj.__text != null) {\n                if (config.escapeMode)\n                    result += escapeXmlChars(jsonTxtObj.__text);\n                else\n                    result += jsonTxtObj.__text;\n            }\n            return result;\n        }\n\n        function parseJSONTextObject(jsonTxtObj) {\n            var result = \"\";\n\n            if (jsonTxtObj instanceof Object) {\n                result += parseJSONTextAttrs(jsonTxtObj);\n            }\n            else if (jsonTxtObj != null) {\n                if (config.escapeMode)\n                    result += escapeXmlChars(jsonTxtObj);\n                else\n                    result += jsonTxtObj;\n            }\n\n            return result;\n        }\n\n        function parseJSONArray(jsonArrRoot, jsonArrObj, attrList) {\n            var result = \"\";\n            if (jsonArrRoot.length == 0) {\n                result += startTag(jsonArrRoot, jsonArrObj, attrList, true);\n            }\n            else {\n                for (var arIdx = 0; arIdx < jsonArrRoot.length; arIdx++) {\n                    result += startTag(jsonArrRoot[arIdx], jsonArrObj, parseJSONAttributes(jsonArrRoot[arIdx]), false);\n                    result += parseJSONObject(jsonArrRoot[arIdx]);\n                    result += endTag(jsonArrRoot[arIdx], jsonArrObj);\n                }\n            }\n            return result;\n        }\n\n        function parseJSONObject(jsonObj) {\n            var result = \"\";\n\n            var elementsCnt = jsonXmlElemCount(jsonObj);\n\n            if (elementsCnt > 0) {\n                for (var it in jsonObj) {\n\n                    if (jsonXmlSpecialElem(jsonObj, it))\n                        continue;\n\n                    var subObj = jsonObj[it];\n\n                    var attrList = parseJSONAttributes(subObj)\n\n                    if (subObj == null || subObj == undefined) {\n                        result += startTag(subObj, it, attrList, true);\n                    }\n                    else if (subObj instanceof Object) {\n\n                        if (subObj instanceof Array) {\n                            result += parseJSONArray(subObj, it, attrList);\n                        }\n                        else if (subObj instanceof Date) {\n                            result += startTag(subObj, it, attrList, false);\n                            result += subObj.toISOString();\n                            result += endTag(subObj, it);\n                        }\n                        else {\n                            var subObjElementsCnt = jsonXmlElemCount(subObj);\n                            if (subObjElementsCnt > 0 || subObj.__text != null || subObj.__cdata != null) {\n                                result += startTag(subObj, it, attrList, false);\n                                result += parseJSONObject(subObj);\n                                result += endTag(subObj, it);\n                            }\n                            else {\n                                result += startTag(subObj, it, attrList, true);\n                            }\n                        }\n                    }\n                    else {\n                        result += startTag(subObj, it, attrList, false);\n                        result += parseJSONTextObject(subObj);\n                        result += endTag(subObj, it);\n                    }\n                }\n            }\n            result += parseJSONTextObject(jsonObj);\n\n            return result;\n        }\n\n        this.parseXmlString = function (xmlDocStr) {\n            var isIEParser = window.ActiveXObject || \"ActiveXObject\" in window;\n            if (xmlDocStr === undefined) {\n                return null;\n            }\n            var xmlDoc;\n            if (window.DOMParser) {\n                var parser = new window.DOMParser();\n                var parsererrorNS = null;\n                // IE9+ now is here\n                if (!isIEParser) {\n                    try {\n                        parsererrorNS = parser.parseFromString(\"INVALID\", \"text/xml\").childNodes[0].namespaceURI;\n                    }\n                    catch (err) {\n                        parsererrorNS = null;\n                    }\n                }\n                try {\n                    xmlDoc = parser.parseFromString(xmlDocStr, \"text/xml\");\n                    if (parsererrorNS != null && xmlDoc.getElementsByTagNameNS(parsererrorNS, \"parsererror\").length > 0) {\n                        //throw new Error('Error parsing XML: '+xmlDocStr);\n                        xmlDoc = null;\n                    }\n                }\n                catch (err) {\n                    xmlDoc = null;\n                }\n            }\n            else {\n                // IE :(\n                if (xmlDocStr.indexOf(\"<?\") == 0) {\n                    xmlDocStr = xmlDocStr.substr(xmlDocStr.indexOf(\"?>\") + 2);\n                }\n                xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n                xmlDoc.async = \"false\";\n                xmlDoc.loadXML(xmlDocStr);\n            }\n            return xmlDoc;\n        };\n\n        this.asArray = function (prop) {\n            if (prop instanceof Array)\n                return prop;\n            else\n                return [prop];\n        };\n\n        this.toXmlDateTime = function (dt) {\n            if (dt instanceof Date)\n                return dt.toISOString();\n            else if (typeof(dt) === 'number')\n                return new Date(dt).toISOString();\n            else\n                return null;\n        };\n\n        this.asDateTime = function (prop) {\n            if (typeof(prop) == \"string\") {\n                return fromXmlDateTime(prop);\n            }\n            else\n                return prop;\n        };\n\n        this.xml2json = function (xmlDoc) {\n            return parseDOMChildren(xmlDoc);\n        };\n\n        this.xml_str2json = function (xmlDocStr) {\n            var xmlDoc = this.parseXmlString(xmlDocStr);\n            if (xmlDoc != null)\n                return this.xml2json(xmlDoc);\n            else\n                return null;\n        };\n\n        this.json2xml_str = function (jsonObj) {\n            return parseJSONObject(jsonObj);\n        };\n\n        this.json2xml = function (jsonObj) {\n            var xmlDocStr = this.json2xml_str(jsonObj);\n            return this.parseXmlString(xmlDocStr);\n        };\n\n        this.getVersion = function () {\n            return VERSION;\n        };\n    }\n});\n"
  },
  {
    "__docId__": 511,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/datasources/SharePointDataSource.js",
    "memberof": null,
    "longname": "src/data/datasources/SharePointDataSource.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Hans van den Akker (mysim1)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\nimport extend                       from 'lodash';\nimport {provide}                    from '../../utils/di/Decorators.js';\nimport {ObjectHelper}               from '../../utils/ObjectHelper.js';\nimport {UrlParser}                  from '../../utils/request/UrlParser.js';\nimport {DataSource}                 from '../DataSource.js';\nimport {SharePoint}                 from './SharePoint/SPSoapAdapter/SharePoint.js';\nimport {SharePointSnapshot}         from './SharePoint/SharePointSnapshot.js';\n\nlet _currentUser;\n\n@provide(DataSource)\nexport class SharePointDataSource extends DataSource {\n\n    static get currentUser() {\n        return _currentUser;\n    }\n\n    static set currentUser(value) {\n        _currentUser = value;\n    }\n\n    /**\n     * @param {String} path Full path to resource in remote data storage.\n     * @return {SharePointDataSource} SharePointDataSource instance.\n     **/\n    constructor(path, options = {}) {\n        super(path);\n\n        this._dataReference = null;\n        this._callbacks = [];\n        this._onValueCallback = null;\n        this._onAddCallback = null;\n        this._onChangeCallback = null;\n        this._onMoveCallback = null;\n        this._onRemoveCallback = null;\n        this._originalPath = path;\n        this.options = options;\n\n        /* Bind all local methods to the current object instance, so we can refer to 'this'\n         * in the methods as expected, even when they're called from event handlers.        */\n        ObjectHelper.bindAllMethods(this, this);\n\n        /* Don't initialize this datasource when there is no path selected to retrieve data from. */\n        if (this.key().length > 0) {\n            let configuration = {\n                endPoint: this._originalPath,\n                listName: this.key()\n            };\n\n            let sharePointOptions = extend({}, this.options, configuration);\n\n            /* Bind the soap adapter against the datasource with given configuration */\n            this._dataReference = new SharePoint(sharePointOptions);\n        }\n    }\n\n    /**\n     * Indicate that the DataSource can be inherited when instantiating a list of models. By\n     * default we indicate false, which should trigger data model instantiation to create unique\n     * DataSource references to each model either in array or directly.\n     *\n     * If set to false, model updates trigger creation of a new DataSource instance. (default)\n     *\n     * @returns {Boolean} Whether the DataSource is inheritable.\n     */\n    get inheritable() {\n        return true;\n    }\n\n    /**\n     * Returns the full path to this dataSource's source on the remote storage provider.\n     * @returns {String} Full resource path.\n     */\n    toString() {\n        return this._originalPath;\n    }\n\n    /**\n     * Returns a dataSource reference to the given child branch of the current dataSource.\n     * @param {String} childName Child branch name.\n     * @param {Object} options Optional: additional options to pass to new DataSource instance.\n     * @returns {DataSource} New dataSource instance pointing to the given child branch.\n     */\n    child(childName, options = this.options) {\n        return SharePointDataSource.createFromChild(this._originalPath, childName, options);\n    }\n\n    static createFromChild(path, childName, options = {}) {\n        let childPath = '';\n        if (childName.indexOf('http') !== -1) {\n            childPath = childName.substring(1);\n        } else {\n            childPath += path + '/' + childName;\n        }\n        return new SharePointDataSource(childPath, options);\n    }\n\n    /**\n     * Returns the full URL to the path on the dataSource. Functionally identical to toString().\n     * @returns {String} Full resource path.\n     */\n    path() {\n        return this._originalPath;\n    }\n\n    /**\n     * Returns the name of the current branch in the path on the dataSource.\n     * @returns {String} Current branch name.\n     */\n    key() {\n        var url = UrlParser(this._originalPath);\n        if (!url) {\n            console.log('Invalid datasource path provided!');\n        }\n\n        if (url.path.length === 0) {\n            return '';\n        }\n        var pathElements = url.path.split('/');\n        if (pathElements.length === 1) {\n            return url.path;\n        } else {\n            return url.path.split('/').pop();\n        }\n    }\n\n    /**\n     * Writes newData to the path this dataSource was constructed with.\n     * @param {Object} newData Data to write to dataSource.\n     * @returns {Promise} Resolves when write to server is complete.\n     */\n    set(newData) {\n        this._dataReference.set(newData);\n        /* For now, we return a resolved promise in lack of better knowledge of when the data is synchronized */\n        return Promise.resolve();\n    }\n\n    /**\n     * Removes the object and all underlying children that this dataSource points to.\n     * @param {Object} object The current object, needed because of a SharePointDataSource-specific issue. Will be refactored out in the future.\n     * @returns {void}\n     */\n    remove(object) {\n        this._dataReference.remove(object);\n    }\n\n    /**\n     * Writes newData to the path this dataSource was constructed with, appended by a random UID generated by\n     * the dataSource.\n     * @param {Object} newData New data to append to dataSource.\n     * @returns {SharePointDataSource}\n     */\n    push(newData) {\n        let pushedData = this._dataReference.set(newData);\n        let newDataReference = SharePointDataSource.createFromChild(this._originalPath, `${pushedData['_temporary-identifier']}`);\n\n        /* We need to set the SharePoint data reference's cache to the data we just pushed, so it can immediately emit a value\n         * once the newly created model subscribes to its own changes. This is needed to make Arva-ds' PrioArray.add() method work. */\n        newDataReference._dataReference.cache = pushedData;\n        return newDataReference;\n    }\n\n    /**\n     * Writes newData with given priority (ordering) to the path this dataSource was constructed with.\n     * @param {Object} newData New data to set.\n     * @param {String|Number} priority Priority value by which the data should be ordered.\n     * @returns {Promise} Resolves when write to server is complete.\n     */\n    setWithPriority(newData, priority) {\n        newData.priority = priority;\n        this.set(newData);\n        /* For now, we return a resolved promise in lack of better knowledge of when the data is synchronized */\n        return Promise.resolve();\n    }\n\n    /**\n     * Sets the priority (ordering) of an object on a given dataSource.\n     * @param {String|Number} newPriority New priority value to order data by.\n     * @returns {void}\n     */\n    setPriority(newPriority) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Returns a new dataSource reference that will limit the subscription to only the first given amount items.\n     * @param {Number} amount Amount of items to limit the dataSource to.\n     * @returns {DataSource} New dataSource instance.\n     */\n    limitToFirst(amount) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Returns a new dataSource reference that will limit the subscription to only the last given amount items.\n     * @param {Number} amount Amount of items to limit the dataSource to.\n     * @returns {DataSource} New dataSource instance.\n     */\n    limitToLast(amount) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Authenticates all instances of this DataSource with the given OAuth provider and credentials.\n     * @param {String} provider google, facebook, github, or twitter\n     * @param {String|Object} credentials Access token string, or object with key/value pairs with e.g. OAuth 1.1 credentials.\n     * @param {Function} onComplete Callback, executed when login is completed either successfully or erroneously.\n     * On error, first argument is error message.\n     * On success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires.\n     * @param {Object} options Optional, additional client arguments, such as configuring session persistence.\n     * @returns {void}\n     */\n    authWithOAuthToken(provider, credentials, onComplete, options) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Authenticates all instances of this DataSource with a custom auth token or secret.\n     * @param {String} authToken Authentication token or secret.\n     * @param {Function} onComplete Callback, executed when login is completed either successfully or erroneously.\n     * On error, first argument is error message.\n     * On success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires.\n     * @param {Object} options Optional, additional client arguments, such as configuring session persistence.\n     * @returns {void}\n     */\n    authWithCustomToken(authToken, onComplete, options) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Authenticates all instances of this DataSource with the given email/password credentials.\n     * @param {String|Object} credentials Object with key/value pairs {email: 'value', password:'value'}.\n     * @param {Function} onComplete Callback, executed when login is completed either successfully or erroneously.\n     * On error, first argument is error message.\n     * On success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires.\n     * @param {Object} options Optional, additional client arguments, such as configuring session persistence.\n     * @returns {void}\n     */\n    authWithPassword(credentials, onComplete, options) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Authenticates all instances of this DataSource as an anonymous user.\n     * @param {Function} onComplete Callback, executed when login is completed either successfully or erroneously.\n     * On error, first argument is error message.\n     * On success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires.\n     * @param {Object} options Optional, additional client arguments, such as configuring session persistence.\n     * @returns {void}\n     */\n    authAnonymously(onComplete, options) {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Fetches the current user's authentication state.\n     * If the user is authenticated, returns an object containing at least the fields uid, provider, auth, and expires.\n     * If the user is not authenticated, returns null.\n     * @returns {Object|null} User auth object.\n     */\n    getAuth() {\n        return new Promise((resolve)=> {\n            if (!SharePointDataSource.currentUser) {\n                this._dataReference.getAuth((authData) => {\n                    SharePointDataSource.currentUser = authData;\n                    resolve(SharePointDataSource.currentUser);\n                });\n            } else {\n                resolve(SharePointDataSource.currentUser);\n            }\n        });\n    }\n\n    /**\n     * Logs out from the datasource, allowing to re-authenticate at a later time.\n     * @returns {void}\n     */\n    unauth() {\n        throw new Error('Not implemented');\n    }\n\n    /**\n     * Subscribe to an event emitted by the DataSource.\n     * @param {String} event Event type to subscribe to. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed'.\n     * @param {Function} handler Function to call when the subscribed event is emitted.\n     * @param {Object} context Context to set 'this' to when calling the handler function.\n     */\n    on(event, handler, context) {\n        let callback = this._callbacks[handler] = (data) => {\n            let newChildSnapshot = new SharePointSnapshot(data, this);\n            handler(newChildSnapshot);\n        };\n        this._dataReference.on(event, callback, context);\n    }\n\n    /**\n     * Subscribe to an event emitted by the DataSource once, and then immediately unsubscribe.\n     * @param {String} event Event type to subscribe to. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed'.\n     * @param {Function} handler Function to call when the subscribed event is emitted.\n     * @param {Object} context Context to set 'this' to when calling the handler function.\n     */\n    once(event, handler, context = this) {\n        let onceWrapper = function () {\n            handler.call(context, ...arguments);\n            this.off(event, onceWrapper);\n        }.bind(this);\n\n        return this.on(event, onceWrapper, this);\n    }\n\n    /**\n     * Unsubscribe to a previously subscribed event. If no handler or context is given, all handlers for\n     * the given event are removed. If no parameters are given at all, all event types will have their handlers removed.\n     * @param {String} event Event type to unsubscribe from. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed'.\n     * @param {Function} handler Optional: Function that was used in previous subscription.\n     */\n    off(event, handler) {\n        let callback = this._callbacks[handler];\n        this._dataReference.off(event, callback);\n    }\n\n    /**\n     * Sets the callback triggered when dataSource updates the data.\n     * @param {Function} callback Callback function to call when the subscribed data value changes.\n     * @returns {void}\n     **/\n    setValueChangedCallback(callback) {\n        this._onValueCallback = (data) => {\n            let newChildSnapshot = new SharePointSnapshot(data, this);\n            callback(newChildSnapshot);\n        };\n        this._dataReference.on('value', this._onValueCallback);\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource updates the data.\n     * @returns {void}\n     **/\n    removeValueChangedCallback() {\n        if (this._onValueCallback) {\n            this._dataReference.off('value', this._onValueCallback);\n            this._onValueCallback = null;\n        }\n    }\n\n    /**\n     * Set the callback triggered when dataSource adds a data element.\n     * @param {Function} callback Callback function to call when a new data child is added.\n     * @returns {void}\n     **/\n    setChildAddedCallback(callback) {\n        this._onAddCallback = (data, previousSiblingId) => {\n            let newChildSnapshot = new SharePointSnapshot(data, this);\n            callback(newChildSnapshot, previousSiblingId);\n        };\n        this._dataReference.on('child_added', this._onAddCallback);\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource adds a data element.\n     * @returns {void}\n     **/\n    removeChildAddedCallback() {\n        if (this._onAddCallback) {\n            this._dataReference.off('child_added', this._onAddCallback);\n            this._onAddCallback = null;\n        }\n    }\n\n    /**\n     * Set the callback triggered when dataSource changes a data element.\n     * @param {Function} callback Callback function to call when a child is changed.\n     * @returns {void}\n     **/\n    setChildChangedCallback(callback) {\n        this._onChangeCallback = (data, previousSiblingId) => {\n            let newChildSnapshot = new SharePointSnapshot(data, this);\n            callback(newChildSnapshot, previousSiblingId);\n        };\n        this._dataReference.on('child_changed', this._onChangeCallback);\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource changes a data element.\n     * @returns {void}\n     **/\n    removeChildChangedCallback() {\n        if (this._onChangeCallback) {\n            this._dataReference.off('child_changed', this._onChangeCallback);\n            this._onChangeCallback = null;\n        }\n    }\n\n    /**\n     * Set the callback triggered when dataSource moves a data element.\n     * @param {Function} callback Callback function to call when a child is moved.\n     * @returns {void}\n     **/\n    setChildMovedCallback(callback) {\n        console.warn('Not implemented');\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource moves a data element.\n     * @returns {void}\n     **/\n    removeChildMovedCallback() {\n        console.warn('Not implemented');\n    }\n\n    /**\n     * Resolves when the DataSource is synchronized to the server\n     * @returns {Promise} Resolves when the DataSource is synchronized\n     */\n    synced() {\n        console.warn('Not implemented.');\n    }\n\n    /**\n     * Set the callback triggered when dataSource removes a data element.\n     * @param {Function} callback Callback function to call when a child is removed.\n     * @returns {void}\n     **/\n    setChildRemovedCallback(callback) {\n        this._onRemoveCallback = (data) => {\n            let removedChildSnapshot = new SharePointSnapshot(data, this);\n            callback(removedChildSnapshot);\n        };\n\n        this._dataReference.on('child_removed', this._onRemoveCallback);\n    }\n\n    /**\n     * Removes the callback set to trigger when dataSource removes a data element.\n     * @returns {void}\n     **/\n    removeChildRemovedCallback() {\n        if (this._onRemoveCallback) {\n            this._dataReference.off('child_removed', this._onRemoveCallback);\n            this._onRemoveCallback = null;\n        }\n    }\n\n    /**\n     * Dummy method that just returns an empty string.\n     * @returns {String} Empty string.\n     */\n    root() {\n        return '';\n    }\n\n    _notifyOnValue(snapshot) {\n        if (this._onValueCallback) {\n            this._onValueCallback(snapshot);\n        }\n    }\n\n    _ParseSelector(path, endPoint) {\n\n    }\n\n    _ParsePath(path, endPoint) {\n\n        var url = UrlParser(path);\n        if (!url) {\n            console.log('Invalid datasource path provided!');\n        }\n\n        var pathParts = url.path.split('/');\n        var newPath = url.protocol + '://' + url.host + '/';\n        for (var i = 0; i < pathParts.length; i++) {\n            newPath += pathParts[i] + '/';\n        }\n        newPath += endPoint;\n        return newPath;\n    }\n}"
  },
  {
    "__docId__": 512,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SharePointDataSource",
    "memberof": "src/data/datasources/SharePointDataSource.js",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "access": null,
    "export": true,
    "importPath": "./src/data/datasources/SharePointDataSource.js",
    "importStyle": "{SharePointDataSource}",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/data/DataSource.js~DataSource"
    ]
  },
  {
    "__docId__": 513,
    "kind": "get",
    "static": true,
    "variation": null,
    "name": "currentUser",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource.currentUser",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 514,
    "kind": "set",
    "static": true,
    "variation": null,
    "name": "currentUser",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource.currentUser",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 515,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#constructor",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Full path to resource in remote data storage."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SharePointDataSource"
      ],
      "spread": false,
      "description": "SharePointDataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 516,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataReference",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_dataReference",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 517,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_callbacks",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_callbacks",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 518,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onValueCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_onValueCallback",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 519,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onAddCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_onAddCallback",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 520,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onChangeCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_onChangeCallback",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 521,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onMoveCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_onMoveCallback",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 522,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onRemoveCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_onRemoveCallback",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 523,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_originalPath",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_originalPath",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 524,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#options",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 525,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataReference",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_dataReference",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 526,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "inheritable",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#inheritable",
    "access": null,
    "description": "Indicate that the DataSource can be inherited when instantiating a list of models. By\ndefault we indicate false, which should trigger data model instantiation to create unique\nDataSource references to each model either in array or directly.\n\nIf set to false, model updates trigger creation of a new DataSource instance. (default)",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} Whether the DataSource is inheritable."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the DataSource is inheritable."
    },
    "type": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 527,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toString",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#toString",
    "access": null,
    "description": "Returns the full path to this dataSource's source on the remote storage provider.",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} Full resource path."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Full resource path."
    },
    "generator": false
  },
  {
    "__docId__": 528,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "child",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#child",
    "access": null,
    "description": "Returns a dataSource reference to the given child branch of the current dataSource.",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance pointing to the given child branch."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "childName",
        "description": "Child branch name."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional: additional options to pass to new DataSource instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance pointing to the given child branch."
    },
    "generator": false
  },
  {
    "__docId__": 529,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "createFromChild",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource.createFromChild",
    "access": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "childName",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 530,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "path",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#path",
    "access": null,
    "description": "Returns the full URL to the path on the dataSource. Functionally identical to toString().",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} Full resource path."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Full resource path."
    },
    "generator": false
  },
  {
    "__docId__": 531,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "key",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#key",
    "access": null,
    "description": "Returns the name of the current branch in the path on the dataSource.",
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} Current branch name."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Current branch name."
    },
    "generator": false
  },
  {
    "__docId__": 532,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#set",
    "access": null,
    "description": "Writes newData to the path this dataSource was constructed with.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Resolves when write to server is complete."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newData",
        "description": "Data to write to dataSource."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves when write to server is complete."
    },
    "generator": false
  },
  {
    "__docId__": 533,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#remove",
    "access": null,
    "description": "Removes the object and all underlying children that this dataSource points to.",
    "lineNumber": 151,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "The current object, needed because of a SharePointDataSource-specific issue. Will be refactored out in the future."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 534,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "push",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#push",
    "access": null,
    "description": "Writes newData to the path this dataSource was constructed with, appended by a random UID generated by\nthe dataSource.",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{SharePointDataSource}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newData",
        "description": "New data to append to dataSource."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SharePointDataSource"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 535,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setWithPriority",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#setWithPriority",
    "access": null,
    "description": "Writes newData with given priority (ordering) to the path this dataSource was constructed with.",
    "lineNumber": 177,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Resolves when write to server is complete."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "newData",
        "description": "New data to set."
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "priority",
        "description": "Priority value by which the data should be ordered."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves when write to server is complete."
    },
    "generator": false
  },
  {
    "__docId__": 536,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setPriority",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#setPriority",
    "access": null,
    "description": "Sets the priority (ordering) of an object on a given dataSource.",
    "lineNumber": 189,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "newPriority",
        "description": "New priority value to order data by."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 537,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "limitToFirst",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#limitToFirst",
    "access": null,
    "description": "Returns a new dataSource reference that will limit the subscription to only the first given amount items.",
    "lineNumber": 198,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "Amount of items to limit the dataSource to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 538,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "limitToLast",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#limitToLast",
    "access": null,
    "description": "Returns a new dataSource reference that will limit the subscription to only the last given amount items.",
    "lineNumber": 207,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DataSource} New dataSource instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "amount",
        "description": "Amount of items to limit the dataSource to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DataSource"
      ],
      "spread": false,
      "description": "New dataSource instance."
    },
    "generator": false
  },
  {
    "__docId__": 539,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authWithOAuthToken",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#authWithOAuthToken",
    "access": null,
    "description": "Authenticates all instances of this DataSource with the given OAuth provider and credentials.",
    "lineNumber": 221,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "provider",
        "description": "google, facebook, github, or twitter"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "credentials",
        "description": "Access token string, or object with key/value pairs with e.g. OAuth 1.1 credentials."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "onComplete",
        "description": "Callback, executed when login is completed either successfully or erroneously.\nOn error, first argument is error message.\nOn success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional, additional client arguments, such as configuring session persistence."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 540,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authWithCustomToken",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#authWithCustomToken",
    "access": null,
    "description": "Authenticates all instances of this DataSource with a custom auth token or secret.",
    "lineNumber": 234,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "authToken",
        "description": "Authentication token or secret."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "onComplete",
        "description": "Callback, executed when login is completed either successfully or erroneously.\nOn error, first argument is error message.\nOn success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional, additional client arguments, such as configuring session persistence."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 541,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authWithPassword",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#authWithPassword",
    "access": null,
    "description": "Authenticates all instances of this DataSource with the given email/password credentials.",
    "lineNumber": 247,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "credentials",
        "description": "Object with key/value pairs {email: 'value', password:'value'}."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "onComplete",
        "description": "Callback, executed when login is completed either successfully or erroneously.\nOn error, first argument is error message.\nOn success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional, additional client arguments, such as configuring session persistence."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 542,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "authAnonymously",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#authAnonymously",
    "access": null,
    "description": "Authenticates all instances of this DataSource as an anonymous user.",
    "lineNumber": 259,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "onComplete",
        "description": "Callback, executed when login is completed either successfully or erroneously.\nOn error, first argument is error message.\nOn success, the first argument is null, and the second argument is an object containing the fields uid, provider, auth, and expires."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Optional, additional client arguments, such as configuring session persistence."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 543,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAuth",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#getAuth",
    "access": null,
    "description": "Fetches the current user's authentication state.\nIf the user is authenticated, returns an object containing at least the fields uid, provider, auth, and expires.\nIf the user is not authenticated, returns null.",
    "lineNumber": 269,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object|null} User auth object."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object",
        "null"
      ],
      "spread": false,
      "description": "User auth object."
    },
    "generator": false
  },
  {
    "__docId__": 544,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unauth",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#unauth",
    "access": null,
    "description": "Logs out from the datasource, allowing to re-authenticate at a later time.",
    "lineNumber": 286,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 545,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "on",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#on",
    "access": null,
    "description": "Subscribe to an event emitted by the DataSource.",
    "lineNumber": 296,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event type to subscribe to. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Function to call when the subscribed event is emitted."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Context to set 'this' to when calling the handler function."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 546,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "once",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#once",
    "access": null,
    "description": "Subscribe to an event emitted by the DataSource once, and then immediately unsubscribe.",
    "lineNumber": 310,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event type to subscribe to. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Function to call when the subscribed event is emitted."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "Context to set 'this' to when calling the handler function."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 547,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "off",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#off",
    "access": null,
    "description": "Unsubscribe to a previously subscribed event. If no handler or context is given, all handlers for\nthe given event are removed. If no parameters are given at all, all event types will have their handlers removed.",
    "lineNumber": 325,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "Event type to unsubscribe from. Allowed values are: 'value', 'child_changed', 'child_added', 'child_removed'."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Optional: Function that was used in previous subscription."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 548,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setValueChangedCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#setValueChangedCallback",
    "access": null,
    "description": "Sets the callback triggered when dataSource updates the data.",
    "lineNumber": 335,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when the subscribed data value changes."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 549,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onValueCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_onValueCallback",
    "access": null,
    "description": null,
    "lineNumber": 336,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 550,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeValueChangedCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#removeValueChangedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource updates the data.",
    "lineNumber": 347,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 551,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onValueCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_onValueCallback",
    "access": null,
    "description": null,
    "lineNumber": 350,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 552,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setChildAddedCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#setChildAddedCallback",
    "access": null,
    "description": "Set the callback triggered when dataSource adds a data element.",
    "lineNumber": 359,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when a new data child is added."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 553,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onAddCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_onAddCallback",
    "access": null,
    "description": null,
    "lineNumber": 360,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 554,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeChildAddedCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#removeChildAddedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource adds a data element.",
    "lineNumber": 371,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 555,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onAddCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_onAddCallback",
    "access": null,
    "description": null,
    "lineNumber": 374,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 556,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setChildChangedCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#setChildChangedCallback",
    "access": null,
    "description": "Set the callback triggered when dataSource changes a data element.",
    "lineNumber": 383,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when a child is changed."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 557,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onChangeCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_onChangeCallback",
    "access": null,
    "description": null,
    "lineNumber": 384,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 558,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeChildChangedCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#removeChildChangedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource changes a data element.",
    "lineNumber": 395,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 559,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onChangeCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_onChangeCallback",
    "access": null,
    "description": null,
    "lineNumber": 398,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 560,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setChildMovedCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#setChildMovedCallback",
    "access": null,
    "description": "Set the callback triggered when dataSource moves a data element.",
    "lineNumber": 407,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when a child is moved."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 561,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeChildMovedCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#removeChildMovedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource moves a data element.",
    "lineNumber": 415,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 562,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "synced",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#synced",
    "access": null,
    "description": "Resolves when the DataSource is synchronized to the server",
    "lineNumber": 423,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Resolves when the DataSource is synchronized"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolves when the DataSource is synchronized"
    },
    "generator": false
  },
  {
    "__docId__": 563,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setChildRemovedCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#setChildRemovedCallback",
    "access": null,
    "description": "Set the callback triggered when dataSource removes a data element.",
    "lineNumber": 432,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "Callback function to call when a child is removed."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 564,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onRemoveCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_onRemoveCallback",
    "access": null,
    "description": null,
    "lineNumber": 433,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 565,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeChildRemovedCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#removeChildRemovedCallback",
    "access": null,
    "description": "Removes the callback set to trigger when dataSource removes a data element.",
    "lineNumber": 445,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 566,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_onRemoveCallback",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_onRemoveCallback",
    "access": null,
    "description": null,
    "lineNumber": 448,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 567,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "root",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#root",
    "access": null,
    "description": "Dummy method that just returns an empty string.",
    "lineNumber": 456,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} Empty string."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Empty string."
    },
    "generator": false
  },
  {
    "__docId__": 568,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_notifyOnValue",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_notifyOnValue",
    "access": null,
    "description": null,
    "lineNumber": 460,
    "undocument": true,
    "params": [
      {
        "name": "snapshot",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 569,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_ParseSelector",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_ParseSelector",
    "access": null,
    "description": null,
    "lineNumber": 466,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "endPoint",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 570,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_ParsePath",
    "memberof": "src/data/datasources/SharePointDataSource.js~SharePointDataSource",
    "longname": "src/data/datasources/SharePointDataSource.js~SharePointDataSource#_ParsePath",
    "access": null,
    "description": null,
    "lineNumber": 470,
    "undocument": true,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "endPoint",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 571,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/local/LocalModel.js",
    "memberof": null,
    "longname": "src/data/local/LocalModel.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by Manuel on 22/07/16.\n */\n\nimport {Model}      from \"../../core/Model\";\nimport {DataSource} from \"../DataSource.js\";\n\nexport class LocalModel extends Model {\n\n    get id() {\n        return this._id;\n    }\n\n    set id(value) {\n        this._id = value;\n    }\n\n    _buildFromDataSource() {\n    }\n\n    constructor(id, data) {\n        if(id === null) { id = `${Math.random() * 100000}`; }\n        super(id, data, {dataSource: { setWithPriority: async function(){} }});\n        this.id = id;\n        this._dataSource.ready = true;\n        this._dataSource.remove = () => {};\n    }\n}\n"
  },
  {
    "__docId__": 572,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "LocalModel",
    "memberof": "src/data/local/LocalModel.js",
    "longname": "src/data/local/LocalModel.js~LocalModel",
    "access": null,
    "export": true,
    "importPath": "./src/data/local/LocalModel.js",
    "importStyle": "{LocalModel}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/core/Model.js~Model"
    ]
  },
  {
    "__docId__": 573,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/data/local/LocalModel.js~LocalModel",
    "longname": "src/data/local/LocalModel.js~LocalModel#id",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 574,
    "kind": "set",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/data/local/LocalModel.js~LocalModel",
    "longname": "src/data/local/LocalModel.js~LocalModel#id",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 575,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_id",
    "memberof": "src/data/local/LocalModel.js~LocalModel",
    "longname": "src/data/local/LocalModel.js~LocalModel#_id",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 576,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildFromDataSource",
    "memberof": "src/data/local/LocalModel.js~LocalModel",
    "longname": "src/data/local/LocalModel.js~LocalModel#_buildFromDataSource",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 577,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/data/local/LocalModel.js~LocalModel",
    "longname": "src/data/local/LocalModel.js~LocalModel#constructor",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 578,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/data/local/LocalModel.js~LocalModel",
    "longname": "src/data/local/LocalModel.js~LocalModel#id",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 579,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/data/local/LocalPrioritisedArray.js",
    "memberof": null,
    "longname": "src/data/local/LocalPrioritisedArray.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by Manuel on 22/07/16.\n */\nimport {PrioritisedArray} from \"../PrioritisedArray\";\n\nexport class LocalPrioritisedArray extends PrioritisedArray {\n    constructor(dataType) {\n        super(dataType, {});\n        this._dataSource = {ready: true};\n    }\n\n    _buildFromDataSource() {\n    }\n}"
  },
  {
    "__docId__": 580,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "LocalPrioritisedArray",
    "memberof": "src/data/local/LocalPrioritisedArray.js",
    "longname": "src/data/local/LocalPrioritisedArray.js~LocalPrioritisedArray",
    "access": null,
    "export": true,
    "importPath": "./src/data/local/LocalPrioritisedArray.js",
    "importStyle": "{LocalPrioritisedArray}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/data/PrioritisedArray.js~PrioritisedArray"
    ]
  },
  {
    "__docId__": 581,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/data/local/LocalPrioritisedArray.js~LocalPrioritisedArray",
    "longname": "src/data/local/LocalPrioritisedArray.js~LocalPrioritisedArray#constructor",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "dataType",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 582,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataSource",
    "memberof": "src/data/local/LocalPrioritisedArray.js~LocalPrioritisedArray",
    "longname": "src/data/local/LocalPrioritisedArray.js~LocalPrioritisedArray#_dataSource",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 583,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_buildFromDataSource",
    "memberof": "src/data/local/LocalPrioritisedArray.js~LocalPrioritisedArray",
    "longname": "src/data/local/LocalPrioritisedArray.js~LocalPrioritisedArray#_buildFromDataSource",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 584,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/layout/Decorators.js",
    "memberof": null,
    "longname": "src/layout/Decorators.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Hans van den Akker (mysim1)\n @license NPOSL-3.0\n @copyright Bizboard, 2016\n\n */\nimport merge                    from 'lodash/merge.js';\nimport extend                   from 'lodash/extend.js';\n\nimport AnimationController      from 'famous-flex/AnimationController.js';\nimport LayoutUtility            from 'famous-flex/LayoutUtility.js';\nimport Easing                   from 'famous/transitions/Easing.js';\n\nimport {Utils}                    from '../utils/view/Utils.js';\n\nfunction prepDecoratedRenderable(viewOrRenderable, renderableName, descriptor) {\n    /* This function can also be called as prepDecoratedRenderable(renderable) */\n    if (!renderableName && !descriptor) {\n        let renderable = viewOrRenderable;\n        renderable.decorations = renderable.decorations || {};\n        return renderable;\n    }\n    let view = viewOrRenderable;\n\n    if (!view.renderableConstructors) {\n        view.renderableConstructors = new Map();\n    }\n\n    let constructors = view.renderableConstructors;\n\n    /* Because the inherited views share the same prototype, we'll have to split it up depending on which subclass we're referring out */\n    let specificRenderableConstructors = constructors.get(view.constructor);\n    if (!specificRenderableConstructors) {\n        specificRenderableConstructors = constructors.set(view.constructor, {}).get(view.constructor);\n    }\n\n    if (!specificRenderableConstructors[renderableName]) {\n        /* Getters have a get() method on the descriptor, class properties have an initializer method.\n         * get myRenderable(){ return new Surface() } => descriptor.get();\n         * myRenderable = new Surface(); => descriptor.initializer();\n         */\n        if (descriptor.get) {\n            specificRenderableConstructors[renderableName] = descriptor.get;\n        } else if (descriptor.initializer) {\n            specificRenderableConstructors[renderableName] = descriptor.initializer;\n        }\n    }\n    let constructor = specificRenderableConstructors[renderableName];\n    if (!constructor.decorations) {\n        constructor.decorations = {descriptor: descriptor};\n    }\n\n    return constructor;\n}\n\n/**\n * Extracts a decorations object\n *\n * @param {View} prototype\n * @returns {Object} The decorations for the prototype\n */\nfunction prepPrototypeDecorations(prototype) {\n\n    /* To prevent inherited classes from taking each others class-level decorators, we need to store these decorations in\n     * a map, similarly to function preparing a decorated renderable\n     */\n    if (!prototype.decorationsMap) {\n        prototype.decorationsMap = new Map();\n    }\n\n    let {decorationsMap} = prototype;\n\n    let decorations = decorationsMap.get(prototype.constructor);\n    if (!decorations) {\n        decorations = decorationsMap.set(prototype.constructor, {}).get(prototype.constructor);\n    }\n\n    /* Return the class' prototype, so it can be extended by the decorator */\n    return decorations;\n}\n\n/**\n * Describes a set of decorators used for layouting of a renderable in a View.\n */\nexport const layout = {\n\n\n    /**\n     * Merely marks a view property as a decorated renderable, which allows it to be rendered.\n     * Use this in combination with a @layout.custom decorator on the view in which this renderable resides.\n     *\n     * @example\n     * @layout.renderable\n     * renderable = new Surface();\n     *\n     * @returns {Function} A decorator function\n     */\n    renderable: function () {\n        return function (view, renderableName, descriptor) {\n            prepDecoratedRenderable(view, renderableName, descriptor);\n        }\n    },\n\n    /**\n     * Marks the renderable to cover the entire screen. Translate can also be specified on such a renderable.\n     *\n     * @example\n     * @layout.fullSize()\n     * // View will have a red background\n     * background = new Surface({properties: {backgroundColor: 'red'}});\n     *\n     * @returns {Function} A decorator function\n     */\n    fullSize: function () {\n        return function (view, renderableName, descriptor) {\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            renderable.decorations.fullSize = true;\n        }\n    },\n\n    /**\n     * Specifies the space that should come before the docked renderable. Useful when not specifying the size in the\n     * layout.dock function. Note that the space does not appear if there isn't any renderable with a size greater than\n     * zero before it.\n     *\n     * @example\n     * // there's a 20px space before this box\n     * @layout.dockSpace(20)\n     * @layout.size(100, 100)\n     * @layout.dock.left()\n     * box = new Surface({properties: {backgroundColor: 'red'}});\n     *\n     * @param {Number} space The space that is inserted before the renderable.\n     * @returns {Function} A decorator function\n     */\n    dockSpace: function (space) {\n        return function (view, renderableName, descriptor) {\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            // Todo refactor also the z index to the dock\n            renderable.decorations.dock = renderable.decorations.dock ? extend(renderable.decorations.dock, {space}) : {space};\n        };\n    },\n\n    /**\n     * Internal function to do docking\n     *\n     * @param dockMethod\n     * @param size\n     * @param space\n     * @param zIndex\n     * @returns {Function}\n     */\n    _dockTo: function (dockMethod, size, space = 0, zIndex) {\n        return function (view, renderableName, descriptor) {\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n\n            if (renderable.decorations.dock) {\n                space = space || renderable.decorations.dock.space;\n            }\n\n            let width = dockMethod === 'left' || dockMethod === 'right' ? size : undefined;\n            let height = dockMethod === 'top' || dockMethod === 'bottom' ? size : undefined;\n\n            let twoDimensionalSize = [width, height];\n            // Todo refactor also the z index to the dock, probably\n            renderable.decorations.dock = {space, dockMethod, size: twoDimensionalSize};\n\n            if (!renderable.decorations.translate) {\n                renderable.decorations.translate = [0, 0, 0];\n            }\n            if (zIndex) {\n                renderable.decorations.translate[2] = zIndex;\n            }\n        };\n    },\n\n    dock: {\n        /**\n         * Docks the renderable to the left.\n         * When using both a docked size and the layout.size decorator, then that layout.size becomes the actual inner size.\n         * The renderable can then be stickd within the docking area with origin and align. When combined with align, treats\n         * the context size the docking size.\n         * When using layout.size without specifying a docked size, it will use that size as docking size. Useful for\n         * automatic sizing when parent defines true size and orthogonal size (e.g. height for dock 'left') has to be defined.\n         *\n         * @example\n         * @layout.dock.left(30, 0, 10)\n         * @layout.size(15, undefined)\n         * @layout.origin(0.5, 0)\n         * @layout.align(0.5, 0)\n         * dockedRenderable = new Surface({properties: {backgroundColor: 'red'}});\n         *\n         *\n         * @param {Number|Function} [size]. The size of the renderable in the one dimension that is being docked, e.g.\n         * dock left or right will be width, whereas dock top or bottom will result in height. For more information about\n         * different variations, see layout.size.\n         * @param {Number} [space]. Any space that should be inserted before the docked renderable\n         * @param {Number} [zIndex]. DEPRECATED: Use translate(0, 0, zIndex) instead.\n         * @returns {Function} A decorator function\n         */\n        left: function () {\n            return layout._dockTo('left', ...arguments)\n        },\n\n        /**\n         * Docks the renderable to the right.\n         * When using both a docked size and the layout.size decorator, then that layout.size becomes the actual inner size.\n         * The renderable can then be stickd within the docking area with origin and align. When combined with align, treats\n         * the context size the docking size.\n         * When using layout.size without specifying a docked size, it will use that size as docking size. Useful for\n         * automatic sizing when parent defines true size and orthogonal size (e.g. height for dock 'left') has to be defined.\n         *\n         * @example\n         * @layout.dock.right(30, 0, 10)\n         * @layout.size(15, undefined)\n         * @layout.origin(0.5, 0)\n         * @layout.align(0.5, 0)\n         * dockedRenderable = new Surface({properties: {backgroundColor: 'red'}});\n         *\n         * @param {Number|Function} [size]. The size of the renderable in the one dimension that is being docked, e.g.\n         * dock left or right will be width, whereas dock top or bottom will result in height. For more information about\n         * different variations, see layout.size.\n         * @param {Number} [space]. Any space that should be inserted before the docked renderable\n         * @param {Number} [zIndex]. DEPRECATED: Use translate(0, 0, zIndex) instead.\n         * @returns {Function} A decorator function\n         */\n        right: function () {\n            return layout._dockTo('right', ...arguments)\n        },\n\n        /**\n         *\n         * Docks the renderable to the top.\n         * When using both a docked size and the layout.size decorator, then that layout.size becomes the actual inner size.\n         * The renderable can then be stickd within the docking area with origin and align. When combined with align, treats\n         * the context size the docking size.\n         * When using layout.size without specifying a docked size, it will use that size as docking size. Useful for\n         * automatic sizing when parent defines true size and orthogonal size (e.g. height for dock 'left') has to be defined.\n         *\n         * @example\n         * @layout.dock.top(30, 0, 10)\n         * @layout.size(15, undefined)\n         * @layout.origin(0.5, 0)\n         * @layout.align(0.5, 0)\n         * dockedRenderable = new Surface({properties: {backgroundColor: 'red'}});\n         *\n         *\n         * @param {Number|Function} [size]. The size of the renderable in the one dimension that is being docked, e.g.\n         * dock left or right will be width, whereas dock top or bottom will result in height. For more information about\n         * different variations, see layout.size.\n         * @param {Number} [space = 0]. Any space that should be inserted before the docked renderable\n         * @param {Number} [zIndex = 0]. DEPRECATED: Use translate(0, 0, zIndex) instead.\n         * @returns {Function} A decorator function\n         */\n        top: function () {\n            return layout._dockTo('top', ...arguments)\n        },\n\n        /**\n         *\n         * Docks the renderable to the bottom.\n         * When using both a docked size and the layout.size decorator, then that layout.size becomes the actual inner size.\n         * The renderable can then be stickd within the docking area with origin and align. When combined with align, treats\n         * the context size the docking size.\n         * When using layout.size without specifying a docked size, it will use that size as docking size. Useful for\n         * automatic sizing when parent defines true size and orthogonal size (e.g. height for dock 'left') has to be defined.\n         *\n         * @example\n         * @layout.dock.bottom(30, 0, 10)\n         * @layout.size(15, undefined)\n         * @layout.origin(0.5, 0)\n         * @layout.align(0.5, 0)\n         * dockedRenderable = new Surface({properties: {backgroundColor: 'red'}});\n         *\n         *\n         * @param {Number|Function} [size]. The size of the renderable in the one dimension that is being docked, e.g.\n         * dock left or right will be width, whereas dock top or bottom will result in height. For more information about\n         * different variations, see layout.size.\n         * @param {Number} [space = 0]. Any space that should be inserted before the docked renderable\n         * @param {Number} [zIndex = 0]. DEPRECATED: Use translate(0, 0, zIndex) instead.\n         * @returns {Function} A decorator function\n         */\n        bottom: function () {\n            return layout._dockTo('bottom', ...arguments)\n        },\n\n        /**\n         * Fills the space that is left after the docking with this renderable.\n         *\n         * @example\n         * When using layout.size, it will use that size as an inner size. This works similarly to other docking, from\n         * where translate, size, origin, align, etc can be specified.\n         *\n         * @layout.dock.fill()\n         * filledRenderable = new Surface({properties: {backgroundColor: 'red'}});\n         *\n         * @returns {Function} A decorator function\n         */\n        fill: function () {\n            return layout._dockTo('fill', ...arguments)\n        },\n        /**\n         * Marks the renderable as not being docked anymore. Useful when dynamically changing decorations through\n         * this.decorateRenderable or this.setRenderableFlowState\n         *\n         * @example\n         * @layout.dock.fill()\n         * @flow.stateStep('nonFilled', layout.dock.none(), layout.size(100, 100))\n         * filledRenderable = new Surface({properties: {backgroundColor: 'red'}});\n         *\n         * @returns {Function} A decorator function\n         */\n        none: function () {\n            return function (view, renderableName, descriptor) {\n                let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n                renderable.decorations.disableDock = true;\n            }\n        }\n\n    },\n\n    /**\n     * Makes the renderable allowed to be dragged around. this.renderables[name] refers to a RenderNode containing this\n     * draggable along with the renderable itself.\n     *\n     * @example\n     * @layout.draggable({xRange: [0, 100}, yRange: [0, 200]})\n     * @layout.size(100, 100)\n     * // Makes a draggable square that is red\n     * draggableRenderable = new Surface({properties: {backgroundColor: 'red'});\n     *\n     * @param {Object} [draggableOptions]. Same options that can be passed to a Famous Draggable.\n     * @param {Number} [options.snapX] grid width for snapping during drag\n     * @param {Number} [options.snapY] grid height for snapping during drag\n     * @param {Array.Number} [options.xRange] maxmimum [negative, positive] x displacement from start of drag\n     * @param {Array.Number} [options.yRange] maxmimum [negative, positive] y displacement from start of drag\n     * @param {Number} [options.scale] one pixel of input motion translates to this many pixels of output drag motion\n     * @param {Number} [options.projection] User should set to Draggable._direction.x or\n     *    Draggable._direction.y to constrain to one axis.\n     * @returns {Function}\n     */\n    draggable: function (draggableOptions = {}) {\n        return function (view, renderableName, descriptor) {\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            renderable.decorations.draggableOptions = draggableOptions;\n        }\n    },\n\n    /**\n     * Makes the renderable swipable with physics-like velocity after the dragging is released. Emits event\n     * 'thresholdReached' with arguments ('x'|'y', 0|1) when any thresholds have been reached. this.renderables[name]\n     * now refers to a a RenderNode containing a positionModifier along with the renderable itself.\n     *\n     * @example\n     * @layout.size(100, 100)\n     * @layout.swipable({xRange: [0, 100], snapX: true})\n     * //Make a red box that can slide to the right\n     * swipable = new Surface({properties: {backgroundColor: 'red'});\n     *\n     * @param {Object} options\n     * @param {Boolean} [options.snapX] Whether to snap to the x axis\n     * @param {Boolean} [options.snapY] Whether to snap to the Y axis\n     * @param {Boolean} [options.enabled] Whether the swipable should be initially enabled\n     * @param {Array.Number} [options.xThreshold] Two values of the thresholds that trigger the thresholdReached event with\n     * argument 'x' and second argument 0 or 1, depending on the direction.\n     * Specify undefined in one of them to disable threshold to that direction.\n     * @param {Array.Number} [options.yThreshold] Two values of the thresholds that trigger the thresholdReached event with\n     * argument 'y'  and second argument 0 or 1, depending on the direction.\n     * Specify undefined in one of them to disable threshold to that direction.\n     * @returns {Function} A decorator function\n     */\n    swipable: function (options) {\n        return function (view, renderableName, descriptor) {\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            renderable.decorations.swipableOptions = options;\n        }\n    },\n\n\n    /**\n     * Clips the renderable by creating another DOM-element with overflow: hidden. Internally, creates a Famous\n     * ContainerSurface.\n     * The two size parameters can either be a number or undefined (equals the context size).\n     *\n     * @example\n     * @layout.size(40,40)\n     * @layout.clip(20, 20)\n     * // Shows a quarter of a circle\n     * renderable = new Surface({properties: {backgroundColor: 'red', borderRadius: '50%'});\n     *\n     * @param {Number} width The width of the ContainerSurface\n     * @param {Number} heigh The height of the ContainerSurface\n     * @param {Object} [properties]. Properties that will be passed to the newly created parent DOM-element.\n     * If specified, merged with {overflow: 'hidden'}\n     * @returns {Function} A decorator function\n     */\n\n    /**\n     * Specifies the size of the renderable. For both of the parameters, sizes can be interpreted as follows:\n     *\n     * If specified as a function, then the argument passed is the context size of the specified dimension\n     * (width or height). Note that if an arrow function is used, this scoping cannot be used when inside a\n     * decorator, since the scope will be the global scope.\n     *\n     * If true is specified or a tilde with a size (e.g. ~300), then the renderable will be automatically sized.\n     * If a tilde is used to indicate the size, then the size after the tilde will be used when/if the\n     * renderable doesn't have a size, or turn into the actual size if it can be determined. This is useful when wanting\n     * to reduce the flickering of surfaces who's size cannot be determined the first render tick.\n     * Beware that true sizing of surfaces or other raw dom elements (input surfaces, image surfaces, text boxes etc)\n     * often comes with a perfomance penalty and should only be used when necessary.\n     * Also beware that any negative size will be interpreted as a tilde, since ~x = 1 - x\n     *\n     * If undefined is specified, then the size of that dimension will equal the entire context size.\n     *\n     * If a size between 0 and 1 is specified, then that will be interpreted as a proportion of the context size. For\n     * example if 0.5 is specified, then the size will be half of the context size (the parent's size). Instead of\n     * specifying 1 to cover the entire context size, use undefined instead.\n     * @example\n     * @layout.size(function(contextWidth) {return Math.max(contextWidth, this.options.maxWidth)}, ~300)\n     * // Creates a renderable where the width is equal to the text width and the height is whatever is bigger,\n     * // options.maxWidth, or the context size\n     * text = new Surface({content: 'This is some text', properties: {backgroundColor: 'red'}});\n     *\n     * @param {Number|Function} x\n     * @param {Number|Function} y\n     * @returns {Function} A decorator function\n     */\n    size: function (x, y) {\n        return function (view, renderableName, descriptor) {\n            if (Array.isArray(x)) {\n                throw Error('Please specify size as two arguments, and not as an array');\n            }\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            renderable.decorations.size = [x, y];\n        };\n    },\n    clip: function (width, height, properties = {}) {\n        return function (view, renderableName, descriptor) {\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            renderable.decorations.clip = {size: [width, height], properties};\n        }\n    },\n\n    /**\n     * Rotates the renderable around any of the three axes (in radians).\n     *\n     * @example\n     * @layout.size(100,100)\n     * @layout.rotate(0, 0, Math.PI)\n     * // Writes text upside down\n     * renderable = new Surface({content: 'upside down text'});\n     *\n     * @param {Number} x The rotation around the x axis (flips vertically)\n     * @param {Number} y The rotation around the y axis (flips horizontally)\n     * @param {Number} z The rotation around the z axis (rotatesin in the more intuitive sense)\n     * @returns {Function} A decorator function\n     */\n    rotate: function (x, y, z) {\n        return function (view, renderableName, descriptor) {\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            renderable.decorations.rotate = [x, y, z];\n        }\n    },\n\n    /**\n     * Rotates the renderable around any of the three axes (in radians) relatively to the current rotation\n     *\n     * @example\n     * @layout.size(100,100)\n     * @layout.rotate(0, 0, Math.PI)\n     * // Writes text upside down\n     * renderable = new Surface({content: 'upside down text'});\n     *\n     * @param {Number} x The rotation around the x axis (flips vertically)\n     * @param {Number} y The rotation around the y axis (flips horizontally)\n     * @param {Number} z The rotation around the z axis (rotatesin in the more intuitive sense)\n     * @returns {Function} A decorator function\n     */\n    rotateFrom: function (x, y, z) {\n        return function (view, renderableName, descriptor) {\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            let propertyName = 'rotate';\n            let properties = renderable.decorations[propertyName] || [0,0,0];\n            renderable.decorations[propertyName] = [properties[0]+x, properties[1]+y, properties[2]+z];\n        }\n    },\n\n    /**\n     * Sets the opacity of a renderable.\n     *\n     * @example\n     * @layout.opacity(0.5)\n     * @layout.size(100, 10)\n     * @layout.place.center()\n     * // Writes text that is half invisible\n     * renderable = new Surface({content: 'Half invisible'});\n     *\n     * @param {Number} opacity The opacity, between 0 and 1\n     * @returns {Function} A decorator function\n     */\n    opacity: function (opacity) {\n        return function (view, renderableName, descriptor) {\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            renderable.decorations.opacity = opacity;\n        }\n    },\n\n\n    _stickTo: function (stick) {\n        return function (view, renderableName, descriptor) {\n            let origin = [0, 0], align = [0, 0];\n            switch (stick) {\n                case 'center':\n                    origin = align = [0.5, 0.5];\n                    break;\n                case 'bottomRight':\n                    origin = align = [1, 1];\n                    break;\n                case 'bottomLeft':\n                    origin = align = [0, 1];\n                    break;\n                case 'topRight':\n                    origin = align = [1, 0];\n                    break;\n                case 'left':\n                    origin = align = [0, 0.5];\n                    break;\n                case 'right':\n                    origin = align = [1, 0.5];\n                    break;\n                case 'top':\n                    origin = align = [0.5, 0];\n                    break;\n                case 'bottom':\n                    origin = align = [0.5, 1];\n                    break;\n                default:\n                case 'topLeft':\n                    origin = align = [0, 0];\n                    break;\n\n            }\n\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            renderable.decorations.origin = origin;\n            renderable.decorations.align = align;\n        };\n    },\n    /**\n     * Places the renderable by settings origin/align. If nothing is set, it will default to topleft.\n     *\n     * @example\n     * @layout.size(100,~300)\n     * @layout.stick.center()\n     * renderable = new Surface({content: 'centered text'});\n     *\n     * @param {String} stick. Can be either of 'center', 'left', 'right', 'bottom', 'top', 'bottomleft', 'bottomright',\n     * 'topright', 'topleft'\n     * @returns {Function} A decorator function\n     */\n    stick: {\n        center: function () {\n            return layout._stickTo('center');\n        },\n        left: function () {\n            return layout._stickTo('left');\n        },\n        right: function () {\n            return layout._stickTo('right');\n        },\n        top: function () {\n            return layout._stickTo('top');\n        },\n        bottom: function () {\n            return layout._stickTo('bottom');\n        },\n        bottomLeft: function () {\n            return layout._stickTo('bottomLeft');\n        },\n        bottomRight: function () {\n            return layout._stickTo('bottomRight');\n        },\n        topLeft: function () {\n            return layout._stickTo('topLeft');\n        },\n        topRight: function () {\n            return layout._stickTo('topRight');\n        }\n    },\n\n    /**\n     * Sets the point where the renderable has its anchor from where rotation and translation will be done.\n     * You could consider it as translating the negative of the proportion times its size. The arguments are always\n     * between and including 0 and 1.\n     *\n     * @example\n     * @layout.origin(0.5, 0)\n     * @layout.align(0.5, 0.5)\n     * @layout.size(100,100)\n     * //Displays a red box horizontically centered and displays just below the vertical mid point\n     * renderable = new Surface({properties: {backgroundColor: 'red'}});\n     *\n     *\n     * @param {Number} x. The x of the origin.\n     * @param {Number} y. The y of the origin.\n     * @returns {Function} A decorator function.\n     */\n    origin: function (x, y) {\n        return function (view, renderableName, descriptor) {\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            renderable.decorations.origin = [x, y];\n        };\n    },\n\n    /**\n     * Translates the renderable by a proportion of the context size.\n     *\n     * @example\n     * @layout.align(0.5, 0.5)\n     * @layout.size(100,100)\n     * //Displays a red box just below the vertical mid point and past the horizontal mid point\n     * renderable = new Surface({properties: {backgroundColor: 'red'}});\n     *\n     * @param {Number} x. The proportion of the context width that is going to be translated.\n     * @param {Number} y. The proportion of the context height that is going to be translated.\n     * @returns {Function} A decorator function.\n     */\n    align: function (x, y) {\n        return function (view, renderableName, descriptor) {\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            renderable.decorations.align = [x, y];\n        };\n    },\n\n    /**\n     * Specifies a translation of a renderable. Can be applied to every kind of renderable (docked, fullSize,\n     * and normal). Can also be applied on view level to translate every renderable of that view. The view wide translation defaults\n     * to [0, 0, 10] in order to always increase the z space of every level of the Famous rendering tree.\n     *\n     * @example\n     * @layout.translate(0, 0, 20)\n     * class myView extends View{\n     *  @layout.translate(0, 0, -20)\n     *  @layout.fullSize()\n     *  // Will display relatively at z level 0 (20 minus 20)\n     *  myBackground = new Surface({properties: {backgroudColor: 'red'}});\n     * }\n     *\n     * @param {Number} x Moves the renderable along the x axis.\n     * @param {Number} y Moves the renderable along the y axis.\n     * @param {Number} z Moves the renderable along the z axis.\n     * @returns {Function} A decorator function.\n     */\n    translate: function (x, y, z) {\n        return function (target, renderableName, descriptor) {\n            if (Array.isArray(x)) {\n                throw Error('Please specify translate as three arguments, and not as an array');\n            }\n            let propertyName, decorations;\n            if (typeof target == 'function') {\n                decorations = prepPrototypeDecorations(target.prototype);\n                propertyName = 'extraTranslate';\n            } else {\n                decorations = prepDecoratedRenderable(...arguments).decorations;\n                propertyName = 'translate';\n            }\n            decorations[propertyName] = [x, y, z];\n        };\n    },\n\n    /**\n     * Specifies a relative translation of a renderable. Can be applied to every kind of renderable (docked, fullSize,\n     * and normal).\n     * Can also be applied on view level to translate every renderable of that view. The view wide translation defaults\n     * to [0, 0, 10] in order to always increase the z space of every level of the Famous rendering tree.\n     *\n     * @example\n     * @layout.translateFrom(0, 0, 20)\n     * class myView extends View{\n     *  @layout.translateFrom(0, 0, -20)\n     *  @layout.fullSize()\n     *  // Will display relatively at z level 0 (20 minus 20)\n     *  myBackground = new Surface({properties: {backgroudColor: 'red'}});\n     * }\n     *\n     * @param {Number} x Moves the renderable along the x axis.\n     * @param {Number} y Moves the renderable along the y axis.\n     * @param {Number} z Moves the renderable along the z axis.\n     * @returns {Function} A decorator function.\n     */\n    translateFrom: function (x, y, z) {\n        return function (target, renderableName, descriptor) {\n            if (Array.isArray(x)) {\n                throw Error('Please specify translate as three arguments, and not as an array');\n            }\n            let propertyName, decorations;\n            if (typeof target == 'function') {\n                decorations = prepPrototypeDecorations(target.prototype);\n                propertyName = 'extraTranslate';\n            } else {\n                decorations = prepDecoratedRenderable(...arguments).decorations;\n                propertyName = 'translate';\n            }\n            let properties = decorations[propertyName] || [0,0,0];\n            decorations[propertyName] = [properties[0]+x, properties[1]+y, properties[2]+z];\n        };\n    },\n\n    /**\n     * Specifies the scale of a renderable. Can be applied to every kind of renderable.\n     *\n     * @example\n     *  class myView extends View{\n     *  @layout.scale(2, 2, 2)\n     *  @layout.fullscreen\n     *  // Will scale the renderable by 2 in the x,y,z dimension\n     *  myBackground = new Surface({properties: {backgroudColor: 'red'}});\n     * }\n     *\n     * @param {Number} x Scales the renderable along the x axis.\n     * @param {Number} y Scales the renderable along the y axis.\n     * @param {Number} z Scales the renderable along the z axis.\n     * @returns {Function} A decorator function.\n     */\n    scale: function (x,\n                     y = Utils.warn('Please specify y parameter for scaling'),\n                     z = Utils.warn('Please specify z parameter for scaling')) {\n        return function (target, renderableName, descriptor) {\n            let decorations = prepDecoratedRenderable(...arguments).decorations;\n            let propertyName = 'scale';\n            decorations[propertyName] = [x, y, z];\n        };\n    },\n\n    /**\n     * Specifies the skew of a renderable. Can be applied to every kind of renderable.\n     *\n     * @example\n     *  class myView extends View{\n     *  @layout.skew(2, 2, 2)\n     *  @layout.fullscreen\n     *  // Will skew the renderable by 2 in the x,y,z dimension\n     *  myBackground = new Surface({properties: {backgroudColor: 'red'}});\n     * }\n     *\n     * @param {Number} x Skews the renderable along the x axis.\n     * @param {Number} y Skews the renderable along the y axis.\n     * @param {Number} z Skews the renderable along the z axis.\n     * @returns {Function} A decorator function.\n     */\n    skew: function (x, y, z) {\n        return function (target, renderableName, descriptor) {\n            let decorations = prepDecoratedRenderable(...arguments).decorations;\n            let propertyName = 'skew';\n            decorations[propertyName] = [x, y, z];\n        };\n    },\n\n    /**\n     *\n     * Creates an animation controller to show/hide the renderable. Renderables can be shown by calling\n     * this.showRenderable(renderableName) and hidden using this.hideRenderable(renderableName) or\n     * this.showRenderable(renderableName, false). When a renderable has been shown, it will emit the event 'shown'.\n     *\n     * @example\n     * @layout.stick.center()\n     * @layout.size(100,100)\n     * @layout.animate({transition: {duration: 350}})\n     * renderable = new Surface({properties: {backgroundColor: 'red'}});\n     *\n     *\n     *\n     * @param {Object} [options] The same as famous-flex Animation Controller, plus 2 more:\n     * @param {Boolean} [options.showInitially] Whether to show the renderable when the view is created. (Default: true).\n     * @param {String} [options.waitFor] If specified, it will wait for the renderable with the specified name to show\n     * before showing the renderable\n     * @param {Object} [options.transition] Transition options.\n     * @param {Function} [options.animation] Animation function (default: `AnimationController.Animation.FadedZoom`).\n     * @param {Number} [options.zIndexOffset] Optional z-index difference between the hiding & showing renderable (default: 0).\n     * @param {Number} [options.keepHiddenViewsInDOMCount] Keeps views in the DOM after they have been hidden (default: 0).\n     * @param {Object} [options.show] Show specific options.\n     * @param {Object} [options.show.transition] Show specific transition options.\n     * @param {Function} [options.show.animation] Show specific animation function.\n     * @param {Object} [options.hide] Hide specific options.\n     * @param {Object} [options.hide.transition] Hide specific transition options.\n     * @param {Function} [options.hide.animation] Hide specific animation function.\n     * @param {Object} [options.transfer] Transfer options.\n     * @param {Object} [options.transfer.transition] Transfer specific transition options.\n     * @param {Number} [options.transfer.zIndex] Z-index the tranferables are moved on top while animating (default: 10).\n     * @param {Bool} [options.transfer.fastResize] When enabled, scales the renderable i.s.o. resizing when doing the transfer animation (default: true).\n     * @param {Array} [options.transfer.items] Ids (key/value) pairs (source-id/target-id) of the renderables that should be transferred.\n     * @returns {Function}\n     */\n    animate: function (options = {}) {\n        return function (view, renderableName, descriptor) {\n            let renderableConstructor = prepDecoratedRenderable(view, renderableName, descriptor);\n            options = merge({\n                showInitially: true,\n                animation: AnimationController.Animation.FadedZoom,\n                show: {transition: options.transition || {curve: Easing.outCubic, duration: 250}},\n                hide: {transition: options.transition || {curve: Easing.inCubic, duration: 250}}\n            }, options);\n\n            renderableConstructor.decorations.animation = options;\n\n            constructor.decorations = renderableConstructor.decorations;\n\n        };\n    },\n\n    /**\n     * Makes the view flow by tweening all intermediate stages of a changed attribute of any renderable.\n     *\n     * @example\n     * @layout.flow({spring: {dampingRatio: 0.8, period: 1000}})\n     * class myView extends View{\n     * ...\n     * }\n     *\n     * @param {Object} Options to pass as flowOptions to the LayoutController\n     * @param {Bool} [flowOptions.transition] If specified, sets the default transition to use\n     * @param {Bool} [flowOptions.reflowOnResize] Smoothly reflows renderables on resize (only used when flow = true) (default: `true`).\n     * @param {Object} [flowOptions.spring] Spring options used by nodes when reflowing (default: `{dampingRatio: 0.8, period: 300}`).\n     * @param {Object} [flowOptions.properties] Properties which should be enabled or disabled for flowing.\n     * @param {Spec} [flowOptions.insertSpec] Size, transform, opacity... to use when inserting new renderables into the scene (default: `{}`).\n     * @param {Spec} [flowOptions.removeSpec] Size, transform, opacity... to use when removing renderables from the scene (default: undefined).\n     * @returns {Function} A decorator function\n     */\n    flow: function (flowOptions = {}) {\n        return function (target) {\n            let decorations = prepPrototypeDecorations(target.prototype);\n            decorations.useFlow = true;\n            decorations.flowOptions = flowOptions || {};\n            decorations.transition = flowOptions.transition || undefined;\n        }\n    },\n\n    /**\n     * Makes the view as scrollable. This will put the entire content in a ReflowingScrollView that uses getSize on the\n     * view to determine scrolling size. If the size cannot be determined, you might consider declaring your own\n     * getSize() on the View.\n     *\n     * @example\n     * @layout.scrollable()\n     * class myView extends View{\n     * ...\n     * }\n     *\n     *\n     * @returns {Function} A decorator function\n     */\n    scrollable: function (options = {}) {\n        return function (target) {\n            let decorations = prepPrototypeDecorations(target.prototype);\n            decorations.scrollableOptions = options;\n        }\n    },\n\n    /**\n     * Sets the margins for the docked content. This can be applied both to a child and a class. When in conflict,\n     * the parent will override the child's setting. If the margin is set on a Surface, then CSS padding will be set.\n     * margins can be 1, 2, or 4, parameters, which can be specified as shorthand in the same way\n     * as CSS does it.\n     *\n     * @example\n     * @layout.dockPadding(15)\n     * //Creates a class with 15px margin on all sides for docked renderables\n     * class myView extends View{\n     *\n     *  //Will be displayed with margin\n     *  @layout.dock.top(20)\n     *  onTop = new Surface({content: \"hello world\"});\n     *\n     *  //Will be displayed without margin since we're using @layout.stick\n     *  @layout.stick.bottom\n     *  onButtom = new Surface({content: \"hey hey\"});\n     * }\n     *\n\n     *\n     * @param {Number} firstMargin\n     * @param {Number} [secondMargin]\n     * @param {Number} [thirdMargin]\n     * @param {Number} [fourthMargin]\n     * @returns {Function} A decorator function\n     */\n    dockPadding: function (...margins) {\n        return function (target) {\n            let decorations;\n            if (typeof target == 'function') {\n                decorations = prepPrototypeDecorations(target.prototype);\n            } else {\n                decorations = prepDecoratedRenderable(...arguments).decorations;\n            }\n            decorations.viewMargins = LayoutUtility.normalizeMargins(margins);\n        };\n    },\n\n    columnDockPadding: function (maxContentWidth = 720, defaultPadding = [0, 16, 0, 16]) {\n        return function (target) {\n            let decorations = prepPrototypeDecorations(target.prototype);\n            let normalisedPadding = LayoutUtility.normalizeMargins(defaultPadding);\n\n            /* Default to 16px dockPadding */\n            layout.dockPadding(normalisedPadding);\n\n            /* Calculate the dockPadding dynamically every time the View's size changes.\n             * The results from calling this method are further handled in View.js.\n             *\n             * The logic behind this is 16px padding by default, unless the screen is\n             * wider than 720px. In that case, the padding is increased to make the content\n             * in between be at maximum 720px. */\n            decorations.dynamicDockPadding = function(size) {\n                let sideWidth = size[0] > maxContentWidth + 32 ? (size[0] - maxContentWidth) / 2 : normalisedPadding[1];\n                return [normalisedPadding[0], sideWidth, normalisedPadding[2], sideWidth];\n            }\n        };\n    },\n\n    /**\n     *\n     * Adds a custom layout function to the view.\n     * This decorator works directly on the object so you shouldn't pass any arguments nor use parentheses.\n     *\n     * @example\n     * @layout.custom((context) => {\n     *  context.set('myRenderable', {\n     *  size: [100, 100]\n     * })\n     * class MyView extends View {\n     *  constructor(options) {\n     *      super(options);\n     *      this.renderables.myRenderable = new Surface({properties: {backgroundColor: 'red'}});\n     *  }\n     * }\n     *\n     *\n     * @param customLayoutFunction\n     * @returns {Function} A decorator function\n     */\n    custom: function (customLayoutFunction) {\n        return function (target) {\n            let decorations = prepPrototypeDecorations(target.prototype);\n            decorations.customLayoutFunction = customLayoutFunction;\n        };\n    }\n};\n\nexport const event = {\n    /**\n     * Internal function used by the event decorators to generalize the idea of on, once, and off.\n     *\n     * @param {String} subscriptionType A type of subscription function, e.g. on\n     * @param {String} eventName The event name\n     * @param {Function} callback that is called when event has happened\n     * @returns {Function}\n     */\n    _subscribe: function (subscriptionType, eventName, callback) {\n        return function (view, renderableName, descriptor) {\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            if (!renderable.decorations.eventSubscriptions) {\n                renderable.decorations.eventSubscriptions = [];\n            }\n            renderable.decorations.eventSubscriptions.push({\n                subscriptionType: subscriptionType,\n                eventName: eventName,\n                callback: callback\n            });\n        };\n    },\n\n    /**\n     *\n     * Adds an event listener to the renderable when specific event happened.\n     *\n     * @example\n     * @layout.on('click', function() {this._handleClick})\n     * thing = new Surface({properties: {backgroundColor: 'red'}});\n     *\n     * _handleClick() { ... }\n     *\n     *\n     * @param eventName\n     * @param callback\n     * @returns {Function} A decorator function\n     */\n    on: function (eventName, callback) {\n        return event._subscribe('on', eventName, callback);\n    },\n\n\n    /**\n     *\n     * Adds an event listener to the renderable when specific event happened once.\n     *\n     * @example\n     * @layout.size(100,100)\n     * @layout.stick.center()\n     * @layout.once('click', function() {this._handleClick})\n     * thing = new Surface({properties: {backgroundColor: 'red'}});\n     *\n     * _handleClick() { ... }\n     *\n     *\n     * @param eventName\n     * @param callback\n     * @returns {Function} A decorator function\n     */\n    once: function (eventName, callback) {\n        return event._subscribe('once', eventName, callback);\n    },\n\n    /**\n     * Pipes events from one renderable to another. The other renderable has to be declared above the one that is doing\n     * the piping, otherwise an exception will be thrown.\n     *\n     * @example\n     * @layout.fullSize()\n     * @layout.pipe('dbsv')\n     * //Pipe events to another renderable declared above, called 'dbsv'\n     * scrollableSurface = new Surface();\n     *\n     * @param pipeToName\n     * @returns {Function}\n     */\n    pipe: function (pipeToName) {\n        return function (view, renderableName, descriptor) {\n            let renderable = prepDecoratedRenderable(view, renderableName, descriptor);\n            if (!renderable.decorations.pipes) {\n                renderable.decorations.pipes = [];\n            }\n\n            renderable.decorations.pipes.push(pipeToName);\n        };\n    }\n};\n\nexport const flow = {\n    defaultOptions: function (flowOptions = {}) {\n        return function (target, renderableName, descriptor) {\n            let decorations = prepDecoratedRenderable(...arguments).decorations;\n            if (!decorations.flow) {\n                decorations.flow = {states: {}};\n            }\n            decorations.flow.defaults = {...flowOptions};\n        }\n    },\n\n    defaultState: function (stateName = '', stateOptions = {}, ...transformations) {\n        return function (target, renderableName, descriptor) {\n            flow.stateStep(stateName, stateOptions, ...transformations)(target, renderableName, descriptor);\n            for(let transformation of transformations) {\n                transformation(target, renderableName, descriptor);\n            }\n        }\n    },\n\n    stateStep: function (stateName = '', stateOptions = {}, ...transformations) {\n        return function (target, renderableName, descriptor) {\n            let decorations = prepDecoratedRenderable(...arguments).decorations;\n            if (!decorations.flow) {\n                decorations.flow = {states: {}};\n            }\n            if (!decorations.flow.states[stateName]) {\n                decorations.flow.states[stateName] = {steps: []};\n            }\n            decorations.flow.states[stateName].steps.unshift({transformations, options: stateOptions});\n        }\n    },\n\n    viewStates: function (states = {}) {\n        return function (target) {\n            let decorations = prepPrototypeDecorations(target.prototype);\n            if (!decorations.flow) {\n                decorations.flow = {};\n            }\n            decorations.flow.viewStates = states;\n        }\n    },\n\n    multipleStateStep: function(stateName = '', states = []){\n        return function (target, renderableName, descriptor) {\n            for(let {stateOptions, transformations} of states){\n                flow.stateStep(stateName, stateOptions, ...transformations)(target, renderableName, descriptor);\n            }\n        }\n    }\n};\n"
  },
  {
    "__docId__": 585,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "prepDecoratedRenderable",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~prepDecoratedRenderable",
    "access": null,
    "export": false,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "viewOrRenderable",
        "types": [
          "*"
        ]
      },
      {
        "name": "renderableName",
        "types": [
          "*"
        ]
      },
      {
        "name": "descriptor",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 586,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "prepPrototypeDecorations",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~prepPrototypeDecorations",
    "access": null,
    "export": false,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": null,
    "description": "Extracts a decorations object",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} The decorations for the prototype"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "View"
        ],
        "spread": false,
        "optional": false,
        "name": "prototype",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "The decorations for the prototype"
    },
    "generator": false
  },
  {
    "__docId__": 587,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "layout",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout}",
    "description": "Describes a set of decorators used for layouting of a renderable in a View.",
    "lineNumber": 87,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 588,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "event",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~event",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{event}",
    "description": null,
    "lineNumber": 951,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 589,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "flow",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~flow",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{flow}",
    "description": null,
    "lineNumber": 1040,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 590,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.renderable",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.renderable",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.renderable}",
    "description": "Merely marks a view property as a decorated renderable, which allows it to be rendered.\nUse this in combination with a @layout.custom decorator on the view in which this renderable resides.",
    "examples": [
      "@layout.renderable\nrenderable = new Surface();"
    ],
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 591,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.fullSize",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.fullSize",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.fullSize}",
    "description": "Marks the renderable to cover the entire screen. Translate can also be specified on such a renderable.",
    "examples": [
      "@layout.fullSize()\n// View will have a red background\nbackground = new Surface({properties: {backgroundColor: 'red'}});"
    ],
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 592,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.dockSpace",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.dockSpace",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.dockSpace}",
    "description": "Specifies the space that should come before the docked renderable. Useful when not specifying the size in the\nlayout.dock function. Note that the space does not appear if there isn't any renderable with a size greater than\nzero before it.",
    "examples": [
      "// there's a 20px space before this box\n@layout.dockSpace(20)\n@layout.size(100, 100)\n@layout.dock.left()\nbox = new Surface({properties: {backgroundColor: 'red'}});"
    ],
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "space",
        "description": "The space that is inserted before the renderable."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 593,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout._dockTo",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout._dockTo",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout._dockTo}",
    "description": "Internal function to do docking",
    "lineNumber": 155,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dockMethod",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "space",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "zIndex",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 594,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.dock.left",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.dock.left",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.dock.left}",
    "description": "Docks the renderable to the left.\nWhen using both a docked size and the layout.size decorator, then that layout.size becomes the actual inner size.\nThe renderable can then be stickd within the docking area with origin and align. When combined with align, treats\nthe context size the docking size.\nWhen using layout.size without specifying a docked size, it will use that size as docking size. Useful for\nautomatic sizing when parent defines true size and orthogonal size (e.g. height for dock 'left') has to be defined.",
    "examples": [
      "@layout.dock.left(30, 0, 10)\n@layout.size(15, undefined)\n@layout.origin(0.5, 0)\n@layout.align(0.5, 0)\ndockedRenderable = new Surface({properties: {backgroundColor: 'red'}});"
    ],
    "lineNumber": 203,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number",
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "size].",
        "description": "The size of the renderable in the one dimension that is being docked, e.g.\ndock left or right will be width, whereas dock top or bottom will result in height. For more information about\ndifferent variations, see layout.size."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "space].",
        "description": "Any space that should be inserted before the docked renderable"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "zIndex].",
        "description": "DEPRECATED: Use translate(0, 0, zIndex) instead."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 595,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.dock.right",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.dock.right",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.dock.right}",
    "description": "Docks the renderable to the right.\nWhen using both a docked size and the layout.size decorator, then that layout.size becomes the actual inner size.\nThe renderable can then be stickd within the docking area with origin and align. When combined with align, treats\nthe context size the docking size.\nWhen using layout.size without specifying a docked size, it will use that size as docking size. Useful for\nautomatic sizing when parent defines true size and orthogonal size (e.g. height for dock 'left') has to be defined.",
    "examples": [
      "@layout.dock.right(30, 0, 10)\n@layout.size(15, undefined)\n@layout.origin(0.5, 0)\n@layout.align(0.5, 0)\ndockedRenderable = new Surface({properties: {backgroundColor: 'red'}});"
    ],
    "lineNumber": 229,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number",
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "size].",
        "description": "The size of the renderable in the one dimension that is being docked, e.g.\ndock left or right will be width, whereas dock top or bottom will result in height. For more information about\ndifferent variations, see layout.size."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "space].",
        "description": "Any space that should be inserted before the docked renderable"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "zIndex].",
        "description": "DEPRECATED: Use translate(0, 0, zIndex) instead."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 596,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.dock.top",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.dock.top",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.dock.top}",
    "description": "\nDocks the renderable to the top.\nWhen using both a docked size and the layout.size decorator, then that layout.size becomes the actual inner size.\nThe renderable can then be stickd within the docking area with origin and align. When combined with align, treats\nthe context size the docking size.\nWhen using layout.size without specifying a docked size, it will use that size as docking size. Useful for\nautomatic sizing when parent defines true size and orthogonal size (e.g. height for dock 'left') has to be defined.",
    "examples": [
      "@layout.dock.top(30, 0, 10)\n@layout.size(15, undefined)\n@layout.origin(0.5, 0)\n@layout.align(0.5, 0)\ndockedRenderable = new Surface({properties: {backgroundColor: 'red'}});"
    ],
    "lineNumber": 257,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number",
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "size].",
        "description": "The size of the renderable in the one dimension that is being docked, e.g.\ndock left or right will be width, whereas dock top or bottom will result in height. For more information about\ndifferent variations, see layout.size."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "space",
        "description": "= 0]. Any space that should be inserted before the docked renderable"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "zIndex",
        "description": "= 0]. DEPRECATED: Use translate(0, 0, zIndex) instead."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 597,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.dock.bottom",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.dock.bottom",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.dock.bottom}",
    "description": "\nDocks the renderable to the bottom.\nWhen using both a docked size and the layout.size decorator, then that layout.size becomes the actual inner size.\nThe renderable can then be stickd within the docking area with origin and align. When combined with align, treats\nthe context size the docking size.\nWhen using layout.size without specifying a docked size, it will use that size as docking size. Useful for\nautomatic sizing when parent defines true size and orthogonal size (e.g. height for dock 'left') has to be defined.",
    "examples": [
      "@layout.dock.bottom(30, 0, 10)\n@layout.size(15, undefined)\n@layout.origin(0.5, 0)\n@layout.align(0.5, 0)\ndockedRenderable = new Surface({properties: {backgroundColor: 'red'}});"
    ],
    "lineNumber": 285,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number",
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "size].",
        "description": "The size of the renderable in the one dimension that is being docked, e.g.\ndock left or right will be width, whereas dock top or bottom will result in height. For more information about\ndifferent variations, see layout.size."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "space",
        "description": "= 0]. Any space that should be inserted before the docked renderable"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "zIndex",
        "description": "= 0]. DEPRECATED: Use translate(0, 0, zIndex) instead."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 598,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.dock.fill",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.dock.fill",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.dock.fill}",
    "description": "Fills the space that is left after the docking with this renderable.",
    "examples": [
      "When using layout.size, it will use that size as an inner size. This works similarly to other docking, from\nwhere translate, size, origin, align, etc can be specified.\n\n@layout.dock.fill()\nfilledRenderable = new Surface({properties: {backgroundColor: 'red'}});"
    ],
    "lineNumber": 301,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 599,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.dock.none",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.dock.none",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.dock.none}",
    "description": "Marks the renderable as not being docked anymore. Useful when dynamically changing decorations through\nthis.decorateRenderable or this.setRenderableFlowState",
    "examples": [
      "@layout.dock.fill()\n@flow.stateStep('nonFilled', layout.dock.none(), layout.size(100, 100))\nfilledRenderable = new Surface({properties: {backgroundColor: 'red'}});"
    ],
    "lineNumber": 315,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 600,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.draggable",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.draggable",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.draggable}",
    "description": "Makes the renderable allowed to be dragged around. this.renderables[name] refers to a RenderNode containing this\ndraggable along with the renderable itself.",
    "examples": [
      "@layout.draggable({xRange: [0, 100}, yRange: [0, 200]})\n@layout.size(100, 100)\n// Makes a draggable square that is red\ndraggableRenderable = new Surface({properties: {backgroundColor: 'red'});"
    ],
    "lineNumber": 344,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "draggableOptions].",
        "description": "Same options that can be passed to a Famous Draggable."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.snapX",
        "description": "grid width for snapping during drag"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.snapY",
        "description": "grid height for snapping during drag"
      },
      {
        "nullable": null,
        "types": [
          "Array.Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.xRange",
        "description": "maxmimum [negative, positive] x displacement from start of drag"
      },
      {
        "nullable": null,
        "types": [
          "Array.Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.yRange",
        "description": "maxmimum [negative, positive] y displacement from start of drag"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.scale",
        "description": "one pixel of input motion translates to this many pixels of output drag motion"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.projection",
        "description": "User should set to Draggable._direction.x or\n   Draggable._direction.y to constrain to one axis."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 601,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.swipable",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.swipable",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.swipable}",
    "description": "Makes the renderable swipable with physics-like velocity after the dragging is released. Emits event\n'thresholdReached' with arguments ('x'|'y', 0|1) when any thresholds have been reached. this.renderables[name]\nnow refers to a a RenderNode containing a positionModifier along with the renderable itself.",
    "examples": [
      "@layout.size(100, 100)\n@layout.swipable({xRange: [0, 100], snapX: true})\n//Make a red box that can slide to the right\nswipable = new Surface({properties: {backgroundColor: 'red'});"
    ],
    "lineNumber": 374,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.snapX",
        "description": "Whether to snap to the x axis"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.snapY",
        "description": "Whether to snap to the Y axis"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.enabled",
        "description": "Whether the swipable should be initially enabled"
      },
      {
        "nullable": null,
        "types": [
          "Array.Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.xThreshold",
        "description": "Two values of the thresholds that trigger the thresholdReached event with\nargument 'x' and second argument 0 or 1, depending on the direction.\nSpecify undefined in one of them to disable threshold to that direction."
      },
      {
        "nullable": null,
        "types": [
          "Array.Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.yThreshold",
        "description": "Two values of the thresholds that trigger the thresholdReached event with\nargument 'y'  and second argument 0 or 1, depending on the direction.\nSpecify undefined in one of them to disable threshold to that direction."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 602,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.size",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.size",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.size}",
    "description": "Specifies the size of the renderable. For both of the parameters, sizes can be interpreted as follows:\n\nIf specified as a function, then the argument passed is the context size of the specified dimension\n(width or height). Note that if an arrow function is used, this scoping cannot be used when inside a\ndecorator, since the scope will be the global scope.\n\nIf true is specified or a tilde with a size (e.g. ~300), then the renderable will be automatically sized.\nIf a tilde is used to indicate the size, then the size after the tilde will be used when/if the\nrenderable doesn't have a size, or turn into the actual size if it can be determined. This is useful when wanting\nto reduce the flickering of surfaces who's size cannot be determined the first render tick.\nBeware that true sizing of surfaces or other raw dom elements (input surfaces, image surfaces, text boxes etc)\noften comes with a perfomance penalty and should only be used when necessary.\nAlso beware that any negative size will be interpreted as a tilde, since ~x = 1 - x\n\nIf undefined is specified, then the size of that dimension will equal the entire context size.\n\nIf a size between 0 and 1 is specified, then that will be interpreted as a proportion of the context size. For\nexample if 0.5 is specified, then the size will be half of the context size (the parent's size). Instead of\nspecifying 1 to cover the entire context size, use undefined instead.",
    "examples": [
      "@layout.size(function(contextWidth) {return Math.max(contextWidth, this.options.maxWidth)}, ~300)\n// Creates a renderable where the width is equal to the text width and the height is whatever is bigger,\n// options.maxWidth, or the context size\ntext = new Surface({content: 'This is some text', properties: {backgroundColor: 'red'}});"
    ],
    "lineNumber": 430,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number",
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number",
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 603,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.rotate",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.rotate",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.rotate}",
    "description": "Rotates the renderable around any of the three axes (in radians).",
    "examples": [
      "@layout.size(100,100)\n@layout.rotate(0, 0, Math.PI)\n// Writes text upside down\nrenderable = new Surface({content: 'upside down text'});"
    ],
    "lineNumber": 460,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The rotation around the x axis (flips vertically)"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "The rotation around the y axis (flips horizontally)"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": "The rotation around the z axis (rotatesin in the more intuitive sense)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 604,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.rotateFrom",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.rotateFrom",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.rotateFrom}",
    "description": "Rotates the renderable around any of the three axes (in radians) relatively to the current rotation",
    "examples": [
      "@layout.size(100,100)\n@layout.rotate(0, 0, Math.PI)\n// Writes text upside down\nrenderable = new Surface({content: 'upside down text'});"
    ],
    "lineNumber": 481,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The rotation around the x axis (flips vertically)"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "The rotation around the y axis (flips horizontally)"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": "The rotation around the z axis (rotatesin in the more intuitive sense)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 605,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.opacity",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.opacity",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.opacity}",
    "description": "Sets the opacity of a renderable.",
    "examples": [
      "@layout.opacity(0.5)\n@layout.size(100, 10)\n@layout.place.center()\n// Writes text that is half invisible\nrenderable = new Surface({content: 'Half invisible'});"
    ],
    "lineNumber": 503,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "opacity",
        "description": "The opacity, between 0 and 1"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 606,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.origin",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.origin",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.origin}",
    "description": "Sets the point where the renderable has its anchor from where rotation and translation will be done.\nYou could consider it as translating the negative of the proportion times its size. The arguments are always\nbetween and including 0 and 1.",
    "examples": [
      "@layout.origin(0.5, 0)\n@layout.align(0.5, 0.5)\n@layout.size(100,100)\n//Displays a red box horizontically centered and displays just below the vertical mid point\nrenderable = new Surface({properties: {backgroundColor: 'red'}});"
    ],
    "lineNumber": 610,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x.",
        "description": "The x of the origin."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y.",
        "description": "The y of the origin."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function."
    },
    "generator": false
  },
  {
    "__docId__": 607,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.align",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.align",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.align}",
    "description": "Translates the renderable by a proportion of the context size.",
    "examples": [
      "@layout.align(0.5, 0.5)\n@layout.size(100,100)\n//Displays a red box just below the vertical mid point and past the horizontal mid point\nrenderable = new Surface({properties: {backgroundColor: 'red'}});"
    ],
    "lineNumber": 630,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x.",
        "description": "The proportion of the context width that is going to be translated."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y.",
        "description": "The proportion of the context height that is going to be translated."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function."
    },
    "generator": false
  },
  {
    "__docId__": 608,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.translate",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.translate",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.translate}",
    "description": "Specifies a translation of a renderable. Can be applied to every kind of renderable (docked, fullSize,\nand normal). Can also be applied on view level to translate every renderable of that view. The view wide translation defaults\nto [0, 0, 10] in order to always increase the z space of every level of the Famous rendering tree.",
    "examples": [
      "@layout.translate(0, 0, 20)\nclass myView extends View{\n @layout.translate(0, 0, -20)\n @layout.fullSize()\n // Will display relatively at z level 0 (20 minus 20)\n myBackground = new Surface({properties: {backgroudColor: 'red'}});\n}"
    ],
    "lineNumber": 656,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Moves the renderable along the x axis."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Moves the renderable along the y axis."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": "Moves the renderable along the z axis."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function."
    },
    "generator": false
  },
  {
    "__docId__": 609,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.translateFrom",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.translateFrom",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.translateFrom}",
    "description": "Specifies a relative translation of a renderable. Can be applied to every kind of renderable (docked, fullSize,\nand normal).\nCan also be applied on view level to translate every renderable of that view. The view wide translation defaults\nto [0, 0, 10] in order to always increase the z space of every level of the Famous rendering tree.",
    "examples": [
      "@layout.translateFrom(0, 0, 20)\nclass myView extends View{\n @layout.translateFrom(0, 0, -20)\n @layout.fullSize()\n // Will display relatively at z level 0 (20 minus 20)\n myBackground = new Surface({properties: {backgroudColor: 'red'}});\n}"
    ],
    "lineNumber": 693,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Moves the renderable along the x axis."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Moves the renderable along the y axis."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": "Moves the renderable along the z axis."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function."
    },
    "generator": false
  },
  {
    "__docId__": 610,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.scale",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.scale",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.scale}",
    "description": "Specifies the scale of a renderable. Can be applied to every kind of renderable.",
    "examples": [
      " class myView extends View{\n @layout.scale(2, 2, 2)\n @layout.fullscreen\n // Will scale the renderable by 2 in the x,y,z dimension\n myBackground = new Surface({properties: {backgroudColor: 'red'}});\n}"
    ],
    "lineNumber": 727,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Scales the renderable along the x axis."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Scales the renderable along the y axis."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": "Scales the renderable along the z axis."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function."
    },
    "generator": false
  },
  {
    "__docId__": 611,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.skew",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.skew",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.skew}",
    "description": "Specifies the skew of a renderable. Can be applied to every kind of renderable.",
    "examples": [
      " class myView extends View{\n @layout.skew(2, 2, 2)\n @layout.fullscreen\n // Will skew the renderable by 2 in the x,y,z dimension\n myBackground = new Surface({properties: {backgroudColor: 'red'}});\n}"
    ],
    "lineNumber": 753,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Skews the renderable along the x axis."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Skews the renderable along the y axis."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": "Skews the renderable along the z axis."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function."
    },
    "generator": false
  },
  {
    "__docId__": 612,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.animate",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.animate",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.animate}",
    "description": "\nCreates an animation controller to show/hide the renderable. Renderables can be shown by calling\nthis.showRenderable(renderableName) and hidden using this.hideRenderable(renderableName) or\nthis.showRenderable(renderableName, false). When a renderable has been shown, it will emit the event 'shown'.",
    "examples": [
      "@layout.stick.center()\n@layout.size(100,100)\n@layout.animate({transition: {duration: 350}})\nrenderable = new Surface({properties: {backgroundColor: 'red'}});"
    ],
    "lineNumber": 796,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "The same as famous-flex Animation Controller, plus 2 more:"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "options.showInitially",
        "description": "Whether to show the renderable when the view is created. (Default: true)."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "options.waitFor",
        "description": "If specified, it will wait for the renderable with the specified name to show\nbefore showing the renderable"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.transition",
        "description": "Transition options."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.animation",
        "description": "Animation function (default: `AnimationController.Animation.FadedZoom`)."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.zIndexOffset",
        "description": "Optional z-index difference between the hiding & showing renderable (default: 0)."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.keepHiddenViewsInDOMCount",
        "description": "Keeps views in the DOM after they have been hidden (default: 0)."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.show",
        "description": "Show specific options."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.show.transition",
        "description": "Show specific transition options."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.show.animation",
        "description": "Show specific animation function."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.hide",
        "description": "Hide specific options."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.hide.transition",
        "description": "Hide specific transition options."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "options.hide.animation",
        "description": "Hide specific animation function."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.transfer",
        "description": "Transfer options."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.transfer.transition",
        "description": "Transfer specific transition options."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.transfer.zIndex",
        "description": "Z-index the tranferables are moved on top while animating (default: 10)."
      },
      {
        "nullable": null,
        "types": [
          "Bool"
        ],
        "spread": false,
        "optional": true,
        "name": "options.transfer.fastResize",
        "description": "When enabled, scales the renderable i.s.o. resizing when doing the transfer animation (default: true)."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "options.transfer.items",
        "description": "Ids (key/value) pairs (source-id/target-id) of the renderables that should be transferred."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 613,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.flow",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.flow",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.flow}",
    "description": "Makes the view flow by tweening all intermediate stages of a changed attribute of any renderable.",
    "examples": [
      "@layout.flow({spring: {dampingRatio: 0.8, period: 1000}})\nclass myView extends View{\n...\n}"
    ],
    "lineNumber": 831,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "Options",
        "description": "to pass as flowOptions to the LayoutController"
      },
      {
        "nullable": null,
        "types": [
          "Bool"
        ],
        "spread": false,
        "optional": true,
        "name": "flowOptions.transition",
        "description": "If specified, sets the default transition to use"
      },
      {
        "nullable": null,
        "types": [
          "Bool"
        ],
        "spread": false,
        "optional": true,
        "name": "flowOptions.reflowOnResize",
        "description": "Smoothly reflows renderables on resize (only used when flow = true) (default: `true`)."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "flowOptions.spring",
        "description": "Spring options used by nodes when reflowing (default: `{dampingRatio: 0.8, period: 300}`)."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "flowOptions.properties",
        "description": "Properties which should be enabled or disabled for flowing."
      },
      {
        "nullable": null,
        "types": [
          "Spec"
        ],
        "spread": false,
        "optional": true,
        "name": "flowOptions.insertSpec",
        "description": "Size, transform, opacity... to use when inserting new renderables into the scene (default: `{}`)."
      },
      {
        "nullable": null,
        "types": [
          "Spec"
        ],
        "spread": false,
        "optional": true,
        "name": "flowOptions.removeSpec",
        "description": "Size, transform, opacity... to use when removing renderables from the scene (default: undefined)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 614,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.scrollable",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.scrollable",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.scrollable}",
    "description": "Makes the view as scrollable. This will put the entire content in a ReflowingScrollView that uses getSize on the\nview to determine scrolling size. If the size cannot be determined, you might consider declaring your own\ngetSize() on the View.",
    "examples": [
      "@layout.scrollable()\nclass myView extends View{\n...\n}"
    ],
    "lineNumber": 854,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 615,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.dockPadding",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.dockPadding",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.dockPadding}",
    "description": "Sets the margins for the docked content. This can be applied both to a child and a class. When in conflict,\nthe parent will override the child's setting. If the margin is set on a Surface, then CSS padding will be set.\nmargins can be 1, 2, or 4, parameters, which can be specified as shorthand in the same way\nas CSS does it.",
    "examples": [
      "@layout.dockPadding(15)\n//Creates a class with 15px margin on all sides for docked renderables\nclass myView extends View{\n\n //Will be displayed with margin\n @layout.dock.top(20)\n onTop = new Surface({content: \"hello world\"});\n\n //Will be displayed without margin since we're using @layout.stick\n @layout.stick.bottom\n onButtom = new Surface({content: \"hey hey\"});\n}"
    ],
    "lineNumber": 889,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "firstMargin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "secondMargin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "thirdMargin",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "fourthMargin",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 616,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "layout.custom",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~layout.custom",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{layout.custom}",
    "description": "\nAdds a custom layout function to the view.\nThis decorator works directly on the object so you shouldn't pass any arguments nor use parentheses.",
    "examples": [
      "@layout.custom((context) => {\n context.set('myRenderable', {\n size: [100, 100]\n})\nclass MyView extends View {\n constructor(options) {\n     super(options);\n     this.renderables.myRenderable = new Surface({properties: {backgroundColor: 'red'}});\n }\n}"
    ],
    "lineNumber": 943,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "customLayoutFunction",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 617,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "event._subscribe",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~event._subscribe",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{event._subscribe}",
    "description": "Internal function used by the event decorators to generalize the idea of on, once, and off.",
    "lineNumber": 960,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "subscriptionType",
        "description": "A type of subscription function, e.g. on"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "eventName",
        "description": "The event name"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "that is called when event has happened"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 618,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "event.on",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~event.on",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{event.on}",
    "description": "\nAdds an event listener to the renderable when specific event happened.",
    "examples": [
      "@layout.on('click', function() {this._handleClick})\nthing = new Surface({properties: {backgroundColor: 'red'}});\n\n_handleClick() { ... }"
    ],
    "lineNumber": 989,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "eventName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 619,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "event.once",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~event.once",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{event.once}",
    "description": "\nAdds an event listener to the renderable when specific event happened once.",
    "examples": [
      "@layout.size(100,100)\n@layout.stick.center()\n@layout.once('click', function() {this._handleClick})\nthing = new Surface({properties: {backgroundColor: 'red'}});\n\n_handleClick() { ... }"
    ],
    "lineNumber": 1011,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function} A decorator function"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "eventName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "A decorator function"
    },
    "generator": false
  },
  {
    "__docId__": 620,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "event.pipe",
    "memberof": "src/layout/Decorators.js",
    "longname": "src/layout/Decorators.js~event.pipe",
    "access": null,
    "export": true,
    "importPath": "./src/layout/Decorators.js",
    "importStyle": "{event.pipe}",
    "description": "Pipes events from one renderable to another. The other renderable has to be declared above the one that is doing\nthe piping, otherwise an exception will be thrown.",
    "examples": [
      "@layout.fullSize()\n@layout.pipe('dbsv')\n//Pipe events to another renderable declared above, called 'dbsv'\nscrollableSurface = new Surface();"
    ],
    "lineNumber": 1028,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Function}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "pipeToName",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 621,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/layout/FlowStates.js",
    "memberof": null,
    "longname": "src/layout/FlowStates.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Manuel Overdijk\n @license NPOSL-3.0\n @copyright Bizboard, 2016\n\n */\n\nimport Easing               from 'famous/transitions/Easing.js';\n\nimport {layout, flow}               from './Decorators.js';\n\nexport const flowStates = {\n    defaultTransition: {curve: Easing.outCubic, duration: 500},\n\n    fade: function(stateName = '', options = {opacity: 0}, stateOptions = {transition: flowStates.defaultTransition, delay: 0}) {\n        return function (target, renderableName, descriptor) {\n            flow.stateStep(stateName, stateOptions, layout.opacity(options.opacity))(target, renderableName, descriptor);\n        }\n    },\n    fadeSlideLeft: function(stateName = '', options = {translation: -300, opacity: 0}, stateOptions = {transition: flowStates.defaultTransition, delay: 0}) {\n        return function (target, renderableName, descriptor) {\n            flow.stateStep(stateName, stateOptions, layout.translateFrom(options.translation, 0, 0), layout.opacity(options.opacity))(target, renderableName, descriptor);\n        }\n    },\n    fadeSlideRight: function(stateName = '', options = {translation: 300, opacity: 0}, stateOptions = {transition: flowStates.defaultTransition, delay: 0}) {\n        return function (target, renderableName, descriptor) {\n            flow.stateStep(stateName, stateOptions, layout.translateFrom(options.translation, 0, 0), layout.opacity(options.opacity))(target, renderableName, descriptor);\n        }\n    },\n    fadeSlideTop: function(stateName = '', options = {translation: -300, opacity: 0}, stateOptions = {transition: flowStates.defaultTransition, delay: 0}) {\n        return function (target, renderableName, descriptor) {\n            flow.stateStep(stateName, stateOptions, layout.translateFrom(0, options.translation, 0), layout.opacity(options.opacity))(target, renderableName, descriptor);\n        }\n    },\n    fadeSlideBottom: function(stateName = '', options = {translation: 300, opacity: 0}, stateOptions = {transition: flowStates.defaultTransition, delay: 0}) {\n        return function (target, renderableName, descriptor) {\n            flow.stateStep(stateName, stateOptions, layout.translateFrom(0, options.translation, 0), layout.opacity(options.opacity))(target, renderableName, descriptor);\n        }\n    }\n};"
  },
  {
    "__docId__": 622,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "flowStates",
    "memberof": "src/layout/FlowStates.js",
    "longname": "src/layout/FlowStates.js~flowStates",
    "access": null,
    "export": true,
    "importPath": "./src/layout/FlowStates.js",
    "importStyle": "{flowStates}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 623,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/layout/TrueSizedLayoutDockHelper.js",
    "memberof": null,
    "longname": "src/layout/TrueSizedLayoutDockHelper.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n @author: Karl Lundfall (lundfall)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n Adapted version of the LayoutDockHelper made by Hein Rutjes in famous-flex\n */\n\n\nimport LayoutUtility from 'famous-flex/LayoutUtility';\n\n/**\n * @class\n * @param {LayoutContext} context layout-context\n * @param {Object} [options] additional options\n * @param {Object} [options.margins] margins to start out with (default: 0px)\n * @param {Number} [options.translateZ] z-index to use when translating objects (default: 0)\n * @alias module:LayoutDockHelper\n */\nexport function TrueSizedLayoutDockHelper(context, options) {\n    var size = context.size;\n    this._size = size;\n    this._context = context;\n    this._options = options;\n    this._data = {\n        z: (options && options.translateZ) ? options.translateZ : 0\n    };\n    var margins = [0, 0, 0, 0];\n    if (options && options.margins) {\n        margins = LayoutUtility.normalizeMargins(options.margins);\n    }\n    this._initialData = {\n        left: margins[3],\n        top: margins[0],\n        right: size[0] - margins[1],\n        bottom: size[1] - margins[2]\n    };\n    this._data.left = this._initialData.left;\n    this._data.top = this._initialData.top;\n    this._data.right = this._initialData.right;\n    this._data.bottom = this._initialData.bottom;\n}\n\n/**\n * Parses the layout-rules based on a JSON data object.\n *\n * **Example:**\n *\n * ```JSON\n * [\n *   ['top', 'header', 50],\n *   ['bottom', 'footer', 50, 10], // z-index: 10\n *   ['margins', [10, 5]], // marginate remaining space: 10px top/bottom, 5px left/right\n *   ['fill', 'content']\n * ]\n * ```\n *\n * @param {Object} data JSON object\n */\nTrueSizedLayoutDockHelper.prototype.parse = function (data) {\n    for (var i = 0; i < data.length; i++) {\n        var rule = data[i];\n        var value = (rule.length >= 3) ? rule[2] : undefined;\n        if (rule[0] === 'top') {\n            this.top(rule[1], value, (rule.length >= 4) ? rule[3] : undefined);\n        }\n        else if (rule[0] === 'left') {\n            this.left(rule[1], value, (rule.length >= 4) ? rule[3] : undefined);\n        }\n        else if (rule[0] === 'right') {\n            this.right(rule[1], value, (rule.length >= 4) ? rule[3] : undefined);\n        }\n        else if (rule[0] === 'bottom') {\n            this.bottom(rule[1], value, (rule.length >= 4) ? rule[3] : undefined);\n        }\n        else if (rule[0] === 'fill') {\n            this.fill(rule[1], (rule.length >= 3) ? rule[2] : undefined);\n        }\n        else if (rule[0] === 'margins') {\n            this.margins(rule[1]);\n        }\n    }\n};\n\n/**\n * Dock the node to the top. Sizes can also be specified as ~size, which makes them truesizes\n *\n * @param {LayoutNode|String} [node] layout-node to dock, when omitted the `height` argument argument is used for padding\n * @param {Array}  size of the node. If number, draws only one dimension and leaves the other one undefined\n * @param {Number} [z] z-index to use for the node\n * @param {Number} space the space inserted before this item, defaults to 0\n * @param extraTranslation\n * @return {TrueSizedLayoutDockHelper} this\n */\nTrueSizedLayoutDockHelper.prototype.top = function (renderableName, size, space = 0, extraTranslation = [0, 0, 0], innerSize, otherSpecs) {\n    let [width, height] = this._setupAccordingToDimension(size, 1);\n    if (this._data.top !== this._initialData.top) {\n        this._data.top += space;\n    }\n\n    this._context.set(renderableName, {\n        size: innerSize || ([width || (this._data.right - this._data.left), this._ensureTrueSize(height)]),\n        translate: this._addTranslations([this._data.left, this._data.top, this._data.z], extraTranslation),\n        ...otherSpecs\n    });\n    /* If height was negative, then it is true sized and it needs to be tild'd to return to original */\n    this._data.top += this._resolveSingleSize(height);\n    return this;\n};\n\n/**\n * Dock the node to the left. Sizes can also be specified as ~size, which makes them truesizes\n *\n * @param {LayoutNode|String} [node] layout-node to dock, when omitted the `width` argument argument is used for padding\n * @param {Array}  size of the node. If number, draws only one dimension and leaves the other one undefined\n * @param {Number} [z] z-index to use for the node\n * @param {Number} space the space inserted before this item, defaults to 0\n * @param extraTranslation\n * @return {TrueSizedLayoutDockHelper} this\n */\nTrueSizedLayoutDockHelper.prototype.left = function (renderableName, size, space = 0, extraTranslation = [0, 0, 0], innerSize, otherSpecs) {\n    let [width, height] = this._setupAccordingToDimension(size, 0);\n    if (this._data.left !== this._initialData.left) {\n        this._data.left += space;\n    }\n    this._context.set(renderableName, {\n        size: innerSize || ([this._ensureTrueSize(width), height || (this._data.bottom - this._data.top)]),\n        translate: this._addTranslations([this._data.left, this._data.top, this._data.z], extraTranslation),\n        ...otherSpecs\n    });\n    this._data.left += this._resolveSingleSize(width);\n    return this;\n};\n\n/**\n * Dock the node to the bottom. Sizes can also be specified as ~size, which makes them truesizes\n *\n * @param {LayoutNode|String} [node] layout-node to dock, when omitted the `height` argument argument is used for padding\n * @param {Array}  size of the node. If number, draws only one dimension and leaves the other one undefined\n * @param {Number} [z] z-index to use for the node\n * @param {Number} space the space inserted before this item, defaults to 0\n * @param extraTranslation\n * @return {TrueSizedLayoutDockHelper} this\n */\nTrueSizedLayoutDockHelper.prototype.bottom = function (renderableName, size, space = 0, extraTranslation = [0, 0, 0], innerSize, otherSpecs) {\n    let [width, height] = this._setupAccordingToDimension(size, 1);\n    if (this._data.bottom !== this._initialData.bottom) {\n        this._data.bottom -= space;\n    }\n    this._data.bottom -= this._resolveSingleSize(height);\n    this._context.set(renderableName, {\n        size: innerSize || ([width || (this._data.right - this._data.left), this._ensureTrueSize(height)]),\n        translate: this._addTranslations([this._data.left, this._data.bottom, this._data.z], extraTranslation),\n        ...otherSpecs\n    });\n    return this;\n};\n\n/**\n * Dock the node to the right. Sizes can also be specified as ~size, which makes them truesizes\n *\n * @param {LayoutNode|String} [node] layout-node to dock, when omitted the `width` argument argument is used for padding\n * @param {Array}  size of the node. If number, draws only one dimension and leaves the other one undefined\n * @param {Number} [this._data.z] z-index to use for the node\n * @param {Number} space the space inserted before this item, defaults to 0\n * @param extraTranslation\n * @return {TrueSizedLayoutDockHelper} this\n */\nTrueSizedLayoutDockHelper.prototype.right = function (renderableName, size, space = 0, extraTranslation = [0, 0, 0], innerSize, otherSpecs) {\n    let [width, height] = this._setupAccordingToDimension(size, 0);\n    if (this._data.right !== this._initialData.right) {\n        this._data.right -= space;\n    }\n    this._data.right -= this._resolveSingleSize(width);\n    this._context.set(renderableName, {\n        size: innerSize || ([this._ensureTrueSize(width), height || (this._data.bottom - this._data.top)]),\n        translate: this._addTranslations([this._data.right, this._data.top, this._data.z], extraTranslation),\n        ...otherSpecs\n    });\n    return this;\n};\n\n/**\n * Fills the node to the remaining content.\n *\n * @param {LayoutNode|String} node layout-node to dock\n * @param {Number} [z] z-index to use for the node\n * @return {TrueSizedLayoutDockHelper} this\n */\nTrueSizedLayoutDockHelper.prototype.fill = function (renderableName, size, translate = [0, 0, 0], otherSpecs) {\n    this._context.set(renderableName, {\n        size: [size[0] || this._data.right - this._data.left, size[1] || this._data.bottom - this._data.top],\n        translate: this._addTranslations([this._data.left, this._data.top, this._data.z], translate),\n        ...otherSpecs\n    });\n    return this;\n};\n\n/**\n * Applies indent margins to the remaining content.\n *\n * @param {Number|Array} margins margins shorthand (e.g. '5', [10, 10], [5, 10, 5, 10])\n * @return {TrueSizedLayoutDockHelper} this\n */\nTrueSizedLayoutDockHelper.prototype.margins = function (margins) {\n    margins = LayoutUtility.normalizeMargins(margins);\n    this._data.left += margins[3];\n    this._data.top += margins[0];\n    this._data.right -= margins[1];\n    this._data.bottom -= margins[2];\n    this._initialData.left = this._data.left;\n    this._initialData.right = this._data.right;\n    this._initialData.top = this._data.top;\n    this._initialData.bottom = this._data.bottom;\n    return this;\n};\n\nTrueSizedLayoutDockHelper.prototype._resolveSingleSize = function (size) {\n    return size < 0 ? ~size : size;\n};\nTrueSizedLayoutDockHelper.prototype._addTranslations = function (translation1, translation2) {\n    return [translation1[0] + translation2[0], translation1[1] + translation2[1], translation1[2] + translation2[2]];\n};\nTrueSizedLayoutDockHelper.prototype._ensureTrueSize = function (size) {\n    return size < 0 ? true : size;\n};\n\n\nTrueSizedLayoutDockHelper.prototype._setupAccordingToDimension = function (size, dim) {\n    let height;\n    let width;\n    if (size instanceof Array) {\n        let orthogonalDimension = dim ? 0 : 1;\n        let adjustedSize = [size[0], size[1]];\n        if (size[orthogonalDimension] < 0) {\n            /* If a true size was specified as an orhtogonal dimension, we just set it to true, as we don't need to save the value anywhere here */\n            adjustedSize[orthogonalDimension] = true;\n        }\n        width = adjustedSize[0];\n        height = adjustedSize[1];\n    } else {\n        width = size;\n    }\n    return [width, height];\n};\n\n/**\n * Gets the current left/right/top/bottom/z bounds used by the dock-helper.\n *\n * @return {Object} `{left: x, right: x, top: x, bottom: x, z: x}`\n */\nTrueSizedLayoutDockHelper.prototype.get = function () {\n    return this._data;\n};\n"
  },
  {
    "__docId__": 624,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "TrueSizedLayoutDockHelper",
    "memberof": "src/layout/TrueSizedLayoutDockHelper.js",
    "longname": "src/layout/TrueSizedLayoutDockHelper.js~TrueSizedLayoutDockHelper",
    "access": null,
    "export": true,
    "importPath": "./src/layout/TrueSizedLayoutDockHelper.js",
    "importStyle": "{TrueSizedLayoutDockHelper}",
    "description": "",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      },
      {
        "tagName": "@alias",
        "tagValue": "module:LayoutDockHelper"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "LayoutContext"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "layout-context"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "additional options"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.margins",
        "description": "margins to start out with (default: 0px)"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.translateZ",
        "description": "z-index to use when translating objects (default: 0)"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 625,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "parse",
    "memberof": "src/layout/TrueSizedLayoutDockHelper.js",
    "longname": "src/layout/TrueSizedLayoutDockHelper.js~parse",
    "access": null,
    "export": false,
    "importPath": "./src/layout/TrueSizedLayoutDockHelper.js",
    "importStyle": null,
    "description": "Parses the layout-rules based on a JSON data object.\n\n**Example:**\n\n```JSON\n[\n  ['top', 'header', 50],\n  ['bottom', 'footer', 50, 10], // z-index: 10\n  ['margins', [10, 5]], // marginate remaining space: 10px top/bottom, 5px left/right\n  ['fill', 'content']\n]\n```",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "JSON object"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 626,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "top",
    "memberof": "src/layout/TrueSizedLayoutDockHelper.js",
    "longname": "src/layout/TrueSizedLayoutDockHelper.js~top",
    "access": null,
    "export": false,
    "importPath": "./src/layout/TrueSizedLayoutDockHelper.js",
    "importStyle": null,
    "description": "Dock the node to the top. Sizes can also be specified as ~size, which makes them truesizes",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "LayoutNode",
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "node",
        "description": "layout-node to dock, when omitted the `height` argument argument is used for padding"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "of the node. If number, draws only one dimension and leaves the other one undefined"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "z",
        "description": "z-index to use for the node"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "space",
        "description": "the space inserted before this item, defaults to 0"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "extraTranslation",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TrueSizedLayoutDockHelper"
      ],
      "spread": false,
      "description": "this"
    },
    "generator": false
  },
  {
    "__docId__": 627,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "left",
    "memberof": "src/layout/TrueSizedLayoutDockHelper.js",
    "longname": "src/layout/TrueSizedLayoutDockHelper.js~left",
    "access": null,
    "export": false,
    "importPath": "./src/layout/TrueSizedLayoutDockHelper.js",
    "importStyle": null,
    "description": "Dock the node to the left. Sizes can also be specified as ~size, which makes them truesizes",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "LayoutNode",
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "node",
        "description": "layout-node to dock, when omitted the `width` argument argument is used for padding"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "of the node. If number, draws only one dimension and leaves the other one undefined"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "z",
        "description": "z-index to use for the node"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "space",
        "description": "the space inserted before this item, defaults to 0"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "extraTranslation",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TrueSizedLayoutDockHelper"
      ],
      "spread": false,
      "description": "this"
    },
    "generator": false
  },
  {
    "__docId__": 628,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "bottom",
    "memberof": "src/layout/TrueSizedLayoutDockHelper.js",
    "longname": "src/layout/TrueSizedLayoutDockHelper.js~bottom",
    "access": null,
    "export": false,
    "importPath": "./src/layout/TrueSizedLayoutDockHelper.js",
    "importStyle": null,
    "description": "Dock the node to the bottom. Sizes can also be specified as ~size, which makes them truesizes",
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "LayoutNode",
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "node",
        "description": "layout-node to dock, when omitted the `height` argument argument is used for padding"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "of the node. If number, draws only one dimension and leaves the other one undefined"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "z",
        "description": "z-index to use for the node"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "space",
        "description": "the space inserted before this item, defaults to 0"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "extraTranslation",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TrueSizedLayoutDockHelper"
      ],
      "spread": false,
      "description": "this"
    },
    "generator": false
  },
  {
    "__docId__": 629,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "right",
    "memberof": "src/layout/TrueSizedLayoutDockHelper.js",
    "longname": "src/layout/TrueSizedLayoutDockHelper.js~right",
    "access": null,
    "export": false,
    "importPath": "./src/layout/TrueSizedLayoutDockHelper.js",
    "importStyle": null,
    "description": "Dock the node to the right. Sizes can also be specified as ~size, which makes them truesizes",
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "LayoutNode",
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "node",
        "description": "layout-node to dock, when omitted the `width` argument argument is used for padding"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "of the node. If number, draws only one dimension and leaves the other one undefined"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "this._data.z",
        "description": "z-index to use for the node"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "space",
        "description": "the space inserted before this item, defaults to 0"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "extraTranslation",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TrueSizedLayoutDockHelper"
      ],
      "spread": false,
      "description": "this"
    },
    "generator": false
  },
  {
    "__docId__": 630,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "fill",
    "memberof": "src/layout/TrueSizedLayoutDockHelper.js",
    "longname": "src/layout/TrueSizedLayoutDockHelper.js~fill",
    "access": null,
    "export": false,
    "importPath": "./src/layout/TrueSizedLayoutDockHelper.js",
    "importStyle": null,
    "description": "Fills the node to the remaining content.",
    "lineNumber": 190,
    "params": [
      {
        "nullable": null,
        "types": [
          "LayoutNode",
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "node",
        "description": "layout-node to dock"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "z",
        "description": "z-index to use for the node"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TrueSizedLayoutDockHelper"
      ],
      "spread": false,
      "description": "this"
    },
    "generator": false
  },
  {
    "__docId__": 631,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "margins",
    "memberof": "src/layout/TrueSizedLayoutDockHelper.js",
    "longname": "src/layout/TrueSizedLayoutDockHelper.js~margins",
    "access": null,
    "export": false,
    "importPath": "./src/layout/TrueSizedLayoutDockHelper.js",
    "importStyle": null,
    "description": "Applies indent margins to the remaining content.",
    "lineNumber": 205,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "margins",
        "description": "margins shorthand (e.g. '5', [10, 10], [5, 10, 5, 10])"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TrueSizedLayoutDockHelper"
      ],
      "spread": false,
      "description": "this"
    },
    "generator": false
  },
  {
    "__docId__": 632,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_resolveSingleSize",
    "memberof": "src/layout/TrueSizedLayoutDockHelper.js",
    "longname": "src/layout/TrueSizedLayoutDockHelper.js~_resolveSingleSize",
    "access": null,
    "export": false,
    "importPath": "./src/layout/TrueSizedLayoutDockHelper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 218,
    "undocument": true,
    "params": [
      {
        "name": "size",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 633,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_addTranslations",
    "memberof": "src/layout/TrueSizedLayoutDockHelper.js",
    "longname": "src/layout/TrueSizedLayoutDockHelper.js~_addTranslations",
    "access": null,
    "export": false,
    "importPath": "./src/layout/TrueSizedLayoutDockHelper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 221,
    "undocument": true,
    "params": [
      {
        "name": "translation1",
        "types": [
          "*"
        ]
      },
      {
        "name": "translation2",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 634,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_ensureTrueSize",
    "memberof": "src/layout/TrueSizedLayoutDockHelper.js",
    "longname": "src/layout/TrueSizedLayoutDockHelper.js~_ensureTrueSize",
    "access": null,
    "export": false,
    "importPath": "./src/layout/TrueSizedLayoutDockHelper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 224,
    "undocument": true,
    "params": [
      {
        "name": "size",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 635,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "_setupAccordingToDimension",
    "memberof": "src/layout/TrueSizedLayoutDockHelper.js",
    "longname": "src/layout/TrueSizedLayoutDockHelper.js~_setupAccordingToDimension",
    "access": null,
    "export": false,
    "importPath": "./src/layout/TrueSizedLayoutDockHelper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 229,
    "undocument": true,
    "params": [
      {
        "name": "size",
        "types": [
          "*"
        ]
      },
      {
        "name": "dim",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 636,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "get",
    "memberof": "src/layout/TrueSizedLayoutDockHelper.js",
    "longname": "src/layout/TrueSizedLayoutDockHelper.js~get",
    "access": null,
    "export": false,
    "importPath": "./src/layout/TrueSizedLayoutDockHelper.js",
    "importStyle": null,
    "description": "Gets the current left/right/top/bottom/z bounds used by the dock-helper.",
    "lineNumber": 252,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "`{left: x, right: x, top: x, bottom: x, z: x}`"
    },
    "generator": false
  },
  {
    "__docId__": 637,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/main.js",
    "memberof": null,
    "longname": "src/main.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n @author: Hans van den Akker (mysim1)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\nexport * from './core/App.js';\nexport * from './core/View.js';\nexport * from './core/Router.js';\nexport * from './core/Controller.js';\nexport * from './data/Snapshot.js';\nexport * from './data/DataSource.js';\nexport * from './data/PrioritisedArray.js';\nexport * from './data/PrioritisedObject.js';\nexport * from './data/datasources/FirebaseDataSource.js';\nexport * from './data/datasources/SharePointDataSource.js';\nexport * from './data/datasources/SharePoint/DataModelGenerator.js';\nexport * from './data/datasources/SharePoint/SharePointSnapshot.js';\nexport * from './layout/Decorators.js';\nexport * from './routers/ArvaRouter.js';\nexport * from './utils/di/Decorators.js';\nexport * from './utils/hotfixes/Polyfills.js';\nexport * from './utils/hotfixes/IESupport.js';\nexport * from './utils/hotfixes/FamousKeyboardOffset.js';\nexport * from './utils/hotfixes/DisableTextSelection.js';\nexport * from './utils/CombineOptions.js';\nexport * from './utils/DialogManager.js';\nexport * from './utils/ImageLoader.js';\nexport * from './utils/Injection.js';\nexport * from './utils/Limiter.js';\nexport * from './utils/ObjectHelper.js';\nexport * from './utils/Throttler.js';\nexport * from './components/DataBoundScrollView.js';"
  },
  {
    "__docId__": 638,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/routers/ArvaRouter.js",
    "memberof": null,
    "longname": "src/routers/ArvaRouter.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Hans van den Akker (mysim1)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport isEqual                      from 'lodash/isEqual';\nimport {Router}                     from '../core/Router.js';\nimport {provide}                    from '../utils/di/Decorators.js';\nimport Easing                       from 'famous/transitions/Easing.js';\nimport AnimationController          from 'famous-flex/AnimationController.js';\n\n@provide(Router)\nexport class ArvaRouter extends Router {\n\n    routes = {};\n    history = [];\n    decode = decodeURIComponent;\n    defaultController = 'Home';\n    defaultMethod = 'Index';\n\n    constructor() {\n        super();\n        if (window == null) {\n            return;\n        }\n        window.addEventListener('hashchange', this.run);\n\n        if (window == null) {\n            return;\n        }\n\n        this.routes = {};\n        this.history = [];\n        this.decode = decodeURIComponent;\n\n\n        window.addEventListener('hashchange', this.run);\n        this._setupNativeBackButtonListener();\n    }\n\n    /**\n     * Sets the initial controller and method to be activated whenever the controllers are activated.\n     * @param {Controller|Function|String} controller Default controller instance, controller constructor, or controller name to go to.\n     * @param {String} method Default method to call in given controller.\n     * @returns {void}\n     */\n    setDefault(controller, method = null) {\n\n        this.defaultController = this._getControllerName(controller);\n\n        if (method != null) {\n            this.defaultMethod = method;\n        }\n    }\n\n    /**\n     * Sets the animation specs object for use by the famous-flex AnimationController.\n     * @param {Object} specs Animation specs, keyed by target controller.\n     * @returns {void}\n     */\n    setControllerSpecs(specs) {\n        this.specs = specs;\n    }\n\n    /**\n     * Triggers navigation to one of the controllers\n     * @param {Controller|Function|String} controller The controller instance, controller constructor, or controller name to go to.\n     * @param {String} method The method to call in given controller.\n     * @param {Object} params Dictonary of key-value pairs containing named arguments (i.e. {id: 1, test: \"yes\"})\n     * @returns {void}\n     */\n    go(controller, method, params = null) {\n\n        let controllerName = this._getControllerName(controller);\n\n        let routeRoot = controllerName\n            .replace(this.defaultController, '')\n            .replace('Controller', '');\n\n        let hash = '#' + (routeRoot.length > 0 ? '/' + routeRoot : '') + ('/' + method);\n        if (params !== null) {\n            for (let i = 0; i < Object.keys(params).length; i++) {\n                var key = Object.keys(params)[i];\n                hash += i == 0 ? '?' : '&';\n                hash += (key + '=' + params[key]);\n            }\n        }\n\n        if (history.pushState) {\n            history.pushState(null, null, hash);\n        }\n\n        this.run();\n    }\n\n\n    /**\n     * Registers a single controller.\n     * @param {String} route Route to trigger handler on.\n     * @param {Object} handlers\n     * @param {Function} handler.enter Method to call on entering a route.\n     * @param {Function} handler.leave Method to call on when leaving a route.\n     * @returns {void}\n     */\n    add(route, {enter, leave}, controller) {\n        let pieces = route.split('/'),\n            rules = this.routes;\n\n        for (let i = 0; i < pieces.length; ++i) {\n            let piece = pieces[i],\n                name = piece[0] === ':' ? ':' : piece;\n\n            rules = rules[name] || (rules[name] = {});\n\n            if (name === ':') {\n                rules['@name'] = piece.slice(1);\n            }\n        }\n\n        rules['enter'] = enter;\n        rules['leave'] = leave;\n        rules['controller'] = controller;\n\n    }\n\n    /**\n     * On a route change, calls the corresponding controller method with the given parameter values.\n     * @returns {Boolean} Whether the current route was successfully ran.\n     */\n    run() {\n        let url = window.location.hash.replace('#', '');\n\n        if (url !== '') {\n            url = url.replace('/?', '?');\n            url[0] === '/' && (url = url.slice(1));\n            url.slice(-1) === '/' && (url = url.slice(0, -1));\n        }\n\n        let rules = this.routes,\n            querySplit = url.split('?'),\n            pieces = querySplit[0].split('/'),\n            values = [],\n            keys = [],\n            method = '';\n        for (let piece in pieces) {\n            if (pieces[piece].indexOf('=') > -1) {\n                let splitted = pieces[piece].split('=');\n                pieces[piece] = splitted[0];\n                querySplit.push(pieces[piece] + '=' + splitted[1]);\n            }\n        }\n\n        let rule = null;\n        let controller;\n\n        // if there is no controller reference, assume we have hit the default Controller\n        if (pieces.length === 1 && pieces[0].length === 0) {\n            pieces[0] = this.defaultController;\n            pieces.push(this.defaultMethod);\n        } else if (pieces.length === 1 && pieces[0].length > 0) {\n            pieces.unshift(this.defaultController);\n        }\n\n        controller = pieces[0];\n\n        // Parse the non-query portion of the URL...\n        for (let i = 0; i < pieces.length && rules; ++i) {\n            let piece = this.decode(pieces[i]);\n            rule = rules[piece];\n\n            if (!rule && (rule = rules[':'])) {\n                method = piece;\n            }\n\n            rules = rules[piece];\n        }\n\n        (function parseQuery(q) {\n            let query = q.split('&');\n\n            for (let i = 0; i < query.length; ++i) {\n                let nameValue = query[i].split('=');\n\n                if (nameValue.length > 1) {\n                    keys.push(nameValue[0]);\n                    values.push(this.decode(nameValue[1]));\n                }\n            }\n        }).call(this, querySplit.length > 1 ? querySplit[1] : '');\n\n        if (rule && rule['enter']) {\n\n            /* Push current route to the history stack for later use */\n            let previousRoute = this.history.length ? this.history[this.history.length - 1] : undefined;\n            let currentRoute = {\n                url: url,\n                controller: controller,\n                controllerObject: rule['controller'],\n                method: method,\n                keys: keys,\n                values: values\n            };\n\n            if(previousRoute){\n                if(currentRoute.controllerObject !== previousRoute.controllerObject){\n                    this.routes[previousRoute.controller][':']['leave'](currentRoute);\n                }\n            }\n            currentRoute.spec = previousRoute ? this._getAnimationSpec(previousRoute, currentRoute) : (this._initialSpec || {});\n            this._setHistory(currentRoute);\n\n            this._executeRoute(rule, currentRoute);\n\n            return true;\n        } else {\n            console.log('Controller doesn\\'t exist!');\n        }\n\n        return false;\n    }\n\n    setInitialSpec(spec) {\n        this._initialSpec = spec;\n    }\n\n    setBackButtonEnabled(enabled) {\n        this._backButtonEnabled = enabled;\n    }\n\n    isBackButtonEnabled() {\n        return this._backButtonEnabled;\n    }\n\n    goBackInHistory() {\n        /* Default behaviour: go back in history in the arva router */\n        let {history} = this;\n        if (history.length > 1) {\n            let {controller, method, keys, values} = history[history.length - 2];\n            let inputObject = {};\n            for (let i = 0; i < keys.length; i++) {\n                inputObject[keys[i]] = values[i];\n            }\n            this.go(controller, method, inputObject);\n        } else {\n            this.go(this.defaultController, this.defaultMethod);\n        }\n    }\n\n    _setupNativeBackButtonListener() {\n        this._backButtonEnabled = true;\n        document.addEventListener(\"backbutton\", (e) => {\n            if (!this._backButtonEnabled) {\n                e.preventDefault();\n            } else {\n                this.goBackInHistory();\n            }\n        }, false);\n    }\n\n\n    /**\n     * Executes the controller handler associated with a given route, passing the route as a parameter.\n     * @param {Object} rule Rule handler to execute.\n     * @param {Object} route Route object to pass as parameter.\n     * @returns {void}\n     * @private\n     */\n    _executeRoute(rule, route) {\n        /* Make the controller active for current scope */\n        if (rule['enter'](route)) {\n            this.emit('routechange', route);\n        }\n    }\n\n    /**\n     * Checks if the current route is already present in the history stack, and if so removes all entries after\n     * and including the first occurrence. It will then append the current route to the history stack.\n     * @param {Object} currentRoute Route object containing url, controller, method, keys, and values.\n     * @returns {void}\n     * @private\n     */\n    _setHistory(currentRoute) {\n        for (let i = 0; i < this.history.length; i++) {\n            let previousRoute = this.history[i];\n            if (currentRoute.controller === previousRoute.controller &&\n                currentRoute.method === previousRoute.method &&\n                isEqual(currentRoute.values, previousRoute.values)) {\n                this.history.splice(i, this.history.length - i);\n                break;\n            }\n        }\n\n        this.history.push(currentRoute);\n    }\n\n    /**\n     * CheckS whether a route is already present in the history stack.\n     * @param {Object} currentRoute Route object containing url, controller, method, keys, and values.\n     * @returns {Boolean} Whether the route has been visited previously.\n     * @private\n     */\n    _hasVisited(currentRoute) {\n        for (let i = 0; i < this.history.length; i++) {\n            let previousRoute = this.history[i];\n            if (currentRoute.controller === previousRoute.controller &&\n                currentRoute.method === previousRoute.method &&\n                isEqual(currentRoute.values, previousRoute.values)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns the Famous-Flex animation spec for two given routes. Takes its spec inputs from the specs set in\n     * router.setControllerSpecs(), which is called from the app constructor.\n     * @param {Object} previousRoute Previous route object containing url, controller, method, keys, and values.\n     * @param {Object} currentRoute Current route object containing url, controller, method, keys, and values.\n     * @returns {Object} A spec object if one is found, or an empty object otherwise.\n     * @private\n     */\n    _getAnimationSpec(previousRoute, currentRoute) {\n        let fromController = previousRoute.controller;\n        let toController = currentRoute.controller;\n\n        if (fromController.indexOf('Controller') === -1) {\n            fromController += 'Controller';\n        }\n        if (toController.indexOf('Controller') === -1) {\n            toController += 'Controller';\n        }\n\n        /* We're on exactly the same page as before */\n        if (currentRoute.controller === previousRoute.controller &&\n            currentRoute.method === previousRoute.method &&\n            isEqual(currentRoute.values, previousRoute.values)) {\n            return {};\n        }\n\n        /* Same controller, different method or different parameters */\n        if (currentRoute.controller === previousRoute.controller) {\n\n            let direction = this._hasVisited(currentRoute) ? 'previous' : 'next';\n            if (this.specs && this.specs[fromController] && this.specs[fromController].methods) {\n                return this.specs[fromController].methods[direction];\n            }\n\n            /* Default method-to-method animations, used only if not overridden in app's controllers spec. */\n            let defaults = {\n                'previous': {\n                    transition: {duration: 400, curve: Easing.outBack},\n                    animation: AnimationController.Animation.Slide.Right\n                },\n                'next': {\n                    transition: {duration: 400, curve: Easing.outBack},\n                    animation: AnimationController.Animation.Slide.Left\n                }\n            };\n            return defaults[direction];\n        }\n\n        /* Different controller */\n        if (this.specs && this.specs.hasOwnProperty(toController) && this.specs[toController].controllers) {\n            let controllerSpecs = this.specs[toController].controllers;\n            for (let specIndex in controllerSpecs) {\n                let spec = controllerSpecs[specIndex];\n                if (spec.activeFrom && spec.activeFrom.indexOf(fromController) !== -1) {\n                    return spec;\n                }\n            }\n        }\n\n        console.log('No spec defined from ' + fromController + ' to ' + toController + '. Please check router.setControllerSpecs() in your app constructor.');\n    }\n\n    /**\n     * Extracts a controller name from a given string, constructor, or controller instance. 'Controller' part is not included in the returned name.\n     * E.g. _getControllerName(HomeController) -> 'Home'.\n     * @param {Function|Object|String} controller String, constructor, or controller instance.\n     * @returns {String} Name of the controller\n     * @private\n     */\n    _getControllerName(controller) {\n        if (typeof controller === 'string') {\n            return controller.replace('Controller', '');\n        } else if (typeof controller === 'function' && Object.getPrototypeOf(controller).constructor.name == 'Function') {\n            /* The _name property is set by babel-plugin-transform-runtime-constructor-name.\n             * This is done so Controller class names remain available in minimised code. */\n            let controllerName = controller._name || controller.name;\n            return controllerName.replace('Controller', '');\n        } else {\n            return typeof controller === 'object' ?\n                Object.getPrototypeOf(controller).constructor.name.replace('Controller', '') : typeof controller;\n        }\n    }\n\n}"
  },
  {
    "__docId__": 639,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ArvaRouter",
    "memberof": "src/routers/ArvaRouter.js",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter",
    "access": null,
    "export": true,
    "importPath": "./src/routers/ArvaRouter.js",
    "importStyle": "{ArvaRouter}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/core/Router.js~Router"
    ]
  },
  {
    "__docId__": 640,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#constructor",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 641,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "routes",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#routes",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 642,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "history",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#history",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 643,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "decode",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#decode",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 644,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setDefault",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#setDefault",
    "access": null,
    "description": "Sets the initial controller and method to be activated whenever the controllers are activated.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Controller",
          "Function",
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "controller",
        "description": "Default controller instance, controller constructor, or controller name to go to."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "Default method to call in given controller."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 645,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "defaultController",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#defaultController",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 646,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "defaultMethod",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#defaultMethod",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 647,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setControllerSpecs",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#setControllerSpecs",
    "access": null,
    "description": "Sets the animation specs object for use by the famous-flex AnimationController.",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "specs",
        "description": "Animation specs, keyed by target controller."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 648,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "specs",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#specs",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 649,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "go",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#go",
    "access": null,
    "description": "Triggers navigation to one of the controllers",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Controller",
          "Function",
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "controller",
        "description": "The controller instance, controller constructor, or controller name to go to."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "The method to call in given controller."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "Dictonary of key-value pairs containing named arguments (i.e. {id: 1, test: \"yes\"})"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 650,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#add",
    "access": null,
    "description": "Registers a single controller.",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Route to trigger handler on."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "handlers",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler.enter",
        "description": "Method to call on entering a route."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler.leave",
        "description": "Method to call on when leaving a route."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 651,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "run",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#run",
    "access": null,
    "description": "On a route change, calls the corresponding controller method with the given parameter values.",
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} Whether the current route was successfully ran."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the current route was successfully ran."
    },
    "generator": false
  },
  {
    "__docId__": 652,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setInitialSpec",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#setInitialSpec",
    "access": null,
    "description": null,
    "lineNumber": 226,
    "undocument": true,
    "params": [
      {
        "name": "spec",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 653,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_initialSpec",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#_initialSpec",
    "access": null,
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 654,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setBackButtonEnabled",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#setBackButtonEnabled",
    "access": null,
    "description": null,
    "lineNumber": 230,
    "undocument": true,
    "params": [
      {
        "name": "enabled",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 655,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_backButtonEnabled",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#_backButtonEnabled",
    "access": null,
    "description": null,
    "lineNumber": 231,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 656,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isBackButtonEnabled",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#isBackButtonEnabled",
    "access": null,
    "description": null,
    "lineNumber": 234,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 657,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "goBackInHistory",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#goBackInHistory",
    "access": null,
    "description": null,
    "lineNumber": 238,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 658,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_setupNativeBackButtonListener",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#_setupNativeBackButtonListener",
    "access": null,
    "description": null,
    "lineNumber": 253,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 659,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_backButtonEnabled",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#_backButtonEnabled",
    "access": null,
    "description": null,
    "lineNumber": 254,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 660,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_executeRoute",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#_executeRoute",
    "access": "private",
    "description": "Executes the controller handler associated with a given route, passing the route as a parameter.",
    "lineNumber": 272,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "rule",
        "description": "Rule handler to execute."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "Route object to pass as parameter."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 661,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_setHistory",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#_setHistory",
    "access": "private",
    "description": "Checks if the current route is already present in the history stack, and if so removes all entries after\nand including the first occurrence. It will then append the current route to the history stack.",
    "lineNumber": 286,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "currentRoute",
        "description": "Route object containing url, controller, method, keys, and values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 662,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_hasVisited",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#_hasVisited",
    "access": "private",
    "description": "CheckS whether a route is already present in the history stack.",
    "lineNumber": 306,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} Whether the route has been visited previously."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "currentRoute",
        "description": "Route object containing url, controller, method, keys, and values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Whether the route has been visited previously."
    },
    "generator": false
  },
  {
    "__docId__": 663,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getAnimationSpec",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#_getAnimationSpec",
    "access": "private",
    "description": "Returns the Famous-Flex animation spec for two given routes. Takes its spec inputs from the specs set in\nrouter.setControllerSpecs(), which is called from the app constructor.",
    "lineNumber": 327,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} A spec object if one is found, or an empty object otherwise."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "previousRoute",
        "description": "Previous route object containing url, controller, method, keys, and values."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "currentRoute",
        "description": "Current route object containing url, controller, method, keys, and values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "A spec object if one is found, or an empty object otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 664,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getControllerName",
    "memberof": "src/routers/ArvaRouter.js~ArvaRouter",
    "longname": "src/routers/ArvaRouter.js~ArvaRouter#_getControllerName",
    "access": "private",
    "description": "Extracts a controller name from a given string, constructor, or controller instance. 'Controller' part is not included in the returned name.\nE.g. _getControllerName(HomeController) -> 'Home'.",
    "lineNumber": 388,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{String} Name of the controller"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function",
          "Object",
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "controller",
        "description": "String, constructor, or controller instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "Name of the controller"
    },
    "generator": false
  },
  {
    "__docId__": 665,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/BlobHelper.js",
    "memberof": null,
    "longname": "src/utils/BlobHelper.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n @author: Hans van den Akker (mysim1)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\n/**\n * Helper class for converting base64 string data to a HTML5 Blob object.\n **/\nexport class BlobHelper {\n\n    /**\n     * Convert base64 string data to a HTML5 Blob object.\n     * @param {String} b64Data Base64 data to convert to Blob\n     * @param {String} contentType Content type\n     * @param {Number} sliceSize How large the chunks are in which we process the data.\n     * @returns {Blob} Blob of raw data.\n     */\n    static base64toBlob(b64Data, contentType, sliceSize) {\n        contentType = contentType || '';\n        sliceSize = sliceSize || 512;\n\n        let byteCharacters = atob(b64Data);\n        let byteCharLength = byteCharacters.length;\n        let byteArrays = [];\n\n        for (var offset = 0; offset < byteCharLength; offset += sliceSize) {\n            let slice = byteCharacters.slice(offset, offset + sliceSize);\n            let sliceLength = slice.length;\n            let byteNumbers = new Array(sliceLength);\n            for (var i = 0; i < sliceLength; i++) {\n                byteNumbers[i] = slice.charCodeAt(i);\n            }\n\n            var byteArray = new Uint8Array(byteNumbers);\n\n            byteArrays.push(byteArray);\n        }\n\n        var blob = new Blob(byteArrays, {type: contentType});\n        return blob;\n    }\n}"
  },
  {
    "__docId__": 666,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BlobHelper",
    "memberof": "src/utils/BlobHelper.js",
    "longname": "src/utils/BlobHelper.js~BlobHelper",
    "access": null,
    "export": true,
    "importPath": "./src/utils/BlobHelper.js",
    "importStyle": "{BlobHelper}",
    "description": "Helper class for converting base64 string data to a HTML5 Blob object.",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 667,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "base64toBlob",
    "memberof": "src/utils/BlobHelper.js~BlobHelper",
    "longname": "src/utils/BlobHelper.js~BlobHelper.base64toBlob",
    "access": null,
    "description": "Convert base64 string data to a HTML5 Blob object.",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Blob} Blob of raw data."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "b64Data",
        "description": "Base64 data to convert to Blob"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "contentType",
        "description": "Content type"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "sliceSize",
        "description": "How large the chunks are in which we process the data."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Blob"
      ],
      "spread": false,
      "description": "Blob of raw data."
    },
    "generator": false
  },
  {
    "__docId__": 668,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/CallbackHelpers.js",
    "memberof": null,
    "longname": "src/utils/CallbackHelpers.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by tom on 22/08/16.\n */\n\nimport Timer                    from 'famous/utilities/Timer.js';\n\nexport function callbackToPromise(functionWithCallback, ...args) {\n    return new Promise(function(resolve){ functionWithCallback(...args, resolve); });\n}\n\nexport function successAndErrorToPromise() {\n    return new Promise(function(resolve, reject){ functionWithCallback(...args, resolve, reject); });\n}\n\nexport function waitMilliseconds(milliseconds) {\n    return new Promise((resolve) => Timer.setTimeout(resolve, milliseconds));\n}"
  },
  {
    "__docId__": 669,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "callbackToPromise",
    "memberof": "src/utils/CallbackHelpers.js",
    "longname": "src/utils/CallbackHelpers.js~callbackToPromise",
    "access": null,
    "export": true,
    "importPath": "./src/utils/CallbackHelpers.js",
    "importStyle": "{callbackToPromise}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "functionWithCallback",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 670,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "successAndErrorToPromise",
    "memberof": "src/utils/CallbackHelpers.js",
    "longname": "src/utils/CallbackHelpers.js~successAndErrorToPromise",
    "access": null,
    "export": true,
    "importPath": "./src/utils/CallbackHelpers.js",
    "importStyle": "{successAndErrorToPromise}",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 671,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "waitMilliseconds",
    "memberof": "src/utils/CallbackHelpers.js",
    "longname": "src/utils/CallbackHelpers.js~waitMilliseconds",
    "access": null,
    "export": true,
    "importPath": "./src/utils/CallbackHelpers.js",
    "importStyle": "{waitMilliseconds}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "milliseconds",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 672,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/CombineOptions.js",
    "memberof": null,
    "longname": "src/utils/CombineOptions.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n @author: Karl Lundfall (lundfall)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n */\n\nimport camelCase            from 'camelcase';\nimport isEmpty              from 'lodash/isEmpty.js';\nimport mergeWith            from 'lodash/mergeWith.js';\nimport cloneDeepWith        from 'lodash/cloneDeepWith.js';\n\nfunction famousMerge(defaultParam, specifiedParam) {\n    if (Array.isArray(defaultParam) && Array.isArray(specifiedParam)) {\n        let i, results = [];\n        for (i = 0; i < specifiedParam.length; i++) {\n            let defaultElement = defaultParam[i];\n            let specifiedElement = specifiedParam[i];\n\n            /* This is one special case that we want to take into account,\n             (more spcecifically, we want to be able to set the size to undefined) */\n            if (specifiedElement === undefined) {\n                results.push(specifiedElement);\n            } else {\n                let resultingElement;\n                if (typeof specifiedElement !== 'object' || typeof resultingElement !== 'object') {\n                    resultingElement = specifiedElement;\n                } else {\n                    resultingElement = mergeWith(defaultElement, specifiedElement, famousMerge);\n                }\n                results.push(resultingElement);\n            }\n        }\n        for (; i < defaultParam.length; i++) {\n            results.push(defaultParam[i]);\n        }\n        return results;\n    }\n\n\n    for (let param of [specifiedParam, defaultParam]) {\n        if (!Array.isArray(param)) {\n\n            if (typeof param === 'object' && !!param) {\n\n                /*\n                 * Make sure that we don't merge instances of classes. You _could_ trick this system by specifying an object\n                 * with the parameter constructor {name: 'Object'} or specifying a class named Object (don't)\n                 */\n                if (param.constructor.name !== 'Object') {\n                    return specifiedParam;\n                }\n\n\n                if (isEmpty(param)) {\n                    return param === specifiedParam ? defaultParam : specifiedParam;\n                }\n\n\n            }\n        }\n    }\n    let hasDashProperty = false;\n    /*\n     * Style parameters can be specified with dash-case or camelCase, which we correct here\n     */\n    let shallowParamCopies = [{}, {}];\n    for (let [param, shallowCopy] of [[specifiedParam, shallowParamCopies[0]], [defaultParam, shallowParamCopies[1]]]) {\n        for (let key in param) {\n            let value = param[key];\n            if (~key.indexOf('-')) {\n                hasDashProperty = true;\n                key = camelCase(key);\n            }\n            shallowCopy[key] = value;\n        }\n    }\n    if (hasDashProperty) {\n        return mergeWith(shallowParamCopies[1], shallowParamCopies[0], famousMerge);\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Helper function used to clone without cloning class instances\n * @param value\n * @returns {*}\n */\nfunction dontCloneClassInstances(value) {\n    if (typeof value === 'object' && !!value && !Array.isArray(value) && value.constructor.name !== 'Object') {\n        return value;\n    }\n}\n\n/**\n *\n * @param defaultOptions\n * @param options\n * @returns {*}\n */\nexport function combineOptions(defaultOptions, options) {\n    let clonedDefaultOptions = cloneDeepWith(defaultOptions, dontCloneClassInstances);\n    return mergeWith({root: clonedDefaultOptions}, {root: options}, famousMerge).root;\n}\n"
  },
  {
    "__docId__": 673,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "famousMerge",
    "memberof": "src/utils/CombineOptions.js",
    "longname": "src/utils/CombineOptions.js~famousMerge",
    "access": null,
    "export": false,
    "importPath": "./src/utils/CombineOptions.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "defaultParam",
        "types": [
          "*"
        ]
      },
      {
        "name": "specifiedParam",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 674,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "dontCloneClassInstances",
    "memberof": "src/utils/CombineOptions.js",
    "longname": "src/utils/CombineOptions.js~dontCloneClassInstances",
    "access": null,
    "export": false,
    "importPath": "./src/utils/CombineOptions.js",
    "importStyle": null,
    "description": "Helper function used to clone without cloning class instances",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 675,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "combineOptions",
    "memberof": "src/utils/CombineOptions.js",
    "longname": "src/utils/CombineOptions.js~combineOptions",
    "access": null,
    "export": true,
    "importPath": "./src/utils/CombineOptions.js",
    "importStyle": "{combineOptions}",
    "description": "",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultOptions",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 676,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/DialogManager.js",
    "memberof": null,
    "longname": "src/utils/DialogManager.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by lundfall on 06/07/16.\n */\nimport Timer                 from 'famous/utilities/Timer';\nimport AnimationController   from 'famous-flex/AnimationController';\nimport Surface               from 'famous/core/Surface';\nimport FamousContext         from 'famous/core/Context.js';\n\nimport {View}                from 'arva-js/core/View.js';\nimport {ObjectHelper}        from 'arva-js/utils/ObjectHelper';\n\nimport {Injection}           from './Injection.js';\nimport {Router}              from '../core/Router.js';\nimport {layout}              from '../layout/decorators.js';\nimport Easing                from 'famous/transitions/Easing.js';\n\n@layout.scrollable({overscroll: false})\nclass DialogWrapper extends View {\n\n    /**\n     * Defines the size that is appropriate for the dialog. The dialog can return undefined on its getSize function for\n     * full-blown sizing instead of true sizing, and it can define a maxSize to specify a maximum that causes the margins\n     * to get larger.\n     * @param size\n     */\n    determineSizeWithMargins (size, maxSize, dimension) {\n        return ~Math.min(maxSize ? maxSize[dimension] : 480, size[dimension] - 32);\n    }\n\n    @layout.size(function(...size) {return this.determineSizeWithMargins(size, this.options.dialog.maxSize, 0)},\n        function(...size) {return this.determineSizeWithMargins(size, this.options.dialog.maxSize, 0)})\n    @layout.stick.center()\n    dialog = this.options.dialog;\n\n    onNewParentSize(parentSize) {\n        this._parentSize = parentSize;\n    }\n\n    getSize() {\n        if (!this._parentSize) {\n            return [undefined, undefined];\n        }\n        let dialogHeight = this.dialog.getSize()[1];\n        return this._parentSize[1] > dialogHeight ? [undefined, this._parentSize[1]] : [undefined, dialogHeight];\n    }\n\n}\n\nexport class DialogManager extends View {\n\n    @layout.fullSize()\n    @layout.animate({showInitially: false, animation: AnimationController.Animation.Fade})\n    @layout.translate(0, 0, 9000)\n    background = new Surface({\n        properties: {\n            /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#000000+0,000000+100&0.2+0,0.6+100 */\n            background: 'radial-gradient(ellipse at center, rgba(0,0,0,0.2) 0%,rgba(0,0,0,0.6) 100%)', /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */\n            filter: \"progid:DXImageTransform.Microsoft.gradient( startColorstr='#33000000', endColorstr='#99000000',GradientType=1 )\" /* IE6-9 fallback on horizontal gradient */\n        }\n    });\n\n    @layout.translate(0, 0, 9500)\n    @layout.fullSize()\n    @layout.animate({\n        show: {transition: {curve: Easing.outCubic, duration: 300}, animation: AnimationController.Animation.Slide.Up},\n        hide: {transition: {curve: Easing.inCubic, duration: 300}, animation: AnimationController.Animation.Slide.Down},\n        showInitially: false\n    })\n    /* Empty content until filled */\n    dialog = {};\n\n\n    constructor(options = {}) {\n        super(options);\n        /* For ionic-plugin-keyboard */\n        if (window.Keyboard) {\n            /* Prevent keyboard from showing */\n            window.addEventListener('native.keyboardshow', () => {\n                /* Hides the keyboard when a dialog is  shown */\n                if (this._hasOpenDialog) {\n                    Keyboard.hide();\n                }\n            });\n        }\n        this.router = Injection.get(Router);\n        let famousContext = Injection.get(FamousContext);\n        famousContext.add(this);\n\n        this.layout.on('layoutstart', ({size}) => {\n            if (this.dialog.onNewParentSize) {\n                this.dialog.onNewParentSize(size);\n                this._savedParentSize = null;\n            } else {\n                this._savedParentSize = size;\n            }\n        });\n\n\n        document.addEventListener(\"backbutton\", this._onClose);\n        this.renderables.background.on('click', this._onClose);\n    }\n\n    /**\n     *\n     * @param dialog\n     * @param canCancel\n     * @param killOldDialog\n     * @returns {*}\n     */\n    show({dialog, canCancel = true, killOldDialog = true}) {\n        if (this._hasOpenDialog) {\n            /* If already open dialog we should either close that one, or just keep the current one, depending on the settings */\n            if (!killOldDialog) {\n                return;\n            }\n            this.close();\n        }\n        this._hasOpenDialog = true;\n\n        /* Replace whatever non-showing dialog we have right now with the new dialog */\n        this.replaceRenderable('dialog', new DialogWrapper({dialog}));\n        if (this._savedParentSize) {\n            this.dialog.onNewParentSize(this._savedParentSize);\n        }\n        this._canCancel = canCancel;\n        if (canCancel) {\n            /* Disable existing default behavior of backbutton going back to previous route */\n            this.initialBackButtonState = this.router.isBackButtonEnabled();\n            this.router.setBackButtonEnabled(false);\n        }\n\n        /* Show the dialog */\n        this.showRenderable('dialog');\n\n        this.dialog.on('closeDialog', (function () {\n            /* Forward the arguments coming from the event emitter when closing */\n            this.close(...arguments)\n        }).bind(this));\n\n        /* Showing the background immediately propagates user's click event that triggered the show() directly to the background,\n         * closing the dialog again. Delaying showing the background circumvents this issue. */\n        Timer.setTimeout(() => {\n            if (this._hasOpenDialog) {\n                this.showRenderable('background');\n            }\n        }, 10);\n        return this.dialogComplete();\n    }\n\n\n    _onClose() {\n        if (this._canCancel) {\n            this.close();\n        }\n    }\n\n    hasOpenDialog() {\n        return this._hasOpenDialog;\n    }\n\n\n    dialogComplete() {\n        if (!this._resolveDialogComplete) {\n            return this._resolveDialogPromise = new Promise((resolve) => {\n                this._resolveDialogComplete = resolve\n            });\n        } else {\n            return this._resolveDialogPromise;\n        }\n\n    }\n\n    close() {\n        if (this._hasOpenDialog) {\n\n            /* Restore back button state */\n            if (this._canCancel) {\n                this.router.setBackButtonEnabled(this.initialBackButtonState);\n            }\n            /* Resolve promise if necessary */\n            if (this._resolveDialogComplete) {\n                this._resolveDialogComplete(arguments);\n                this._resolveDialogComplete = null;\n            }\n            this._hasOpenDialog = false;\n\n            this.hideRenderable('dialog');\n            this.hideRenderable('background');\n            this._eventOutput.emit('close', ...arguments);\n        }\n    }\n}\n"
  },
  {
    "__docId__": 677,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DialogWrapper",
    "memberof": "src/utils/DialogManager.js",
    "longname": "src/utils/DialogManager.js~DialogWrapper",
    "access": null,
    "export": false,
    "importPath": "./src/utils/DialogManager.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "interface": false,
    "extends": [
      "arva-js/core/View.js~View"
    ]
  },
  {
    "__docId__": 678,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "determineSizeWithMargins",
    "memberof": "src/utils/DialogManager.js~DialogWrapper",
    "longname": "src/utils/DialogManager.js~DialogWrapper#determineSizeWithMargins",
    "access": null,
    "description": "Defines the size that is appropriate for the dialog. The dialog can return undefined on its getSize function for\nfull-blown sizing instead of true sizing, and it can define a maxSize to specify a maximum that causes the margins\nto get larger.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 679,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "onNewParentSize",
    "memberof": "src/utils/DialogManager.js~DialogWrapper",
    "longname": "src/utils/DialogManager.js~DialogWrapper#onNewParentSize",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "params": [
      {
        "name": "parentSize",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 680,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_parentSize",
    "memberof": "src/utils/DialogManager.js~DialogWrapper",
    "longname": "src/utils/DialogManager.js~DialogWrapper#_parentSize",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 681,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSize",
    "memberof": "src/utils/DialogManager.js~DialogWrapper",
    "longname": "src/utils/DialogManager.js~DialogWrapper#getSize",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 682,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DialogManager",
    "memberof": "src/utils/DialogManager.js",
    "longname": "src/utils/DialogManager.js~DialogManager",
    "access": null,
    "export": true,
    "importPath": "./src/utils/DialogManager.js",
    "importStyle": "{DialogManager}",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "interface": false,
    "extends": [
      "arva-js/core/View.js~View"
    ]
  },
  {
    "__docId__": 683,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#constructor",
    "access": null,
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 684,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "router",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#router",
    "access": null,
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 685,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_savedParentSize",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#_savedParentSize",
    "access": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 686,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_savedParentSize",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#_savedParentSize",
    "access": null,
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 687,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "show",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#show",
    "access": null,
    "description": "",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dialog",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "canCancel",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "killOldDialog",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 688,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_hasOpenDialog",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#_hasOpenDialog",
    "access": null,
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 689,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_canCancel",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#_canCancel",
    "access": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 690,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "initialBackButtonState",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#initialBackButtonState",
    "access": null,
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 691,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_onClose",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#_onClose",
    "access": null,
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 692,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasOpenDialog",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#hasOpenDialog",
    "access": null,
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 693,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "dialogComplete",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#dialogComplete",
    "access": null,
    "description": null,
    "lineNumber": 162,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 694,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_resolveDialogComplete",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#_resolveDialogComplete",
    "access": null,
    "description": null,
    "lineNumber": 165,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 695,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "close",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#close",
    "access": null,
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 696,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_resolveDialogComplete",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#_resolveDialogComplete",
    "access": null,
    "description": null,
    "lineNumber": 183,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 697,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_hasOpenDialog",
    "memberof": "src/utils/DialogManager.js~DialogManager",
    "longname": "src/utils/DialogManager.js~DialogManager#_hasOpenDialog",
    "access": null,
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 698,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/IconLoader.js",
    "memberof": null,
    "longname": "src/utils/IconLoader.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by Manuel on 28/07/16.\n */\n/*\n Text plugin\n */\n\nvar arvaOptions = System.arvaOptions;\nvar iconOptions = arvaOptions.iconOptions || {\n        form: 'rounded',\n        thickness: 'thin'\n    };\n\nexports.locate = function (target) {\n    var address = target.address;\n\n    // /* Resolve the address of default icons with the options provided */\n    if (address.indexOf('default') !== -1) {\n        address = address.split('default');\n        address = address[0] + iconOptions.form + '_' + iconOptions.thickness + address[1];\n    }\n\n    return address;\n};\n\nexports.translate = function (load) {\n    if (this.builder && this.transpiler) {\n        load.metadata.format = 'esm';\n        return 'export default ' + JSON.stringify(load.source) + ';';\n    }\n\n    load.metadata.format = 'amd';\n    return 'def' + 'ine(function() {\\nreturn ' + JSON.stringify(load.source) + ';\\n});';\n}"
  },
  {
    "__docId__": 699,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "arvaOptions",
    "memberof": "src/utils/IconLoader.js",
    "longname": "src/utils/IconLoader.js~arvaOptions",
    "access": null,
    "export": false,
    "importPath": "./src/utils/IconLoader.js",
    "importStyle": null,
    "description": "Created by Manuel on 28/07/16.",
    "lineNumber": 8,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 700,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "iconOptions",
    "memberof": "src/utils/IconLoader.js",
    "longname": "src/utils/IconLoader.js~iconOptions",
    "access": null,
    "export": false,
    "importPath": "./src/utils/IconLoader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 701,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "locate",
    "memberof": "src/utils/IconLoader.js",
    "longname": "src/utils/IconLoader.js~locate",
    "access": null,
    "export": false,
    "importPath": "./src/utils/IconLoader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "target",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 702,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "translate",
    "memberof": "src/utils/IconLoader.js",
    "longname": "src/utils/IconLoader.js~translate",
    "access": null,
    "export": false,
    "importPath": "./src/utils/IconLoader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "load",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 703,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/ImageLoader.js",
    "memberof": null,
    "longname": "src/utils/ImageLoader.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n @author: Tom Clement (tjclement)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nif (typeof window !== 'undefined') {\n    /* Unbundled build, loaded dynamically through System.import() */\n    exports.build = false;\n\n    exports.fetch = function (load) {\n        var absolutePath = load.address.replace('.js', '').substr('file:'.length);\n        return new Promise(function (resolve) {\n            resolve('module.exports = \"' + absolutePath + '\"');\n        });\n    };\n} else {\n    /* Bundled build, loaded from bundle.js */\n\n    var fs = require('fs');\n    var path = require('path');\n\n    exports.build = true;\n\n    exports.fetch = function (load) {\n        return new Promise(function (resolve, reject) {\n            var absolutePath = load.address.replace('.js', '').substr('file:'.length);\n            copyFile(absolutePath, resolve, reject);\n        });\n    };\n\n    function copyFile(source, resolve, reject) {\n        var cbCalled = false;\n        var dir = 'img';\n        var target = `${dir}/${path.basename(source)}`;\n\n        var absoluteDir = `www/${dir}`;\n        var absoluteTarget = `www/${target}`;\n\n        fs.mkdir(absoluteDir, function (mkdirError) {\n\n            if (mkdirError && mkdirError.code !== 'EEXIST') {\n                return reject(mkdirError);\n            }\n\n            var rd = fs.createReadStream(source);\n            rd.on('error', function (err) {\n                done(err);\n            });\n            var wr = fs.createWriteStream(absoluteTarget);\n            wr.on('error', function (err) {\n                done(err);\n            });\n            wr.on('close', function (ex) {\n                done();\n            });\n            rd.pipe(wr);\n\n            function done(error) {\n                if (!cbCalled) {\n                    if (!error && resolve) {\n                        return resolve('module.exports = \\'' + target + '\\';');\n                    } else if (reject) {\n                        console.log('Error copying imported image:', error);\n                        return reject(error);\n                    }\n                    cbCalled = true;\n                }\n            }\n        });\n    }\n}\n"
  },
  {
    "__docId__": 704,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/Injection.js",
    "memberof": null,
    "longname": "src/utils/Injection.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by tom on 28/06/16.\n */\n\nimport {Injector}                   from './di/Injector.js';\nimport {provide}                    from './di/Decorators.js';\n\nexport class Injection {\n    static injector = new Injector();\n\n    /**\n     * Requests an instance of the given class from the DI engine. If an instance\n     * of that class with the same construction parameters already exists, a reference\n     * to it is returned. Otherwise a new instance is created.\n     *\n     * Example usage:\n     * get(HomeController, param1, param2);\n     *\n     * @param {Function} classConstructor The class of which an instance is wanted\n     * @param {*} constructionParams A list of parameters to be passed to the class constructor\n     * @returns {Object} Instance of the given class\n     */\n    static get(classConstructor, ...constructionParams) {\n        return this.injector.get(classConstructor, constructionParams);\n    }\n\n    /**\n     * Provide an instance a certain type.\n     *\n     * @param {Function} classConstructor The class of which an instance is wanted\n     * @param {Function|Object} functionOrConstructedObject. A function returning an instance of the object, or the object\n     * itself.\n     */\n    static provide(classConstructor, functionOrConstructedObject) {\n        let providerFunction = typeof functionOrConstructedObject === 'function' ?\n            functionOrConstructedObject : (() => functionOrConstructedObject);\n        provide(classConstructor)(providerFunction);\n        this.addProviders(providerFunction);\n    }\n\n\n    /**\n     * Provide an instance a certain type.\n     *\n     * @param {Class} classConstructor The class of which an instance is wanted\n     * @param {Function|Object} functionOrConstructedObject\n     */\n    static provideAndGet(classConstructor, functionOrConstructedObject) {\n        this.provide(classConstructor, functionOrConstructedObject);\n        return Injection.get(classConstructor);\n    }\n\n\n    /**\n     * Requests instances of multiple classes at once.\n     *\n     * Example usage:\n     * let instances = getAll(ArvaRouter, [HomeController, [param1, param2]], App);\n     *\n     * @param {*} classContructorArray Array of classes to instantiate.\n     * May also be an array where each item is an array containing the class as\n     * its first element, and an array of parameters as its second element.\n     *\n     * @returns {Array} An array of instances of the requested classes\n     */\n    static getAll(...classContructorArray) {\n        let results = [];\n        for (let entry of classContructorArray) {\n            let [constructor, params] = entry instanceof Array ? [entry[0], entry[1]] : [entry, []];\n            results.push(this.get(constructor, ...params));\n        }\n        return results;\n    }\n\n    /**\n     * Registers classes as the default provider for their Provide annotation (set by @provide decorator).\n     *\n     * Example usage:\n     * addProviders(ArvaRouter, FamousContext);\n     *\n     * @param {*} classConstructors\n     * @returns {void}\n     */\n    static addProviders(...classConstructors) {\n        for (let constructor of classConstructors) {\n            this.injector._loadFnOrClass(constructor);\n        }\n    }\n}"
  },
  {
    "__docId__": 705,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Injection",
    "memberof": "src/utils/Injection.js",
    "longname": "src/utils/Injection.js~Injection",
    "access": null,
    "export": true,
    "importPath": "./src/utils/Injection.js",
    "importStyle": "{Injection}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 706,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "get",
    "memberof": "src/utils/Injection.js~Injection",
    "longname": "src/utils/Injection.js~Injection.get",
    "access": null,
    "description": "Requests an instance of the given class from the DI engine. If an instance\nof that class with the same construction parameters already exists, a reference\nto it is returned. Otherwise a new instance is created.\n\nExample usage:\nget(HomeController, param1, param2);",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Instance of the given class"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "classConstructor",
        "description": "The class of which an instance is wanted"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "constructionParams",
        "description": "A list of parameters to be passed to the class constructor"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Instance of the given class"
    },
    "generator": false
  },
  {
    "__docId__": 707,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "provide",
    "memberof": "src/utils/Injection.js~Injection",
    "longname": "src/utils/Injection.js~Injection.provide",
    "access": null,
    "description": "Provide an instance a certain type.",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "classConstructor",
        "description": "The class of which an instance is wanted"
      },
      {
        "nullable": null,
        "types": [
          "Function",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "functionOrConstructedObject.",
        "description": "A function returning an instance of the object, or the object\nitself."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 708,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "provideAndGet",
    "memberof": "src/utils/Injection.js~Injection",
    "longname": "src/utils/Injection.js~Injection.provideAndGet",
    "access": null,
    "description": "Provide an instance a certain type.",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Class"
        ],
        "spread": false,
        "optional": false,
        "name": "classConstructor",
        "description": "The class of which an instance is wanted"
      },
      {
        "nullable": null,
        "types": [
          "Function",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "functionOrConstructedObject",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 709,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getAll",
    "memberof": "src/utils/Injection.js~Injection",
    "longname": "src/utils/Injection.js~Injection.getAll",
    "access": null,
    "description": "Requests instances of multiple classes at once.\n\nExample usage:\nlet instances = getAll(ArvaRouter, [HomeController, [param1, param2]], App);",
    "lineNumber": 66,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array} An array of instances of the requested classes"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "classContructorArray",
        "description": "Array of classes to instantiate.\nMay also be an array where each item is an array containing the class as\nits first element, and an array of parameters as its second element."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "An array of instances of the requested classes"
    },
    "generator": false
  },
  {
    "__docId__": 710,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "addProviders",
    "memberof": "src/utils/Injection.js~Injection",
    "longname": "src/utils/Injection.js~Injection.addProviders",
    "access": null,
    "description": "Registers classes as the default provider for their Provide annotation (set by @provide decorator).\n\nExample usage:\naddProviders(ArvaRouter, FamousContext);",
    "lineNumber": 84,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "classConstructors",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 711,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/KeyboardHelper.js",
    "memberof": null,
    "longname": "src/utils/KeyboardHelper.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by Manuel on 24/08/16.\n */\n\n\nexport class KeyboardHelper {\n\n    hasKeyboard = false;\n\n    constructor(options = {\n        hideKeyboardAccessoryBar: true,\n        disableScroll: true\n    }) {\n\n        this.hasKeyboard = cordova && cordova.plugins && cordova.plugins.Keyboard;\n\n        if (this.hasKeyboard && options.disableScroll) {\n            cordova.plugins.Keyboard.hideKeyboardAccessoryBar && cordova.plugins.Keyboard.hideKeyboardAccessoryBar(options.hideKeyboardAccessoryBar);\n            cordova.plugins.Keyboard.hideKeyboardAccessoryBar && cordova.plugins.Keyboard.disableScroll(options.disableScroll);\n\n            /**\n             * Change the size of the famous-container to shrink the famous-context once the keyboard shows/hides. DisableScroll should be enabled for this to work\n             */\n            window.addEventListener('native.keyboardshow', ()=> {\n                document.getElementsByClassName('famous-container')[0].style.height = window.innerHeight + \"px\";\n                this._dispatchResizeEvent();\n            });\n\n            window.addEventListener('native.keyboardhide', ()=> {\n                document.getElementsByClassName('famous-container')[0].style.height = window.innerHeight + \"px\";\n                this._dispatchResizeEvent();\n            });\n\n            window.addEventListener(\"orientationchange\", ()=> {\n                document.getElementsByClassName('famous-container')[0].style.height = \"\";\n                document.getElementsByClassName('famous-container')[0].style.width = \"\";\n                this._dispatchResizeEvent();\n            });\n        }\n    }\n\n    _dispatchResizeEvent() {\n        let resizeEvent = new Event('resize');\n        window.dispatchEvent(resizeEvent);\n    }\n\n    setKeyboardAccessoryBar(boolean = false) {\n        if (this.hasKeyboard) {\n            cordova.plugins.Keyboard.hideKeyboardAccessoryBar(boolean);\n        } else {\n            this._warn();\n        }\n    }\n\n    setDisableScroll(boolean = false) {\n        if (this.hasKeyboard) {\n            cordova.plugins.Keyboard.disableScroll(boolean);\n        } else {\n            this._warn();\n        }\n    }\n\n    show() {\n        if (this.hasKeyboard) {\n            cordova.plugins.Keyboard.show();\n        } else {\n            this._warn();\n        }\n    }\n\n    hide() {\n        if (this.hasKeyboard) {\n            cordova.plugins.Keyboard.hide();\n        } else {\n            this._warn();\n        }\n    }\n\n    _warn() {\n        console.warn('KeyboardHelper is not supported on this platform, probably not a native (iOS/Android) platform');\n    }\n}"
  },
  {
    "__docId__": 712,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "KeyboardHelper",
    "memberof": "src/utils/KeyboardHelper.js",
    "longname": "src/utils/KeyboardHelper.js~KeyboardHelper",
    "access": null,
    "export": true,
    "importPath": "./src/utils/KeyboardHelper.js",
    "importStyle": "{KeyboardHelper}",
    "description": "Created by Manuel on 24/08/16.",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 713,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/utils/KeyboardHelper.js~KeyboardHelper",
    "longname": "src/utils/KeyboardHelper.js~KeyboardHelper#constructor",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{\"hideKeyboardAccessoryBar\": boolean, \"disableScroll\": boolean}"
        ],
        "defaultRaw": {
          "hideKeyboardAccessoryBar": true,
          "disableScroll": true
        },
        "defaultValue": "{\"hideKeyboardAccessoryBar\":true,\"disableScroll\":true}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 714,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "hasKeyboard",
    "memberof": "src/utils/KeyboardHelper.js~KeyboardHelper",
    "longname": "src/utils/KeyboardHelper.js~KeyboardHelper#hasKeyboard",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 715,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_dispatchResizeEvent",
    "memberof": "src/utils/KeyboardHelper.js~KeyboardHelper",
    "longname": "src/utils/KeyboardHelper.js~KeyboardHelper#_dispatchResizeEvent",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 716,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setKeyboardAccessoryBar",
    "memberof": "src/utils/KeyboardHelper.js~KeyboardHelper",
    "longname": "src/utils/KeyboardHelper.js~KeyboardHelper#setKeyboardAccessoryBar",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "boolean",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 717,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setDisableScroll",
    "memberof": "src/utils/KeyboardHelper.js~KeyboardHelper",
    "longname": "src/utils/KeyboardHelper.js~KeyboardHelper#setDisableScroll",
    "access": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "boolean",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": false,
        "defaultValue": "false"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 718,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "show",
    "memberof": "src/utils/KeyboardHelper.js~KeyboardHelper",
    "longname": "src/utils/KeyboardHelper.js~KeyboardHelper#show",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 719,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hide",
    "memberof": "src/utils/KeyboardHelper.js~KeyboardHelper",
    "longname": "src/utils/KeyboardHelper.js~KeyboardHelper#hide",
    "access": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 720,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_warn",
    "memberof": "src/utils/KeyboardHelper.js~KeyboardHelper",
    "longname": "src/utils/KeyboardHelper.js~KeyboardHelper#_warn",
    "access": null,
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 721,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/Limiter.js",
    "memberof": null,
    "longname": "src/utils/Limiter.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n @author: Tom Clement (tjclement)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nexport function limit(min, value, max) {\n    return Math.min(Math.max(min, value), max);\n}"
  },
  {
    "__docId__": 722,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "limit",
    "memberof": "src/utils/Limiter.js",
    "longname": "src/utils/Limiter.js~limit",
    "access": null,
    "export": true,
    "importPath": "./src/utils/Limiter.js",
    "importStyle": "{limit}",
    "description": "@author: Tom Clement (tjclement)",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@license",
        "tagValue": "NPOSL-3.0"
      },
      {
        "tagName": "@copyright",
        "tagValue": "Bizboard, 2015"
      }
    ],
    "params": [
      {
        "name": "min",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "max",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 723,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/ObjectHelper.js",
    "memberof": null,
    "longname": "src/utils/ObjectHelper.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Tom Clement (tjclement)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport merge                from 'lodash/merge.js';\nimport extend               from 'lodash/extend.js';\n\nexport class ObjectHelper {\n\n    /* Sets enumerability of methods and all properties starting with '_' on an object to false,\n     * effectively hiding them from for(x in object) loops.   */\n    static hideMethodsAndPrivatePropertiesFromObject(object) {\n        for (let propName in object) {\n\n            let prototype = Object.getPrototypeOf(object);\n            let descriptor = prototype ? Object.getOwnPropertyDescriptor(prototype, propName) : undefined;\n            if (descriptor && (descriptor.get || descriptor.set) && !propName.startsWith('_')) {\n                /* This is a public getter/setter, so we can skip it */\n                continue;\n            }\n\n            let property = object[propName];\n            if (typeof property === 'function' || propName.startsWith('_')) {\n                ObjectHelper.hidePropertyFromObject(object, propName);\n            }\n        }\n    }\n\n    /* Sets enumerability of methods on an object to false,\n     * effectively hiding them from for(x in object) loops.   */\n    static hideMethodsFromObject(object) {\n        for (let propName in object) {\n            let property = object[propName];\n            if (typeof property === 'function') {\n                ObjectHelper.hidePropertyFromObject(object, propName);\n            }\n        }\n    }\n\n    /* Sets enumerability of an object's property to false,\n     * effectively hiding it from for(x in object) loops.   */\n    static hidePropertyFromObject(object, propName) {\n        let prototype = object;\n        let descriptor = Object.getOwnPropertyDescriptor(object, propName);\n        while (!descriptor) {\n            prototype = Object.getPrototypeOf(prototype);\n\n            if (prototype.constructor.name === 'Object' || prototype.constructor.name === 'Array') {\n                return;\n            }\n\n            descriptor = Object.getOwnPropertyDescriptor(prototype, propName);\n        }\n        descriptor.enumerable = false;\n        Object.defineProperty(prototype, propName, descriptor);\n        Object.defineProperty(object, propName, descriptor);\n    }\n\n    /* Sets enumerability of all of an object's properties (including methods) to false,\n     * effectively hiding them from for(x in object) loops.   */\n    static hideAllPropertiesFromObject(object) {\n        for (let propName in object) {\n            ObjectHelper.hidePropertyFromObject(object, propName);\n        }\n    }\n\n    /* Adds a property with enumerable: false to object */\n    static addHiddenPropertyToObject(object, propName, prop, writable = true, useAccessors = true) {\n        return ObjectHelper.addPropertyToObject(object, propName, prop, false, writable, undefined, useAccessors);\n    }\n\n    /* Adds a property with given enumerability and writability to object. If writable, uses a hidden object.shadow\n     * property to save the actual data state, and object[propName] with gettter/setter to the shadow. Allows for a\n     * callback to be triggered upon every set.   */\n    static addPropertyToObject(object, propName, prop, enumerable = true, writable = true, setCallback = null, useAccessors = true) {\n        /* If property is non-writable, we won't need a shadowed prop for the getters/setters */\n        if (!writable || !useAccessors) {\n            let descriptor = {\n                enumerable: enumerable,\n                writable: writable,\n                value: prop\n            };\n            Object.defineProperty(object, propName, descriptor);\n        } else {\n            ObjectHelper.addGetSetPropertyWithShadow(object, propName, prop, enumerable, writable, setCallback);\n        }\n    }\n\n    /* Adds given property to the object with get() and set() accessors, and saves actual data in object.shadow */\n    static addGetSetPropertyWithShadow(object, propName, prop, enumerable = true, writable = true, setCallback = null) {\n        ObjectHelper.buildPropertyShadow(object, propName, prop);\n        ObjectHelper.buildGetSetProperty(object, propName, enumerable, writable, setCallback);\n    }\n\n    /* Creates or extends object.shadow to contain a property with name propName */\n    static buildPropertyShadow(object, propName, prop) {\n        let shadow = {};\n\n        try {\n            /* If a shadow property already exists, we should extend instead of overwriting it. */\n            if ('shadow' in object) {\n                shadow = object.shadow;\n            }\n        } catch (error) {\n            return;\n        }\n\n        shadow[propName] = prop;\n        Object.defineProperty(object, 'shadow', {\n            writable: true,\n            configurable: true,\n            enumerable: false,\n            value: shadow\n        });\n    }\n\n    /* Creates a property on object that has a getter that fetches from object.shadow,\n     * and a setter that sets object.shadow as well as triggers setCallback() if set.   */\n    static buildGetSetProperty(object, propName, enumerable = true, writable = true, setCallback = null) {\n        let descriptor = {\n            enumerable: enumerable,\n            configurable: true,\n            get: function () {\n                return object.shadow[propName];\n            },\n            set: function (value) {\n                if (writable) {\n                    object.shadow[propName] = value;\n                    if (setCallback && typeof setCallback === 'function') {\n                        setCallback({\n                            propertyName: propName,\n                            newValue: value\n                        });\n                    }\n                } else {\n                    throw new ReferenceError('Attempted to write to non-writable property ' + propName + '.');\n                }\n            }\n        };\n\n        Object.defineProperty(object, propName, descriptor);\n    }\n\n    /* Calls object['functionName'].bind(bindTarget) on all of object's functions. */\n    static bindAllMethods(object, bindTarget) {\n\n        /* Bind all current object's methods to bindTarget. */\n        let methodDescriptors = ObjectHelper.getMethodDescriptors(object);\n        for (let methodName in methodDescriptors) {\n            /* Skip the constructor as it serves as no purpose and it breaks the minification */\n            if(methodName === 'constructor'){\n                continue;\n            }\n            let propertyDescriptor = methodDescriptors[methodName];\n            if (propertyDescriptor && propertyDescriptor.get) {\n                propertyDescriptor.get = propertyDescriptor.get.bind(bindTarget);\n            } else if (propertyDescriptor.set) {\n                propertyDescriptor.set = propertyDescriptor.set.bind(bindTarget);\n            } else if (propertyDescriptor.writable) {\n                propertyDescriptor.value = propertyDescriptor.value.bind(bindTarget);\n            }\n            Object.defineProperty(object, methodName, propertyDescriptor);\n        }\n    }\n\n\n    static getMethodDescriptors(object) {\n\n        let methodDescriptors = {};\n\n        for (let propertyName of Object.getOwnPropertyNames(object)) {\n            let propertyDescriptor = Object.getOwnPropertyDescriptor(object, propertyName) || {};\n            /* Initializers can be ignored since they are bound anyways */\n            if (!propertyDescriptor.initializer && (propertyDescriptor.get || typeof object[propertyName] === 'function')) {\n                methodDescriptors[propertyName] = propertyDescriptor;\n            }\n        }\n\n        /* Recursively find prototype's methods until we hit the Object prototype. */\n        let prototype = Object.getPrototypeOf(object);\n        if (prototype.constructor.name !== 'Object' && prototype.constructor.name !== 'Array') {\n            methodDescriptors = extend(ObjectHelper.getMethodDescriptors(prototype), methodDescriptors);\n        }\n\n        return methodDescriptors;\n\n    }\n\n    /* Returns a new object with all enumerable properties of the given object */\n    static getEnumerableProperties(object) {\n\n        return ObjectHelper.getPrototypeEnumerableProperties(object, object);\n\n    }\n\n    static getPrototypeEnumerableProperties(rootObject, prototype) {\n        let result = {};\n\n        /* Collect all propertise in the prototype's keys() enumerable */\n        let propNames = Object.keys(prototype);\n        for (let name of propNames) {\n            let value = rootObject[name];\n\n            /* Value must be a non-null primitive or object to be pushable to a dataSource */\n            if (value !== null && value !== undefined && typeof value !==\n                'function') {\n                if (typeof value === 'object' && !(value instanceof Array)) {\n                    result[name] = ObjectHelper.getEnumerableProperties(value);\n                } else {\n                    result[name] = value;\n                }\n            }\n        }\n\n        /* Collect all properties with accessors (getters/setters) that are enumerable, too */\n        let descriptorNames = Object.getOwnPropertyNames(prototype);\n        descriptorNames = descriptorNames.filter(function (name) {\n            return propNames.indexOf(name) < 0;\n        });\n        for (let name of descriptorNames) {\n            let descriptor = Object.getOwnPropertyDescriptor(prototype, name);\n            if (descriptor && descriptor.enumerable) {\n                let value = rootObject[name];\n\n                /* Value must be a non-null primitive or object to be pushable to a dataSource */\n                if (value !== null && value !== undefined && typeof value !== 'function') {\n                    if (typeof value === 'object' && !(value instanceof Array)) {\n                        result[name] = ObjectHelper.getEnumerableProperties(value);\n                    } else {\n                        result[name] = value;\n                    }\n                }\n            }\n        }\n\n        /* Collect all enumerable properties in the prototype's prototype as well */\n        let superPrototype = Object.getPrototypeOf(prototype);\n        let ignorableTypes = ['Object', 'Array', 'EventEmitter'];\n        if (ignorableTypes.indexOf(superPrototype.constructor.name) === -1) {\n            let prototypeEnumerables = ObjectHelper.getPrototypeEnumerableProperties(rootObject, superPrototype);\n            merge(result, prototypeEnumerables);\n        }\n\n        return result;\n    }\n}\n"
  },
  {
    "__docId__": 724,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ObjectHelper",
    "memberof": "src/utils/ObjectHelper.js",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper",
    "access": null,
    "export": true,
    "importPath": "./src/utils/ObjectHelper.js",
    "importStyle": "{ObjectHelper}",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 725,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "hideMethodsAndPrivatePropertiesFromObject",
    "memberof": "src/utils/ObjectHelper.js~ObjectHelper",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper.hideMethodsAndPrivatePropertiesFromObject",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 726,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "hideMethodsFromObject",
    "memberof": "src/utils/ObjectHelper.js~ObjectHelper",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper.hideMethodsFromObject",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 727,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "hidePropertyFromObject",
    "memberof": "src/utils/ObjectHelper.js~ObjectHelper",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper.hidePropertyFromObject",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      },
      {
        "name": "propName",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 728,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "hideAllPropertiesFromObject",
    "memberof": "src/utils/ObjectHelper.js~ObjectHelper",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper.hideAllPropertiesFromObject",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 729,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "addHiddenPropertyToObject",
    "memberof": "src/utils/ObjectHelper.js~ObjectHelper",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper.addHiddenPropertyToObject",
    "access": null,
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      },
      {
        "name": "propName",
        "types": [
          "*"
        ]
      },
      {
        "name": "prop",
        "types": [
          "*"
        ]
      },
      {
        "name": "writable",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      },
      {
        "name": "useAccessors",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 730,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "addPropertyToObject",
    "memberof": "src/utils/ObjectHelper.js~ObjectHelper",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper.addPropertyToObject",
    "access": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      },
      {
        "name": "propName",
        "types": [
          "*"
        ]
      },
      {
        "name": "prop",
        "types": [
          "*"
        ]
      },
      {
        "name": "enumerable",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      },
      {
        "name": "writable",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      },
      {
        "name": "setCallback",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      },
      {
        "name": "useAccessors",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 731,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "addGetSetPropertyWithShadow",
    "memberof": "src/utils/ObjectHelper.js~ObjectHelper",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper.addGetSetPropertyWithShadow",
    "access": null,
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      },
      {
        "name": "propName",
        "types": [
          "*"
        ]
      },
      {
        "name": "prop",
        "types": [
          "*"
        ]
      },
      {
        "name": "enumerable",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      },
      {
        "name": "writable",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      },
      {
        "name": "setCallback",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 732,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "buildPropertyShadow",
    "memberof": "src/utils/ObjectHelper.js~ObjectHelper",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper.buildPropertyShadow",
    "access": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      },
      {
        "name": "propName",
        "types": [
          "*"
        ]
      },
      {
        "name": "prop",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 733,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "buildGetSetProperty",
    "memberof": "src/utils/ObjectHelper.js~ObjectHelper",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper.buildGetSetProperty",
    "access": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      },
      {
        "name": "propName",
        "types": [
          "*"
        ]
      },
      {
        "name": "enumerable",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      },
      {
        "name": "writable",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      },
      {
        "name": "setCallback",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 734,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "bindAllMethods",
    "memberof": "src/utils/ObjectHelper.js~ObjectHelper",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper.bindAllMethods",
    "access": null,
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      },
      {
        "name": "bindTarget",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 735,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getMethodDescriptors",
    "memberof": "src/utils/ObjectHelper.js~ObjectHelper",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper.getMethodDescriptors",
    "access": null,
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 736,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getEnumerableProperties",
    "memberof": "src/utils/ObjectHelper.js~ObjectHelper",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper.getEnumerableProperties",
    "access": null,
    "description": null,
    "lineNumber": 195,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 737,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getPrototypeEnumerableProperties",
    "memberof": "src/utils/ObjectHelper.js~ObjectHelper",
    "longname": "src/utils/ObjectHelper.js~ObjectHelper.getPrototypeEnumerableProperties",
    "access": null,
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "params": [
      {
        "name": "rootObject",
        "types": [
          "*"
        ]
      },
      {
        "name": "prototype",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 738,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/Throttler.js",
    "memberof": null,
    "longname": "src/utils/Throttler.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n @author: Tom Clement (tjclement)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport Timer                            from 'famous/utilities/Timer.js';\nimport {ObjectHelper}                   from './ObjectHelper.js';\n\nexport class Throttler {\n    /**\n     *\n     * @param {Number} throttleDelay Minimum amount of time in between each action executed by the Throttler, in milliseconds or ticks.\n     * @param {Boolean} shouldQueue Enable if each added action should be executed consecutively, or disable if a newly\n     * added action should replace a previous one.\n     * @param {Object} actionContext Context to which the actions executed by the Throttler will be bound.\n     * @param {Boolean} useTicks whether ticks should be used instead of milliseconds\n     * @returns {Throttler} Throttler instance.\n     */\n    constructor(throttleDelay = 0, shouldQueue = true, actionContext = this, useTicks = false) {\n        this.delay = throttleDelay;\n        this._useTicks = useTicks;\n        this._timerFunction = useTicks ? Timer.every : Timer.setInterval;\n        this.timer = null;\n        this.shouldQueue = shouldQueue;\n        this.actionContext = actionContext;\n\n        this.queue = [];\n        this.executionTimer = null;\n\n        ObjectHelper.bindAllMethods(this, this);\n    }\n\n    /**\n     * Adds an executable action to the queue that will be executed consecutively by the Throttler.\n     * If Throttler was constructed with shouldQueue = false, adding a new action will remove the old one.\n     * @param {Function} action Function to execute.\n     * @returns {void}\n     */\n    add(action) {\n        /* If we're not queueing, clear the previous action if present. The new action will replace the old one. */\n        if (!this.shouldQueue) {\n            this.queue.pop();\n        }\n\n        this.queue.push(action);\n        if (!this.timer) {\n            this.timer = this._timerFunction(this._executeTopAction, this.delay);\n        }\n    }\n\n    /**\n     * Clears the Throttler's timer if it is set.\n     * @returns {void}\n     * @private\n     */\n    _clearTimer() {\n        Timer.clear(this.timer);\n        this.timer = null;\n    }\n\n    /**\n     * Removes the top action from the Throttler's queue if any is present, and executes it with the correct binding context.\n     * @returns {void}\n     * @private\n     */\n    _executeTopAction() {\n        let action = this.queue.shift();\n        if (action && typeof action === 'function') {\n            action.call(this.actionContext);\n        }\n        if (!this.queue.length) {\n            this._clearTimer();\n        }\n    }\n}"
  },
  {
    "__docId__": 739,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Throttler",
    "memberof": "src/utils/Throttler.js",
    "longname": "src/utils/Throttler.js~Throttler",
    "access": null,
    "export": true,
    "importPath": "./src/utils/Throttler.js",
    "importStyle": "{Throttler}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 740,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#constructor",
    "access": null,
    "description": "",
    "lineNumber": 22,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Throttler} Throttler instance."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "throttleDelay",
        "description": "Minimum amount of time in between each action executed by the Throttler, in milliseconds or ticks."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "shouldQueue",
        "description": "Enable if each added action should be executed consecutively, or disable if a newly\nadded action should replace a previous one."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "actionContext",
        "description": "Context to which the actions executed by the Throttler will be bound."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "useTicks",
        "description": "whether ticks should be used instead of milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Throttler"
      ],
      "spread": false,
      "description": "Throttler instance."
    },
    "generator": false
  },
  {
    "__docId__": 741,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "delay",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#delay",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 742,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_useTicks",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#_useTicks",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 743,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_timerFunction",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#_timerFunction",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 744,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "timer",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#timer",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 745,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "shouldQueue",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#shouldQueue",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 746,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "actionContext",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#actionContext",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 747,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "queue",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#queue",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 748,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "executionTimer",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#executionTimer",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 749,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#add",
    "access": null,
    "description": "Adds an executable action to the queue that will be executed consecutively by the Throttler.\nIf Throttler was constructed with shouldQueue = false, adding a new action will remove the old one.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "Function to execute."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 750,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "timer",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#timer",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 751,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_clearTimer",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#_clearTimer",
    "access": "private",
    "description": "Clears the Throttler's timer if it is set.",
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 752,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "timer",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#timer",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 753,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_executeTopAction",
    "memberof": "src/utils/Throttler.js~Throttler",
    "longname": "src/utils/Throttler.js~Throttler#_executeTopAction",
    "access": "private",
    "description": "Removes the top action from the Throttler's queue if any is present, and executes it with the correct binding context.",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 754,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/di/Decorators.js",
    "memberof": null,
    "longname": "src/utils/di/Decorators.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/* */\nimport {isFunction} from './Util.js';\n\n// This module contains:\n// - built-in annotation classes\n// - helpers to read/write annotations\n\n\n// ANNOTATIONS\n\n// A built-in token.\n// Used to ask for pre-injected parent constructor.\n// A class constructor can ask for this.\nclass SuperConstructor {\n}\n\n// A built-in scope.\n// Never cache.\nclass TransientScope {\n}\n\nclass Inject {\n    constructor(...tokens) {\n        this.tokens = tokens;\n    }\n}\n\nclass Provide {\n    constructor(token) {\n        this.token = token;\n    }\n}\n\nclass ClassProvider {\n}\nclass FactoryProvider {\n}\n\n\n// HELPERS\n\n// Append annotation on a function or class.\n// This can be helpful when not using ES6+.\nfunction annotate(fn, annotation) {\n    fn.annotations = fn.annotations || [];\n    fn.annotations.push(annotation);\n}\n\n\n// Read annotations on a function or class and return whether given annotation is present.\nfunction hasAnnotation(fn, annotationClass) {\n    if (!fn.annotations || fn.annotations.length === 0) {\n        return false;\n    }\n\n    for (var annotation of fn.annotations) {\n        if (annotation instanceof annotationClass) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n\n// Read annotations on a function or class and collect \"interesting\" metadata:\nfunction readAnnotations(fn) {\n    var collectedAnnotations = {\n        // Description of the provided value.\n        provide: {\n            token: null\n        },\n\n        // List of parameter descriptions.\n        // A parameter description is an object with properties:\n        // - token (anything)\n        params: []\n    };\n\n    if (fn.annotations && fn.annotations.length) {\n        for (var annotation of fn.annotations) {\n            if (annotation instanceof Inject) {\n                annotation.tokens.forEach((token) => {\n                    collectedAnnotations.params.push({\n                        token: token\n                    });\n                });\n            }\n\n            if (annotation instanceof Provide) {\n                collectedAnnotations.provide.token = annotation.token;\n            }\n        }\n    }\n\n    // Read annotations for individual parameters.\n    if (fn.parameters) {\n        fn.parameters.forEach((param, idx) => {\n            for (var paramAnnotation of param) {\n                // Type annotation.\n                if (isFunction(paramAnnotation) && !collectedAnnotations.params[idx]) {\n                    collectedAnnotations.params[idx] = {\n                        token: paramAnnotation\n                    };\n                } else if (paramAnnotation instanceof Inject) {\n                    collectedAnnotations.params[idx] = {\n                        token: paramAnnotation.tokens[0]\n                    };\n                }\n            }\n        });\n    }\n\n    return collectedAnnotations;\n}\n\n// Decorator versions of annotation classes\nfunction inject(...tokens) {\n    return function (fn) {\n        annotate(fn, new Inject(...tokens));\n    };\n}\n\nfunction inject(...tokens) {\n    return function (fn) {\n        annotate(fn, new Inject(...tokens));\n    };\n}\n\nfunction provide(...tokens) {\n    return function (fn) {\n        annotate(fn, new Provide(...tokens));\n    };\n}\n\nexport {\n    annotate,\n    hasAnnotation,\n    readAnnotations,\n\n    SuperConstructor,\n    TransientScope,\n    Inject,\n    Provide,\n    ClassProvider,\n    FactoryProvider,\n\n    inject,\n    provide,\n};\n"
  },
  {
    "__docId__": 755,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "inject",
    "memberof": "src/utils/di/Decorators.js",
    "longname": "src/utils/di/Decorators.js~inject",
    "access": null,
    "export": false,
    "importPath": "./src/utils/di/Decorators.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [
      {
        "name": "tokens",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 756,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "annotate",
    "memberof": "src/utils/di/Decorators.js",
    "longname": "src/utils/di/Decorators.js~annotate",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/Decorators.js",
    "importStyle": "{annotate}",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      },
      {
        "name": "annotation",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 757,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "hasAnnotation",
    "memberof": "src/utils/di/Decorators.js",
    "longname": "src/utils/di/Decorators.js~hasAnnotation",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/Decorators.js",
    "importStyle": "{hasAnnotation}",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      },
      {
        "name": "annotationClass",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 758,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "readAnnotations",
    "memberof": "src/utils/di/Decorators.js",
    "longname": "src/utils/di/Decorators.js~readAnnotations",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/Decorators.js",
    "importStyle": "{readAnnotations}",
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 759,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SuperConstructor",
    "memberof": "src/utils/di/Decorators.js",
    "longname": "src/utils/di/Decorators.js~SuperConstructor",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/Decorators.js",
    "importStyle": "{SuperConstructor}",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 760,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TransientScope",
    "memberof": "src/utils/di/Decorators.js",
    "longname": "src/utils/di/Decorators.js~TransientScope",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/Decorators.js",
    "importStyle": "{TransientScope}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 761,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Inject",
    "memberof": "src/utils/di/Decorators.js",
    "longname": "src/utils/di/Decorators.js~Inject",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/Decorators.js",
    "importStyle": "{Inject}",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 762,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/utils/di/Decorators.js~Inject",
    "longname": "src/utils/di/Decorators.js~Inject#constructor",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "tokens",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "generator": false
  },
  {
    "__docId__": 763,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tokens",
    "memberof": "src/utils/di/Decorators.js~Inject",
    "longname": "src/utils/di/Decorators.js~Inject#tokens",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 764,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Provide",
    "memberof": "src/utils/di/Decorators.js",
    "longname": "src/utils/di/Decorators.js~Provide",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/Decorators.js",
    "importStyle": "{Provide}",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 765,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/utils/di/Decorators.js~Provide",
    "longname": "src/utils/di/Decorators.js~Provide#constructor",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "token",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 766,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "token",
    "memberof": "src/utils/di/Decorators.js~Provide",
    "longname": "src/utils/di/Decorators.js~Provide#token",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 767,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ClassProvider",
    "memberof": "src/utils/di/Decorators.js",
    "longname": "src/utils/di/Decorators.js~ClassProvider",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/Decorators.js",
    "importStyle": "{ClassProvider}",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 768,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FactoryProvider",
    "memberof": "src/utils/di/Decorators.js",
    "longname": "src/utils/di/Decorators.js~FactoryProvider",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/Decorators.js",
    "importStyle": "{FactoryProvider}",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 769,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "inject",
    "memberof": "src/utils/di/Decorators.js",
    "longname": "src/utils/di/Decorators.js~inject",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/Decorators.js",
    "importStyle": "{inject}",
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "params": [
      {
        "name": "tokens",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 770,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "provide",
    "memberof": "src/utils/di/Decorators.js",
    "longname": "src/utils/di/Decorators.js~provide",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/Decorators.js",
    "importStyle": "{provide}",
    "description": null,
    "lineNumber": 130,
    "undocument": true,
    "params": [
      {
        "name": "tokens",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 771,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/di/HashSum.js",
    "memberof": null,
    "longname": "src/utils/di/HashSum.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/* https://github.com/bevacqua/hash-sum */\n'use strict';\n\nfunction pad(hash, len) {\n    while (hash.length < len) {\n        hash = '0' + hash;\n    }\n    return hash;\n}\n\nfunction fold(hash, text) {\n    var i;\n    var chr;\n    var len;\n    if (text.length === 0) {\n        return hash;\n    }\n    for (i = 0, len = text.length; i < len; i++) {\n        chr = text.charCodeAt(i);\n        hash = ((hash << 5) - hash) + chr;\n        hash |= 0;\n    }\n    return hash < 0 ? hash * -2 : hash;\n}\n\nfunction foldObject(hash, o, seen) {\n    return Object.keys(o).sort().reduce(foldKey, hash);\n    function foldKey(hash, key) {\n        return foldValue(hash, o[key], key, seen);\n    }\n}\n\nfunction foldValue(input, value, key, seen) {\n    var hash = fold(fold(fold(input, key), toString(value)), typeof value);\n    if (value === null) {\n        return fold(hash, 'null');\n    }\n    if (value === undefined) {\n        return fold(hash, 'undefined');\n    }\n    if (typeof value === 'object') {\n        if (seen.indexOf(value) !== -1) {\n            return fold(hash, '[Circular]' + key);\n        }\n        seen.push(value);\n        return foldObject(hash, value, seen);\n    }\n    return fold(hash, value.toString());\n}\n\nfunction toString(o) {\n    return Object.prototype.toString.call(o);\n}\n\nfunction sum(o) {\n    return pad(foldValue(0, o, '', []).toString(16), 8);\n}\n\nmodule.exports = sum;"
  },
  {
    "__docId__": 772,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "pad",
    "memberof": "src/utils/di/HashSum.js",
    "longname": "src/utils/di/HashSum.js~pad",
    "access": null,
    "export": false,
    "importPath": "./src/utils/di/HashSum.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "hash",
        "types": [
          "*"
        ]
      },
      {
        "name": "len",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 773,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "fold",
    "memberof": "src/utils/di/HashSum.js",
    "longname": "src/utils/di/HashSum.js~fold",
    "access": null,
    "export": false,
    "importPath": "./src/utils/di/HashSum.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "hash",
        "types": [
          "*"
        ]
      },
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 774,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "foldObject",
    "memberof": "src/utils/di/HashSum.js",
    "longname": "src/utils/di/HashSum.js~foldObject",
    "access": null,
    "export": false,
    "importPath": "./src/utils/di/HashSum.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "hash",
        "types": [
          "*"
        ]
      },
      {
        "name": "o",
        "types": [
          "*"
        ]
      },
      {
        "name": "seen",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 775,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "foldValue",
    "memberof": "src/utils/di/HashSum.js",
    "longname": "src/utils/di/HashSum.js~foldValue",
    "access": null,
    "export": false,
    "importPath": "./src/utils/di/HashSum.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [
      {
        "name": "input",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "seen",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 776,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "toString",
    "memberof": "src/utils/di/HashSum.js",
    "longname": "src/utils/di/HashSum.js~toString",
    "access": null,
    "export": false,
    "importPath": "./src/utils/di/HashSum.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 777,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "sum",
    "memberof": "src/utils/di/HashSum.js",
    "longname": "src/utils/di/HashSum.js~sum",
    "access": null,
    "export": false,
    "importPath": "./src/utils/di/HashSum.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "o",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 778,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/di/injector.js",
    "memberof": null,
    "longname": "src/utils/di/injector.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/* */\n\nimport hash from './HashSum.js';\nimport {\n    annotate,\n    readAnnotations,\n    hasAnnotation,\n    Provide as ProvideAnnotation,\n    TransientScope as TransientScopeAnnotation\n} from './Decorators.js';\nimport {isFunction, toString} from './Util.js';\nimport {createProviderFromFnOrClass} from './Providers.js';\n\n\nfunction constructResolvingMessage(resolving, token) {\n    // If a token is passed in, add it into the resolving array.\n    // We need to check arguments.length because it can be null/undefined.\n    if (arguments.length > 1) {\n        resolving.push(token);\n    }\n\n    if (resolving.length > 1) {\n        return ` (${resolving.map(toString).join(' -> ')})`;\n    }\n\n    return '';\n}\n\n\n// Injector encapsulate a life scope.\n// There is exactly one instance for given token in given injector.\n//\n// All the state is immutable, the only state changes is the cache. There is however no way to produce different instance under given token. In that sense it is immutable.\n//\n// Injector is responsible for:\n// - resolving tokens into\n//   - provider\n//   - value (cache/calling provider)\n// - loading different \"providers\" and modules\nclass Injector {\n\n    constructor(modules = [], parentInjector = null, providers = new Map(), scopes = []) {\n        this._cache = new Map();\n        this._providers = providers;\n        this._parent = parentInjector;\n        this._scopes = scopes;\n\n        this._tokenCache = new Map();\n\n        this._loadModules(modules);\n    }\n\n    _retrieveToken(classConstructor, constructionParams = []) {\n        if (!this._tokenCache.has(classConstructor)) {\n            this._tokenCache.set(classConstructor, new Map());\n        }\n\n        let paramsHash = hash(constructionParams);\n        let cachedClass = this._tokenCache.get(classConstructor);\n        if (!cachedClass.has(paramsHash)) {\n            /* Generate a new token */\n            cachedClass.set(paramsHash, `${Date.now()}${Math.random()}`);\n        }\n\n        let foundHash = cachedClass.get(paramsHash);\n        return classConstructor.name ? `${classConstructor.name}-${foundHash}` : foundHash;\n    }\n\n\n    // Collect all registered providers that has given annotation.\n    // Including providers defined in parent injectors.\n    _collectProvidersWithAnnotation(annotationClass, collectedProviders) {\n        this._providers.forEach((provider, token) => {\n            if (!collectedProviders.has(token) && hasAnnotation(provider.provider, annotationClass)) {\n                collectedProviders.set(token, provider);\n            }\n        });\n\n        if (this._parent) {\n            this._parent._collectProvidersWithAnnotation(annotationClass, collectedProviders);\n        }\n    }\n\n\n    // Load modules/function/classes.\n    // This mutates `this._providers`, but it is only called during the constructor.\n    _loadModules(modules) {\n        for (var module of modules) {\n            // A single provider (class or function).\n            if (isFunction(module)) {\n                this._loadFnOrClass(module);\n                continue;\n            }\n\n            throw new Error('Invalid module!');\n        }\n    }\n\n\n    // Load a function or class.\n    // This mutates `this._providers`, but it is only called during the constructor.\n    _loadFnOrClass(classConstructor, constructionParams = []) {\n        var annotations = readAnnotations(classConstructor);\n        var token = this._retrieveToken(annotations.provide.token || classConstructor, constructionParams);\n        var provider = createProviderFromFnOrClass(classConstructor, annotations);\n\n        this._providers.set(token, provider);\n    }\n\n\n    // Returns true if there is any provider registered for given token.\n    // Including parent injectors.\n    _hasProviderFor(token) {\n        if (this._providers.has(token)) {\n            return true;\n        }\n\n        if (this._parent) {\n            return this._parent._hasProviderFor(token);\n        }\n\n        return false;\n    }\n\n    // Find the correct injector where the default provider should be instantiated and cached.\n    _instantiateDefaultProvider(provider, token, classConstructor, constructionParams, resolving) {\n        // In root injector, instantiate here.\n        if (!this._parent) {\n            this._providers.set(token, provider);\n            return this.get(classConstructor, constructionParams, resolving);\n        }\n\n        // Check if this injector forces new instance of this provider.\n        for (var ScopeClass of this._scopes) {\n            if (hasAnnotation(provider.provider, ScopeClass)) {\n                this._providers.set(token, provider);\n                return this.get(token, resolving);\n            }\n        }\n\n        // Otherwise ask parent injector.\n        return this._parent._instantiateDefaultProvider(provider, token, resolving);\n    }\n\n\n    // Return an instance for given token.\n    get(classConstructor, constructionParams = [], resolving = []) {\n        var resolvingMsg = '';\n        var provider;\n        var instance;\n        var token = this._retrieveToken(classConstructor, constructionParams);\n\n        if (token === null || token === undefined) {\n            resolvingMsg = constructResolvingMessage(resolving, token);\n            throw new Error(`Invalid token \"${token}\" requested!${resolvingMsg}`);\n        }\n\n        // Special case, return itself.\n        if (token === Injector) {\n            return this;\n        }\n\n        // Check if there is a cached instance already.\n        if (this._cache.has(token)) {\n            instance = this._cache.get(token);\n            provider = this._providers.get(token);\n            return instance;\n        }\n\n        provider = this._providers.get(token);\n\n        // No provider defined (overridden), use the default provider (token).\n        if (!provider && isFunction(classConstructor) && !this._hasProviderFor(token)) {\n            provider = createProviderFromFnOrClass(classConstructor, readAnnotations(classConstructor));\n            return this._instantiateDefaultProvider(provider, token, classConstructor, constructionParams, resolving);\n        }\n\n        if (!provider) {\n            if (!this._parent) {\n                resolvingMsg = constructResolvingMessage(resolving, token);\n                throw new Error(`No provider for ${toString(token)}!${resolvingMsg}`);\n            }\n\n            return this._parent.get(token, resolving);\n        }\n\n        if (resolving.indexOf(token) !== -1) {\n            resolvingMsg = constructResolvingMessage(resolving, token);\n            throw new Error(`Cannot instantiate cyclic dependency!${resolvingMsg}`);\n        }\n\n        resolving.push(token);\n\n        var args = provider.params.map((param) => {\n            return this.get(param.token, undefined, resolving);\n        });\n\n        /* Add custom construction parameters to construction */\n        args = args.concat(constructionParams);\n\n        try {\n            instance = provider.create(args);\n        } catch (e) {\n            resolvingMsg = constructResolvingMessage(resolving);\n            var originalMsg = 'ORIGINAL ERROR: ' + e.message;\n            e.message = `Error during instantiation of ${toString(token)}!${resolvingMsg}\\n${originalMsg}`;\n            throw e;\n        }\n\n        if (!hasAnnotation(provider.provider, TransientScopeAnnotation)) {\n            this._cache.set(token, instance);\n        }\n\n        resolving.pop();\n\n        return instance;\n    }\n\n\n    // Create a child injector, which encapsulate shorter life scope.\n    // It is possible to add additional providers and also force new instances of existing providers.\n    createChild(modules = [], forceNewInstancesOf = []) {\n        var forcedProviders = new Map();\n\n        // Always force new instance of TransientScope.\n        forceNewInstancesOf.push(TransientScopeAnnotation);\n\n        for (var annotation of forceNewInstancesOf) {\n            this._collectProvidersWithAnnotation(annotation, forcedProviders);\n        }\n\n        return new Injector(modules, this, forcedProviders, forceNewInstancesOf);\n    }\n}\n\n\nexport {Injector};\n"
  },
  {
    "__docId__": 779,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "constructResolvingMessage",
    "memberof": "src/utils/di/injector.js",
    "longname": "src/utils/di/injector.js~constructResolvingMessage",
    "access": null,
    "export": false,
    "importPath": "./src/utils/di/injector.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "params": [
      {
        "name": "resolving",
        "types": [
          "*"
        ]
      },
      {
        "name": "token",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 780,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Injector",
    "memberof": "src/utils/di/injector.js",
    "longname": "src/utils/di/injector.js~Injector",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/injector.js",
    "importStyle": "{Injector}",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 781,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#constructor",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "modules",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      },
      {
        "name": "parentInjector",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      },
      {
        "name": "providers",
        "optional": true,
        "types": [
          "*"
        ]
      },
      {
        "name": "scopes",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 782,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_cache",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#_cache",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 783,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_providers",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#_providers",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 784,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_parent",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#_parent",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 785,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_scopes",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#_scopes",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 786,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_tokenCache",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#_tokenCache",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 787,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_retrieveToken",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#_retrieveToken",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "classConstructor",
        "types": [
          "*"
        ]
      },
      {
        "name": "constructionParams",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 788,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_collectProvidersWithAnnotation",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#_collectProvidersWithAnnotation",
    "access": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [
      {
        "name": "annotationClass",
        "types": [
          "*"
        ]
      },
      {
        "name": "collectedProviders",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 789,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_loadModules",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#_loadModules",
    "access": null,
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "params": [
      {
        "name": "modules",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 790,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_loadFnOrClass",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#_loadFnOrClass",
    "access": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [
      {
        "name": "classConstructor",
        "types": [
          "*"
        ]
      },
      {
        "name": "constructionParams",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 791,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_hasProviderFor",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#_hasProviderFor",
    "access": null,
    "description": null,
    "lineNumber": 113,
    "undocument": true,
    "params": [
      {
        "name": "token",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 792,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_instantiateDefaultProvider",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#_instantiateDefaultProvider",
    "access": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "params": [
      {
        "name": "provider",
        "types": [
          "*"
        ]
      },
      {
        "name": "token",
        "types": [
          "*"
        ]
      },
      {
        "name": "classConstructor",
        "types": [
          "*"
        ]
      },
      {
        "name": "constructionParams",
        "types": [
          "*"
        ]
      },
      {
        "name": "resolving",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 793,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#get",
    "access": null,
    "description": null,
    "lineNumber": 147,
    "undocument": true,
    "params": [
      {
        "name": "classConstructor",
        "types": [
          "*"
        ]
      },
      {
        "name": "constructionParams",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      },
      {
        "name": "resolving",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 794,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createChild",
    "memberof": "src/utils/di/injector.js~Injector",
    "longname": "src/utils/di/injector.js~Injector#createChild",
    "access": null,
    "description": null,
    "lineNumber": 222,
    "undocument": true,
    "params": [
      {
        "name": "modules",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      },
      {
        "name": "forceNewInstancesOf",
        "optional": true,
        "types": [
          "*[]"
        ],
        "defaultRaw": [],
        "defaultValue": "[]"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 795,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/di/providers.js",
    "memberof": null,
    "longname": "src/utils/di/providers.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/* */\nimport {\n    ClassProvider as ClassProviderAnnotation,\n    FactoryProvider as FactoryProviderAnnotation,\n    SuperConstructor as SuperConstructorAnnotation,\n    readAnnotations,\n    hasAnnotation\n} from './Decorators.js';\nimport {isFunction, isObject, toString, isUpperCase, ownKeys} from './Util.js';\n\nfunction isClass(clsOrFunction) {\n\n    if (hasAnnotation(clsOrFunction, ClassProviderAnnotation)) {\n        return true;\n    } else if (hasAnnotation(clsOrFunction, FactoryProviderAnnotation)) {\n        return false;\n    }\n    /* When code is minified, class names are no longer upper case, so we skip this check\n     * if the name is oddly short (which happens during minification). */\n    else if (clsOrFunction.name && clsOrFunction.name.length && clsOrFunction.name.length > 3) {\n        return isUpperCase(clsOrFunction.name.charAt(0));\n    } else {\n        return ownKeys(clsOrFunction.prototype).length > 0;\n    }\n}\n\n// Provider is responsible for creating instances.\n//\n// responsibilities:\n// - create instances\n//\n// communication:\n// - exposes `create()` which creates an instance of something\n// - exposes `params` (information about which arguments it requires to be passed into `create()`)\n//\n// Injector reads `provider.params` first, create these dependencies (however it wants),\n// then calls `provider.create(args)`, passing in these arguments.\n\n\nvar EmptyFunction = Object.getPrototypeOf(Function);\n\n\n// ClassProvider knows how to instantiate classes.\n//\n// If a class inherits (has parent constructors), this provider normalizes all the dependencies\n// into a single flat array first, so that the injector does not need to worry about inheritance.\n//\n// - all the state is immutable (constructed)\n//\n// TODO(vojta): super constructor - should be only allowed during the constructor call?\nclass ClassProvider {\n    constructor(clazz, params) {\n        // TODO(vojta): can we hide this.provider? (only used for hasAnnotation(provider.provider))\n        this.provider = clazz;\n\n        this.params = [];\n        this._constructors = [];\n\n        this._flattenParams(clazz, params);\n        this._constructors.unshift([clazz, 0, this.params.length - 1]);\n    }\n\n    // Normalize params for all the constructors (in the case of inheritance),\n    // into a single flat array of DependencyDescriptors.\n    // So that the injector does not have to worry about inheritance.\n    //\n    // This function mutates `this.params` and `this._constructors`,\n    // but it is only called during the constructor.\n    // TODO(vojta): remove the annotations argument?\n    _flattenParams(constructor, params) {\n        var SuperConstructor;\n        var constructorInfo;\n\n        for (var param of params) {\n            if (param.token === SuperConstructorAnnotation) {\n                SuperConstructor = Object.getPrototypeOf(constructor);\n\n                if (SuperConstructor === EmptyFunction) {\n                    throw new Error(`${toString(constructor)} does not have a parent constructor. Only classes with a parent can ask for SuperConstructor!`);\n                }\n\n                constructorInfo = [SuperConstructor, this.params.length];\n                this._constructors.push(constructorInfo);\n                this._flattenParams(SuperConstructor, readAnnotations(SuperConstructor).params);\n                constructorInfo.push(this.params.length - 1);\n            } else {\n                this.params.push(param);\n            }\n        }\n    }\n\n    // Basically the reverse process to `this._flattenParams`:\n    // We get arguments for all the constructors as a single flat array.\n    // This method generates pre-bound \"superConstructor\" wrapper with correctly passing arguments.\n    _createConstructor(currentConstructorIdx, context, allArguments) {\n        var constructorInfo = this._constructors[currentConstructorIdx];\n        var nextConstructorInfo = this._constructors[currentConstructorIdx + 1];\n        var argsForCurrentConstructor;\n\n        if (nextConstructorInfo) {\n            argsForCurrentConstructor = allArguments\n                .slice(constructorInfo[1], nextConstructorInfo[1])\n                .concat([this._createConstructor(currentConstructorIdx + 1, context, allArguments)])\n                .concat(allArguments.slice(nextConstructorInfo[2] + 1, constructorInfo[2] + 1));\n        } else {\n            argsForCurrentConstructor = allArguments\n            /*.slice(constructorInfo[1], constructorInfo[2] + 1);*/\n        }\n\n        return function InjectedAndBoundSuperConstructor() {\n            // TODO(vojta): throw if arguments given\n            return constructorInfo[0].apply(context, argsForCurrentConstructor);\n        };\n    }\n\n    // It is called by injector to create an instance.\n    create(args) {\n        var context = Object.create(this.provider.prototype);\n        var constructor = this._createConstructor(0, context, args);\n        var returnedValue = constructor();\n\n        if (isFunction(returnedValue) || isObject(returnedValue)) {\n            return returnedValue;\n        }\n\n        return context;\n    }\n}\n\n\n// FactoryProvider knows how to create instance from a factory function.\n// - all the state is immutable\nclass FactoryProvider {\n    constructor(factoryFunction, params) {\n        this.provider = factoryFunction;\n        this.params = params;\n\n        for (var param of params) {\n            if (param.token === SuperConstructorAnnotation) {\n                throw new Error(`${toString(factoryFunction)} is not a class. Only classes with a parent can ask for SuperConstructor!`);\n            }\n        }\n    }\n\n    create(args) {\n        return this.provider.apply(undefined, args);\n    }\n}\n\n\nexport function createProviderFromFnOrClass(fnOrClass, annotations) {\n    if (isClass(fnOrClass)) {\n        return new ClassProvider(fnOrClass, annotations.params);\n    }\n\n    return new FactoryProvider(fnOrClass, annotations.params);\n}\n"
  },
  {
    "__docId__": 796,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isClass",
    "memberof": "src/utils/di/providers.js",
    "longname": "src/utils/di/providers.js~isClass",
    "access": null,
    "export": false,
    "importPath": "./src/utils/di/providers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "clsOrFunction",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 797,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "EmptyFunction",
    "memberof": "src/utils/di/providers.js",
    "longname": "src/utils/di/providers.js~EmptyFunction",
    "access": null,
    "export": false,
    "importPath": "./src/utils/di/providers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 798,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ClassProvider",
    "memberof": "src/utils/di/providers.js",
    "longname": "src/utils/di/providers.js~ClassProvider",
    "access": null,
    "export": false,
    "importPath": "./src/utils/di/providers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 799,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/utils/di/providers.js~ClassProvider",
    "longname": "src/utils/di/providers.js~ClassProvider#constructor",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [
      {
        "name": "clazz",
        "types": [
          "*"
        ]
      },
      {
        "name": "params",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 800,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "provider",
    "memberof": "src/utils/di/providers.js~ClassProvider",
    "longname": "src/utils/di/providers.js~ClassProvider#provider",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 801,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "params",
    "memberof": "src/utils/di/providers.js~ClassProvider",
    "longname": "src/utils/di/providers.js~ClassProvider#params",
    "access": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 802,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_constructors",
    "memberof": "src/utils/di/providers.js~ClassProvider",
    "longname": "src/utils/di/providers.js~ClassProvider#_constructors",
    "access": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 803,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_flattenParams",
    "memberof": "src/utils/di/providers.js~ClassProvider",
    "longname": "src/utils/di/providers.js~ClassProvider#_flattenParams",
    "access": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [
      {
        "name": "constructor",
        "types": [
          "*"
        ]
      },
      {
        "name": "params",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 804,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_createConstructor",
    "memberof": "src/utils/di/providers.js~ClassProvider",
    "longname": "src/utils/di/providers.js~ClassProvider#_createConstructor",
    "access": null,
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "params": [
      {
        "name": "currentConstructorIdx",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "allArguments",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 805,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/utils/di/providers.js~ClassProvider",
    "longname": "src/utils/di/providers.js~ClassProvider#create",
    "access": null,
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 806,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FactoryProvider",
    "memberof": "src/utils/di/providers.js",
    "longname": "src/utils/di/providers.js~FactoryProvider",
    "access": null,
    "export": false,
    "importPath": "./src/utils/di/providers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 133,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 807,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/utils/di/providers.js~FactoryProvider",
    "longname": "src/utils/di/providers.js~FactoryProvider#constructor",
    "access": null,
    "description": null,
    "lineNumber": 134,
    "undocument": true,
    "params": [
      {
        "name": "factoryFunction",
        "types": [
          "*"
        ]
      },
      {
        "name": "params",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 808,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "provider",
    "memberof": "src/utils/di/providers.js~FactoryProvider",
    "longname": "src/utils/di/providers.js~FactoryProvider#provider",
    "access": null,
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 809,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "params",
    "memberof": "src/utils/di/providers.js~FactoryProvider",
    "longname": "src/utils/di/providers.js~FactoryProvider#params",
    "access": null,
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 810,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "create",
    "memberof": "src/utils/di/providers.js~FactoryProvider",
    "longname": "src/utils/di/providers.js~FactoryProvider#create",
    "access": null,
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 811,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "createProviderFromFnOrClass",
    "memberof": "src/utils/di/providers.js",
    "longname": "src/utils/di/providers.js~createProviderFromFnOrClass",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/providers.js",
    "importStyle": "{createProviderFromFnOrClass}",
    "description": null,
    "lineNumber": 151,
    "undocument": true,
    "params": [
      {
        "name": "fnOrClass",
        "types": [
          "*"
        ]
      },
      {
        "name": "annotations",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 812,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/di/util.js",
    "memberof": null,
    "longname": "src/utils/di/util.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "// A bunch of helper functions.\n\nfunction isUpperCase(char) {\n    return char.toUpperCase() === char;\n}\n\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\n\n\nfunction isObject(value) {\n    return typeof value === 'object';\n}\n\n\nfunction toString(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n\n    if (token === undefined || token === null) {\n        return '' + token;\n    }\n\n    if (token.name) {\n        return token.name;\n    }\n\n    return token.toString();\n}\n\nvar ownKeys = (this && this.Reflect && Reflect.ownKeys ? Reflect.ownKeys : function ownKeys(O) {\n    var keys = Object.getOwnPropertyNames(O);\n    if (Object.getOwnPropertySymbols) return keys.concat(Object.getOwnPropertySymbols(O));\n    return keys;\n});\n\n\nexport {\n    isUpperCase,\n    isFunction,\n    isObject,\n    toString,\n    ownKeys\n};\n"
  },
  {
    "__docId__": 813,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isUpperCase",
    "memberof": "src/utils/di/util.js",
    "longname": "src/utils/di/util.js~isUpperCase",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/util.js",
    "importStyle": "{isUpperCase}",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "char",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 814,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isFunction",
    "memberof": "src/utils/di/util.js",
    "longname": "src/utils/di/util.js~isFunction",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/util.js",
    "importStyle": "{isFunction}",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 815,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isObject",
    "memberof": "src/utils/di/util.js",
    "longname": "src/utils/di/util.js~isObject",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/util.js",
    "importStyle": "{isObject}",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 816,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "toString",
    "memberof": "src/utils/di/util.js",
    "longname": "src/utils/di/util.js~toString",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/util.js",
    "importStyle": "{toString}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "token",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 817,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ownKeys",
    "memberof": "src/utils/di/util.js",
    "longname": "src/utils/di/util.js~ownKeys",
    "access": null,
    "export": true,
    "importPath": "./src/utils/di/util.js",
    "importStyle": "{ownKeys}",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 818,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/hotfixes/DisableTextSelection.js",
    "memberof": null,
    "longname": "src/utils/hotfixes/DisableTextSelection.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by tom on 08/07/16.\n */\n\nvar currentLocation = window.location;\nvar isWebsite = currentLocation.protocol.indexOf('http') !== -1 && currentLocation.host.indexOf('localhost') === -1;\n\nif(!isWebsite) {\n    /* Source: https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet/insertRule */\n    var styleElement = document.createElement('style'),\n        styleSheet;\n\n    /* Append style element to head */\n    document.head.appendChild(styleElement);\n\n    /* Grab style sheet */\n    styleSheet = styleElement.sheet;\n    styleSheet.insertRule('*:not(input):not(textarea){-webkit-touch-callout: none; -webkit-user-select: none; -moz-user-select: none; -o-user-select: none; user-select: none;}', 0);\n}\n"
  },
  {
    "__docId__": 819,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "currentLocation",
    "memberof": "src/utils/hotfixes/DisableTextSelection.js",
    "longname": "src/utils/hotfixes/DisableTextSelection.js~currentLocation",
    "access": null,
    "export": false,
    "importPath": "./src/utils/hotfixes/DisableTextSelection.js",
    "importStyle": null,
    "description": "Created by tom on 08/07/16.",
    "lineNumber": 5,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 820,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isWebsite",
    "memberof": "src/utils/hotfixes/DisableTextSelection.js",
    "longname": "src/utils/hotfixes/DisableTextSelection.js~isWebsite",
    "access": null,
    "export": false,
    "importPath": "./src/utils/hotfixes/DisableTextSelection.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 821,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/hotfixes/FamousKeyboardOffset.js",
    "memberof": null,
    "longname": "src/utils/hotfixes/FamousKeyboardOffset.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n Fixes a bug causing the entire viewport to stick when a keyboard is spawned by a user click on an input field.\n When the keyboard is hidden again, the viewport remains in the top of the screen, with the bottom part of the screen being blank.\n\n This is caused by a change in Famo.us 0.3.0, and has been marked as \"won't fix\": https://github.com/Famous/famous/issues/317\n\n\n\n @author: Tom Clement (tjclement)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nimport './famouskeyboardoffset.css!';\n"
  },
  {
    "__docId__": 822,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/hotfixes/IESupport.js",
    "memberof": null,
    "longname": "src/utils/hotfixes/IESupport.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by tom on 21/01/16.\n */\n\nimport './Polyfills.js';\nimport './ZIndexSetter.js';"
  },
  {
    "__docId__": 823,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/hotfixes/Polyfills.js",
    "memberof": null,
    "longname": "src/utils/hotfixes/Polyfills.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by tom on 06/01/16.\n */\n\n/*\n * TODO: Find a way if possible to make chrome handle scaling correctly. There is a bug currently where chrome\n * displaces an object when messing around with scaling\n */\n\n\nimport './polyfills/FunctionName.js';\nimport './polyfills/RequestAnimationFrame.js';\nimport './polyfills/StartsWith.js';\nimport './polyfills/ObjectKeys.js';"
  },
  {
    "__docId__": 824,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/hotfixes/ZIndexSetter.js",
    "memberof": null,
    "longname": "src/utils/hotfixes/ZIndexSetter.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by tom on 21/01/16.\n * Credits: Hein Rutjes (2015)\n *\n * Fix z-index support for famo.us in MSIE / FF\n */\nimport ElementOutput                    from 'famous/core/ElementOutput';\nimport Bowser                           from 'bowser';\n\nlet browser = Bowser;\n\nif (((browser.msie || browser.msedge) && parseFloat(browser.version) <= 11) ||\n    (browser.chrome) && parseFloat(browser.version) >= 53) {\n    duplicateZIndex();\n    //TODO: Check if it's still broken in v54\n} else if (browser.firefox && parseFloat(browser.version) <= 53) {\n    removeSurfacePreserve3D();\n}\n\nfunction duplicateZIndex() {\n    let oldCommit = ElementOutput.prototype.commit;\n    ElementOutput.prototype.commit = function (context) {\n        oldCommit.call(this, context);\n        if (this._element) {\n            var zIndex = this._matrix[14];\n            if (this._element.style.zIndex !== zIndex) {\n                this._element.style.zIndex = zIndex;\n            }\n        }\n    };\n}\n\nfunction removeSurfacePreserve3D() {\n    debugger;\n    let styleSheets = window.document.styleSheets;\n    for (let sheetIndex in styleSheets) {\n        let sheet = styleSheets[sheetIndex];\n        if (sheet && sheet.href && sheet.href.indexOf('famous.css') !== -1) {\n            for (let ruleIndex in sheet.cssRules) {\n                let rule = sheet.cssRules[ruleIndex];\n                if (rule && rule.selectorText === '.famous-surface') {\n                    rule.style.removeProperty('transform-style');\n                    rule.style.removeProperty('-moz-transform-style');\n                    rule.style.removeProperty('-webkit-transform-style');\n                }\n            }\n        }\n    }\n}"
  },
  {
    "__docId__": 825,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "browser",
    "memberof": "src/utils/hotfixes/ZIndexSetter.js",
    "longname": "src/utils/hotfixes/ZIndexSetter.js~browser",
    "access": null,
    "export": false,
    "importPath": "./src/utils/hotfixes/ZIndexSetter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 826,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "duplicateZIndex",
    "memberof": "src/utils/hotfixes/ZIndexSetter.js",
    "longname": "src/utils/hotfixes/ZIndexSetter.js~duplicateZIndex",
    "access": null,
    "export": false,
    "importPath": "./src/utils/hotfixes/ZIndexSetter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 827,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "removeSurfacePreserve3D",
    "memberof": "src/utils/hotfixes/ZIndexSetter.js",
    "longname": "src/utils/hotfixes/ZIndexSetter.js~removeSurfacePreserve3D",
    "access": null,
    "export": false,
    "importPath": "./src/utils/hotfixes/ZIndexSetter.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 828,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/hotfixes/polyfills/FunctionName.js",
    "memberof": null,
    "longname": "src/utils/hotfixes/polyfills/FunctionName.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/** Polyfill Function.name for IE9+ support */\n\n/* Credits: http://matt.scharley.me/2012/03/monkey-patch-name-ie.html */\n(function () {\n    if (Function.prototype.name === undefined && Object.defineProperty !== undefined) {\n        Object.defineProperty(Function.prototype, 'name', {\n            get: function () {\n                var funcNameRegex = /function\\s([^(]{1,})\\(/;\n                var results = (funcNameRegex).exec((this).toString());\n                return (results && results.length > 1) ? results[1].trim() : '';\n            },\n            set: function (value) {\n            }\n        });\n    }\n}());"
  },
  {
    "__docId__": 829,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/hotfixes/polyfills/ObjectKeys.js",
    "memberof": null,
    "longname": "src/utils/hotfixes/polyfills/ObjectKeys.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\nif (!Object.keys) {\n    Object.keys = (function () {\n        'use strict';\n        var hasOwnProperty = Object.prototype.hasOwnProperty,\n            hasDontEnumBug = !({toString: null}).propertyIsEnumerable('toString'),\n            dontEnums = [\n                'toString',\n                'toLocaleString',\n                'valueOf',\n                'hasOwnProperty',\n                'isPrototypeOf',\n                'propertyIsEnumerable',\n                'constructor'\n            ],\n            dontEnumsLength = dontEnums.length;\n\n        return function (obj) {\n            if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n                throw new TypeError('Object.keys called on non-object');\n            }\n\n            var result = [], prop, i;\n\n            for (prop in obj) {\n                if (hasOwnProperty.call(obj, prop)) {\n                    result.push(prop);\n                }\n            }\n\n            if (hasDontEnumBug) {\n                for (i = 0; i < dontEnumsLength; i++) {\n                    if (hasOwnProperty.call(obj, dontEnums[i])) {\n                        result.push(dontEnums[i]);\n                    }\n                }\n            }\n            return result;\n        };\n    }());\n}\n"
  },
  {
    "__docId__": 830,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/hotfixes/polyfills/RequestAnimationFrame.js",
    "memberof": null,
    "longname": "src/utils/hotfixes/polyfills/RequestAnimationFrame.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/** Polyfill requestAnimationFrame for IE9+ support */\n\n/* Credits: Opera engineer Erik Moller */\n(function () {\n    var lastTime = 0;\n    var vendors = ['webkit', 'moz'];\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame =\n            window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame)\n        window.requestAnimationFrame = function (callback, element) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function () {\n                    callback(currTime + timeToCall);\n                },\n                timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n\n    if (!window.cancelAnimationFrame)\n        window.cancelAnimationFrame = function (id) {\n            clearTimeout(id);\n        };\n}());"
  },
  {
    "__docId__": 831,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/hotfixes/polyfills/StartsWith.js",
    "memberof": null,
    "longname": "src/utils/hotfixes/polyfills/StartsWith.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by lundfall on 2/4/16.\n */\n\nif (!String.prototype.startsWith) {\n    String.prototype.startsWith = function (searchString, position) {\n        position = position || 0;\n        return this.substr(position, searchString.length) === searchString;\n    };\n}"
  },
  {
    "__docId__": 832,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/request/RequestClient.js",
    "memberof": null,
    "longname": "src/utils/request/RequestClient.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Hans van den Akker (mysim1)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\n/**\n * Prepares a GET request and initiates the communication.\n * @param {String} url\n * @returns {Promise} Returns an asynchronous response object which can be managed to read the response in an chaining proces.\n */\nexport function GetRequest(url) {\n\n    // Return a new promise.\n    return new Promise(function (resolve, reject) {\n        // Do the usual XHR stuff\n        var req = new XMLHttpRequest();\n        req.open('GET', url, true);\n\n        req.onload = function () {\n            // This is called even on 404 etc\n            // so check the status\n            if (req.status === 200) {\n                // Resolve the promise with the response text\n                resolve(req.response);\n            } else {\n                // Otherwise reject with the status text\n                // which will hopefully be a meaningful error\n                reject(Error(req.statusText));\n            }\n        };\n\n        // Handle network errors\n        req.onerror = function () {\n            reject(Error('Network Error'));\n        };\n\n        // Make the request\n        req.send();\n    });\n}\n\n/**\n * Prepares a POST request and initiates the communication.\n * @param {Object} options Provide properties: { headers: <Map>, data: <string>, url: <string> }\n * @returns {Promise} Returns an asynchronous response object which can be managed to read the response in an chaining proces.\n */\nexport function PostRequest(options) {\n\n    // make the request dummy proof\n    if (!options) {\n        options = {};\n    }\n    if (!options.headers) {\n        options.headers = new Map();\n    }\n    if (!options.data) {\n        options.data = '';\n    }\n\n\n    return new Promise((resolve, reject)=> {\n\n        var req = new XMLHttpRequest();\n        req.open('POST', options.url, true);\n\n        for (var entry of options.headers.entries())\n            req.setRequestHeader(entry[0], entry[1]);\n\n\n        req.onload = function () {\n            // This is called even on 404 etc\n            // so check the status\n            if (req.status === 200) {\n                // Resolve the promise with the response text\n                let responseDate = req.getResponseHeader('Date');\n                resolve({response: req.response, timestamp: responseDate});\n            } else {\n                // Otherwise reject with the status text\n                // which will hopefully be a meaningful error\n                reject(Error(req.statusText));\n            }\n        };\n\n\n        // Handle network errors\n        req.onerror = function () {\n            reject(Error('Network Error'));\n        };\n\n        req.send(options.data);\n    });\n\n}\n\n\nexport function ExistsRequest(url) {\n\n    // Do the usual XHR stuff\n    var req = new XMLHttpRequest();\n    req.open('OPTIONS', url, false);\n    req.send();\n\n    return req.status !== 404;\n}"
  },
  {
    "__docId__": 833,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "GetRequest",
    "memberof": "src/utils/request/RequestClient.js",
    "longname": "src/utils/request/RequestClient.js~GetRequest",
    "access": null,
    "export": true,
    "importPath": "./src/utils/request/RequestClient.js",
    "importStyle": "{GetRequest}",
    "description": "Prepares a GET request and initiates the communication.",
    "lineNumber": 15,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Returns an asynchronous response object which can be managed to read the response in an chaining proces."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns an asynchronous response object which can be managed to read the response in an chaining proces."
    },
    "generator": false
  },
  {
    "__docId__": 834,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "PostRequest",
    "memberof": "src/utils/request/RequestClient.js",
    "longname": "src/utils/request/RequestClient.js~PostRequest",
    "access": null,
    "export": true,
    "importPath": "./src/utils/request/RequestClient.js",
    "importStyle": "{PostRequest}",
    "description": "Prepares a POST request and initiates the communication.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Returns an asynchronous response object which can be managed to read the response in an chaining proces."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Provide properties: { headers: <Map>, data: <string>, url: <string> }"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Returns an asynchronous response object which can be managed to read the response in an chaining proces."
    },
    "generator": false
  },
  {
    "__docId__": 835,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ExistsRequest",
    "memberof": "src/utils/request/RequestClient.js",
    "longname": "src/utils/request/RequestClient.js~ExistsRequest",
    "access": null,
    "export": true,
    "importPath": "./src/utils/request/RequestClient.js",
    "importStyle": "{ExistsRequest}",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 836,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/request/UrlParser.js",
    "memberof": null,
    "longname": "src/utils/request/UrlParser.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Hans van den Akker (mysim1)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\n\n/**\n * Parses a url\n * @param url\n * @returns {*}\n * @constructor\n */\nexport function UrlParser(url) {\n\n    var e = /^([a-z][a-z0-9+.-]*):(?:\\/\\/((?:(?=((?:[a-z0-9-._~!$&'()*+,;=:]|%[0-9A-F]{2})*))(\\3)@)?(?=(\\[[0-9A-F:.]{2,}\\]|(?:[a-z0-9-._~!$&'()*+,;=]|%[0-9A-F]{2})*))\\5(?::(?=(\\d*))\\6)?)(\\/(?=((?:[a-z0-9-._~!$&'()*+,;=:@\\/]|%[0-9A-F]{2})*))\\8)?|(\\/?(?!\\/)(?=((?:[a-z0-9-._~!$&'()*+,;=:@\\/]|%[0-9A-F]{2})*))\\10)?)(?:\\?(?=((?:[a-z0-9-._~!$&'()*+,;=:@\\/?]|%[0-9A-F]{2})*))\\11)?(?:#(?=((?:[a-z0-9-._~!$&'()*+,;=:@\\/?]|%[0-9A-F]{2})*))\\12)?$/i;\n\n    if (url.match(e)) {\n        return {\n            url: RegExp['$&'],\n            protocol: RegExp.$1,\n            host: RegExp.$2,\n            path: RegExp.$8,\n            hash: RegExp.$12\n        };\n    } else {\n        return null;\n    }\n}"
  },
  {
    "__docId__": 837,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "UrlParser",
    "memberof": "src/utils/request/UrlParser.js",
    "longname": "src/utils/request/UrlParser.js~UrlParser",
    "access": null,
    "export": true,
    "importPath": "./src/utils/request/UrlParser.js",
    "importStyle": "{UrlParser}",
    "description": "Parses a url",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      },
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 838,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/request/XmlParser.js",
    "memberof": null,
    "longname": "src/utils/request/XmlParser.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n\n\n @author: Hans van den Akker (mysim1)\n @license NPOSL-3.0\n @copyright Bizboard, 2015\n\n */\n\nexport function ParseStringToXml(text) {\n    try {\n        var xml = null;\n\n        if (window.DOMParser) {\n\n            var parser = new DOMParser();\n            xml = parser.parseFromString(text, 'text/xml');\n\n            var found = xml.getElementsByTagName('parsererror');\n\n            if (!found || !found.length || !found[0].childNodes.length) {\n                return xml;\n            }\n\n            return null;\n        } else {\n\n            if(typeof ActiveXObject !== 'function') { var ActiveXObject = () => {}; }\n\n            xml = new ActiveXObject('Microsoft.XMLDOM');\n\n            xml.async = false;\n            xml.loadXML(text);\n\n            return xml;\n        }\n    } catch (e) {\n        // suppress\n        console.log('Error parsing the string to xml.');\n    }\n}"
  },
  {
    "__docId__": 839,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ParseStringToXml",
    "memberof": "src/utils/request/XmlParser.js",
    "longname": "src/utils/request/XmlParser.js~ParseStringToXml",
    "access": null,
    "export": true,
    "importPath": "./src/utils/request/XmlParser.js",
    "importStyle": "{ParseStringToXml}",
    "description": "\n\n@author: Hans van den Akker (mysim1)",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@license",
        "tagValue": "NPOSL-3.0"
      },
      {
        "tagName": "@copyright",
        "tagValue": "Bizboard, 2015"
      }
    ],
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 840,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/view/LayoutHelpers.js",
    "memberof": null,
    "longname": "src/utils/view/LayoutHelpers.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by lundfall on 01/09/16.\n */\nimport isEqual                      from 'lodash/isEqual.js';\nimport findIndex                    from 'lodash/findIndex.js';\nimport Easing                       from 'famous/transitions/Easing.js';\n\nimport {Utils}                      from './Utils.js';\nimport {TrueSizedLayoutDockHelper}  from '../../layout/TrueSizedLayoutDockHelper.js';\n\n\nclass BaseLayoutHelper {\n    constructor(sizeResolver) {\n        this._sizeResolver = sizeResolver;\n    }\n\n    layout() {\n        throw Error(\"Not implemented\");\n    }\n\n    boundingBoxSize() {\n        throw Error(\"Not implemented\");\n    }\n\n    /**\n     * Gets the flow information from the renderable\n     * @param {Renderable} renderable\n     * @returns {{transition: Object, callback: Function}}\n     * @private\n     */\n    _getRenderableFlowInformation(renderable) {\n        let {decorations} = renderable;\n        let flowInformation = {transition: undefined, callback: undefined};\n        let {flow} = decorations;\n        if (flow) {\n            flowInformation.transition = flow.currentTransition || (flow.defaults && flow.defaults.transition);\n            flowInformation.callback = flow.callback;\n        }\n        return flowInformation;\n    }\n}\n\n\nexport class DockedLayoutHelper extends BaseLayoutHelper {\n\n    /**\n     * Computes translation, inner size, actual docking size (outer size) and an adjusted docking size for a renderable that is about to be docked.\n     * @param {OrderedHashMap} dockedRenderables A map containing Array-pairs of [renderable, renderableCounterpart] containing the things that are attached to the sides.\n     * @param {OrderedHashMap} filledRenderables A map containing Array-pairs of [renderable, renderableCounterpart] containing the things that are filled.\n     * @param {Object} context. The famous context with a valid size proportion.\n     * @param {Object} ownDecorators The decorators that are applied to the view.\n     * @param {Array|Number} [ownDecorators.extraTranslate]. A translate to shift the entire layout with.\n     * @param {Array|Number} [ownDecorators.viewMargins] The margins to apply on the outer edges of the view.\n     * @returns {undefined}\n     * @private\n     */\n    layout(dockedRenderables, filledRenderables, context, ownDecorations) {\n        let {extraTranslate, viewMargins: margins} = ownDecorations;\n        let dockHelper = new TrueSizedLayoutDockHelper(context);\n\n        if (margins) {\n            dockHelper.margins(margins);\n        }\n\n        /* Process Renderables with a non-fill dock */\n        let dockedNames = dockedRenderables ? dockedRenderables.keys() : [];\n        for (let renderableName of dockedNames) {\n            let [renderable, renderableCounterpart] = dockedRenderables.get(renderableName);\n            let {dockSize, translate, innerSize, space} = this._prepareForDockedRenderable(renderable, renderableCounterpart, context, extraTranslate, margins);\n            let {callback, transition} = this._getRenderableFlowInformation(renderable);\n            let {dock, rotate, opacity, origin, scale, skew} = renderable.decorations; // todo add scaling/skew\n            let {dockMethod} = dock;\n            if (dockHelper[dockMethod]) {\n                dockHelper[dockMethod](renderableName, dockSize, space, translate, innerSize, {\n                    rotate,\n                    opacity,\n                    callback,\n                    transition,\n                    origin,\n                    scale,\n                    skew\n                });\n            }\n        }\n\n        /* Process Renderables with a fill dock (this needs to be done after non-fill docks, since order matters in LayoutDockHelper) */\n        let filledNames = filledRenderables ? filledRenderables.keys() : [];\n        for (let renderableName of filledNames) {\n            let [renderable, renderableCounterpart] = filledRenderables.get(renderableName);\n            let {decorations} = renderable;\n            let {rotate, opacity, origin} = decorations;\n            let {translate, dockSize} = this._prepareForDockedRenderable(renderable, renderableCounterpart, context, extraTranslate, margins);\n            let {callback, transition} = this._getRenderableFlowInformation(renderable);\n            /* Special case for undefined size, since it's treated differently by the dockhelper, and should be kept to undefined if specified */\n            let dimensionHasUndefinedSize = (dimension) => [decorations.dock.size, decorations.size].every((size) => !size || size[dimension] === undefined);\n            dockSize = dockSize.map((fallbackSize, dimension) => dimensionHasUndefinedSize(dimension) ? undefined : fallbackSize);\n            dockHelper.fill(renderableName, dockSize, translate, {rotate, opacity, origin, callback, transition});\n        }\n    }\n\n    /**\n     * Computes translation, inner size, actual docking size (outer size) and an adjusted docking size for a renderable that is about to be docked\n     * @param {Renderable} renderable The renderable that is going to be docked\n     * @param {Renderable} renderableCounterpart. The renderable counter-part (e.g. AnimationController, RenderNode, or ContainerSurface).\n     * @param {Object} context. The famous context with a valid size proportion\n     * @param {Array|Number} extraTranslate. A translate to shift the entire layout with\n     * @param {Array|Nuimber} margins The margins to apply on the outer edges of the view\n     * @returns {{dockSize: (Array|Object), translate, innerSize: (Array|Number), inUseDockSize: (Array|Number}}\n     * @private\n     */\n    _prepareForDockedRenderable(renderable, renderableCounterpart, context, extraTranslate, margins = [0, 0, 0, 0]) {\n        let {decorations} = renderable;\n        let {translate = [0, 0, 0]} = decorations;\n        translate = Utils.addTranslations(extraTranslate, translate);\n        let {dockMethod, space} = decorations.dock;\n        let horizontalMargins = margins[1] + margins[3];\n        let verticalMargins = margins[0] + margins[2];\n        let sizeWithoutMargins = [context.size[0] - horizontalMargins, context.size[1] - verticalMargins];\n        let dockSizeSpecified = !(isEqual(decorations.dock.size, [undefined, undefined]));\n        let dockSize = this._sizeResolver.settleDecoratedSize(renderable, renderableCounterpart, {size: sizeWithoutMargins}, dockSizeSpecified ? decorations.dock.size : decorations.size);\n        let inUseDockSize = this._sizeResolver.getResolvedSize(renderable);\n        let innerSize;\n        let {origin, align} = decorations;\n        /* If origin and align is used, we have to add this to the translate of the renderable */\n        if (decorations.size || origin || align) {\n\n            let translateWithProportion = (proportion, size, translation, dimension, factor) =>\n                translation[dimension] += size[dimension] ? factor * size[dimension] * proportion[dimension] : 0;\n\n\n            if(decorations.size){\n\n                this._sizeResolver.settleDecoratedSize(renderable, renderableCounterpart, {size: sizeWithoutMargins}, decorations.size);\n                innerSize = this._sizeResolver.getResolvedSize(renderable);\n\n\n                translate = [...translate]; //shallow copy the translation to prevent the translation for happening multiple times\n\n                /* If no docksize was specified in a certain direction, then use the context size without margins */\n                let outerDockSize = dockSize;\n\n                if (!dockSizeSpecified) {\n                    if (dockMethod === 'fill') {\n                        outerDockSize = [...sizeWithoutMargins];\n                    } else {\n                        let dockingDirection = this.getDockType(dockMethod);\n                        outerDockSize[dockingDirection] = innerSize[dockingDirection];\n                        outerDockSize[+!dockingDirection] = sizeWithoutMargins[+!dockingDirection];\n                    }\n                }\n\n                if (origin && decorations.size) {\n                    decorations.size.forEach((size, dimension) => {\n                        if (this._sizeResolver.isValueTrueSized(size)) {\n                            /* Because the size is set to true, it is interpreted as 1 by famous. We have to add 1 pixel\n                             *  to make up for this.\n                             */\n                            translate[dimension] += 1;\n                        }\n                    });\n                }\n                if (align) {\n                    translateWithProportion(align, outerDockSize, translate, 0, 1);\n                    translateWithProportion(align, outerDockSize, translate, 1, 1);\n                }\n            } else if (align){\n                for(let i of [0,1]){\n                    translateWithProportion(align, decorations.dock.size[i] ? dockSize : sizeWithoutMargins, translate, i, 1);\n                }\n            }\n        }\n        for (let i = 0; i < 2; i++) {\n            if (dockSize[i] == true) {\n                /* If a true size is used, do a tilde on it in order for the dockhelper to recognize it as true-sized */\n                dockSize[i] = ~inUseDockSize[i];\n            }\n        }\n        /* If the renderable is unrenderable due to zero height/width...*/\n        if (inUseDockSize[0] === 0 || inUseDockSize[1] === 0) {\n            /* Don't display the space if the size is 0*/\n            space = 0;\n        }\n        return {dockSize, translate, innerSize, inUseDockSize, space};\n    }\n\n    getDockType(dockMethodToGet) {\n        let dockTypes = [['right', 'left'], ['top', 'bottom']];\n        return findIndex(dockTypes, (dockMethods) => ~dockMethods.indexOf(dockMethodToGet));\n    }\n\n    /**\n     * Calculates the bounding box size for all the renderables passed to the function\n     * @param {OrderedHashMap} dockedRenderables A map containing Array-pairs of [renderable, renderableCounterpart] containing the things that are attached to the sides.\n     * @param {OrderedHashMap} filledRenderables A map containing Array-pairs of [renderable, renderableCounterpart] containing the things that are filled.\n     * @param {Object} ownDecorators The decorators that are applied to the view.\n     * @returns {Array|Number} The bounding box size of all the renderables\n     */\n    boundingBoxSize(dockedRenderables, filledRenderables, ownDecorations) {\n        let fillSize = [undefined, undefined];\n        if (filledRenderables) {\n            /* We support having multiple fills */\n            fillSize = filledRenderables.reduce((resultingSize, [filledRenderable, renderableCounterpart], renderableName) => {\n                this._sizeResolver.settleDecoratedSize(filledRenderable, renderableCounterpart, {size: [NaN, NaN]}, filledRenderable.decorations.size);\n                let resolvedSize = this._sizeResolver.getResolvedSize(filledRenderable);\n                if (resolvedSize) {\n                    for (let [dimension, singleSize] of resolvedSize.entries()) {\n                        if (singleSize !== undefined && ((resultingSize[dimension] === undefined) || resultingSize[dimension] < singleSize)) {\n                            resultingSize[dimension] = singleSize;\n                        }\n                    }\n                }\n                return resultingSize;\n            }, [undefined, undefined]);\n        }\n        let dockSize = [...fillSize];\n        if (dockedRenderables) {\n            dockSize = this._getDockedRenderablesBoundingBox(dockedRenderables);\n            if (fillSize) {\n                for (let [dimension, singleFillSize] of fillSize.entries()) {\n                    if (singleFillSize !== undefined) {\n                        if (dockSize[dimension] === undefined) {\n                            dockSize[dimension] = singleFillSize;\n                        } else {\n                            dockSize[dimension] += singleFillSize;\n                        }\n                    }\n                }\n            }\n        }\n\n        for (let i = 0; i < 2; i++) {\n            if (Number.isNaN(dockSize[i])) {\n                dockSize[i] = undefined;\n            }\n            if (dockSize[i] !== undefined && ownDecorations.viewMargins) {\n                let {viewMargins} = ownDecorations;\n                /* if i==0 we want margin left and right, if i==1 we want margin top and bottom */\n                dockSize[i] += viewMargins[(i + 1) % 4] + viewMargins[(i + 3) % 4];\n            }\n        }\n        return dockSize;\n    }\n\n    _getDockedRenderablesBoundingBox(dockedRenderables) {\n        let {dockMethod} = dockedRenderables.get(dockedRenderables.keyAt(0))[0].decorations.dock;\n        /* Gets the dock type where, 0 is right or left (horizontal) and 1 is top or bottom (vertical) */\n        let dockType = this.getDockType(dockMethod);\n        let dockingDirection = dockType;\n        let orthogonalDirection = !dockType + 0;\n\n\n        /* Previously countered dock size for docking direction and opposite docking direction */\n        let previousDockSize = 0;\n        /* Add up the different sizes to if they are docked all in the same direction */\n        return dockedRenderables.reduce((result, [dockedRenderable, renderableCounterpart], renderableName) => {\n            let {decorations} = dockedRenderable;\n            let {dockMethod: otherDockMethod} = decorations.dock;\n            /* If docking is done orthogonally */\n            if (this.getDockType(otherDockMethod) !== dockType) {\n                return [NaN, NaN];\n            } else {\n                /* Resolve both inner size and outer size */\n                this._sizeResolver.settleDecoratedSize(dockedRenderable, renderableCounterpart, {size: [NaN, NaN]}, decorations.dock.size);\n                let resolvedOuterSize = this._sizeResolver.getResolvedSize(dockedRenderable);\n\n                let resolvedInnerSize = [undefined, undefined];\n                if (dockedRenderable.decorations.size) {\n                    this._sizeResolver.settleDecoratedSize(dockedRenderable, renderableCounterpart, {size: [NaN, NaN]}, decorations.size);\n                    resolvedInnerSize = this._sizeResolver.getResolvedSize(dockedRenderable);\n                }\n\n                if (!resolvedOuterSize || !resolvedInnerSize) {\n                    return [NaN, NaN];\n                }\n                let resolvedSize = [resolvedOuterSize[0] === undefined ? resolvedInnerSize[0] : resolvedOuterSize[0],\n                    resolvedOuterSize[1] === undefined ? resolvedInnerSize[1] : resolvedOuterSize[1]];\n                let newResult = new Array(2);\n                /* If docking is done from opposite directions */\n                let dockingFromOpposite = dockMethod !== otherDockMethod;\n                if (dockingFromOpposite) {\n                    newResult[dockingDirection] = NaN;\n                } else {\n                    /* If this or the previous renderable size is 0, don't add the space */\n                    let spaceSize = (resolvedSize[dockingDirection] === 0 || previousDockSize === 0) ? 0 : decorations.dock.space;\n                    newResult[dockingDirection] = resolvedSize[dockingDirection] + spaceSize + result[dockingDirection];\n                    previousDockSize = resolvedSize[dockingDirection];\n                }\n                /* If a size in the orthogonalDirection has been set... */\n                if (resolvedSize[orthogonalDirection] !== undefined && !Number.isNaN(resolvedSize[orthogonalDirection])) {\n                    /* If there is no result in the orthogonal direction specified yet... */\n                    if (result[orthogonalDirection] === undefined) {\n                        newResult[orthogonalDirection] = resolvedSize[orthogonalDirection];\n                    } else {\n                        /* get the max bounding box for the specified orthogonal direction */\n                        newResult[orthogonalDirection] = Math.max(result[orthogonalDirection], resolvedSize[orthogonalDirection]);\n                    }\n                } else {\n                    newResult[orthogonalDirection] = result[orthogonalDirection];\n                }\n                return newResult;\n            }\n        }, dockingDirection ? [undefined, 0] : [0, undefined]);\n    }\n}\n\nexport class FullSizeLayoutHelper extends BaseLayoutHelper {\n\n    /**\n     * Layouts full size renderables\n     * @param {OrderedHashMap} A map containing Array-pairs of [renderable, renderableCounterpart] containing the full size renderables.\n     * @param {Object} context The famous-flex context with a valid size property\n     * @param {Object} ownDecorations. The decorators that are applied to the view.\n     */\n    layout(fullScreenRenderables, context, ownDecorations) {\n        let {extraTranslate} = ownDecorations;\n        let names = fullScreenRenderables ? fullScreenRenderables.keys() : [];\n        for (let renderableName of names) {\n            let [renderable] = fullScreenRenderables.get(renderableName);\n            let {callback, transition} = this._getRenderableFlowInformation(renderable);\n            let translate = Utils.addTranslations(extraTranslate, renderable.decorations.translate || [0, 0, 0]);\n            context.set(renderableName, {\n                translate,\n                size: context.size,\n                opacity: renderable.decorations.opacity === undefined ? 1 : renderable.decorations.opacity,\n                callback,\n                transition\n            });\n        }\n    }\n\n}\n\nexport class TraditionalLayoutHelper extends BaseLayoutHelper {\n\n    layout(traditionalRenderables, context, ownDecorations) {\n        let names = traditionalRenderables ? traditionalRenderables.keys() : [];\n        for (let renderableName of names) {\n            let [renderable, renderableCounterpart] = traditionalRenderables.get(renderableName);\n            let renderableSize = this._sizeResolver.settleDecoratedSize(renderable, renderableCounterpart, context, renderable.decorations.size) || [undefined, undefined];\n            let {\n                translate = [0, 0, 0], origin = [0, 0], align, rotate,\n                opacity = 1, scale, skew\n            } = renderable.decorations;\n            translate = Utils.addTranslations(ownDecorations.extraTranslate, translate);\n            let {callback, transition} = this._getRenderableFlowInformation(renderable);\n            let adjustedTranslation = Utils.adjustPlacementForTrueSize(renderable, renderableSize, origin, translate, this._sizeResolver);\n            context.set(renderableName, {\n                size: renderableSize,\n                translate: adjustedTranslation,\n                origin,\n                scale,\n                skew,\n                align,\n                callback,\n                transition,\n                rotate,\n                opacity\n            });\n        }\n    }\n\n    boundingBoxSize(traditionalRenderables) {\n        let renderableNames = traditionalRenderables ? traditionalRenderables.keys() : [];\n        let totalSize = [undefined, undefined];\n        for (let renderableName of renderableNames) {\n            let [renderable, renderableCounterpart] = traditionalRenderables.get(renderableName);\n            this._sizeResolver.settleDecoratedSize(renderable, renderableCounterpart, {size: [NaN, NaN]}, renderable.decorations.size);\n            let size = this._sizeResolver.getResolvedSize(renderable);\n\n            /* Backup: If size can't be resolved, then see if there's a size specified on the decorator */\n            if (!size && renderable.decorations) {\n                let decoratedSize = renderable.decorations.size;\n                let isValidSize = (inputSize) => typeof inputSize == 'number' && inputSize > 0;\n                if (decoratedSize && decoratedSize.every(isValidSize)) {\n                    size = decoratedSize;\n                }\n            }\n            if (!size) {\n                continue;\n            }\n            let renderableSpec;\n            renderableSpec = renderable.decorations;\n            let {align = [0, 0]} = renderableSpec;\n            let translate = Utils.adjustPlacementForTrueSize(renderable, size, renderableSpec.origin || [0, 0], renderableSpec.translate || [0, 0, 0]);\n\n            /* If there has been an align specified, then nothing can be calculated */\n            if (!renderableSpec || !renderableSpec.size || (align[0] && align[1])) {\n                continue;\n            }\n\n            /* If the renderable has a lower min y/x position, or a higher max y/x position, save its values */\n            for (let i = 0; i < 2; i++) {\n                /* Undefined is the same as context size */\n                if (renderable.decorations.size[i] !== undefined && size[i] !== undefined && !(align && align[i])) {\n                    let newPotentialOuterSize = translate[i] + size[i];\n                    if (newPotentialOuterSize > totalSize[i] || totalSize[i] === undefined) {\n                        totalSize[i] = newPotentialOuterSize;\n                    }\n                }\n\n            }\n        }\n        return totalSize;\n    }\n}"
  },
  {
    "__docId__": 841,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BaseLayoutHelper",
    "memberof": "src/utils/view/LayoutHelpers.js",
    "longname": "src/utils/view/LayoutHelpers.js~BaseLayoutHelper",
    "access": null,
    "export": false,
    "importPath": "./src/utils/view/LayoutHelpers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 842,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/utils/view/LayoutHelpers.js~BaseLayoutHelper",
    "longname": "src/utils/view/LayoutHelpers.js~BaseLayoutHelper#constructor",
    "access": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "params": [
      {
        "name": "sizeResolver",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 843,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_sizeResolver",
    "memberof": "src/utils/view/LayoutHelpers.js~BaseLayoutHelper",
    "longname": "src/utils/view/LayoutHelpers.js~BaseLayoutHelper#_sizeResolver",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 844,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "layout",
    "memberof": "src/utils/view/LayoutHelpers.js~BaseLayoutHelper",
    "longname": "src/utils/view/LayoutHelpers.js~BaseLayoutHelper#layout",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 845,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "boundingBoxSize",
    "memberof": "src/utils/view/LayoutHelpers.js~BaseLayoutHelper",
    "longname": "src/utils/view/LayoutHelpers.js~BaseLayoutHelper#boundingBoxSize",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 846,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getRenderableFlowInformation",
    "memberof": "src/utils/view/LayoutHelpers.js~BaseLayoutHelper",
    "longname": "src/utils/view/LayoutHelpers.js~BaseLayoutHelper#_getRenderableFlowInformation",
    "access": "private",
    "description": "Gets the flow information from the renderable",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{transition: Object, callback: Function}}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Renderable"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{transition: Object, callback: Function}"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 847,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DockedLayoutHelper",
    "memberof": "src/utils/view/LayoutHelpers.js",
    "longname": "src/utils/view/LayoutHelpers.js~DockedLayoutHelper",
    "access": null,
    "export": true,
    "importPath": "./src/utils/view/LayoutHelpers.js",
    "importStyle": "{DockedLayoutHelper}",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseLayoutHelper"
    ]
  },
  {
    "__docId__": 848,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "layout",
    "memberof": "src/utils/view/LayoutHelpers.js~DockedLayoutHelper",
    "longname": "src/utils/view/LayoutHelpers.js~DockedLayoutHelper#layout",
    "access": "private",
    "description": "Computes translation, inner size, actual docking size (outer size) and an adjusted docking size for a renderable that is about to be docked.",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{undefined}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "OrderedHashMap"
        ],
        "spread": false,
        "optional": false,
        "name": "dockedRenderables",
        "description": "A map containing Array-pairs of [renderable, renderableCounterpart] containing the things that are attached to the sides."
      },
      {
        "nullable": null,
        "types": [
          "OrderedHashMap"
        ],
        "spread": false,
        "optional": false,
        "name": "filledRenderables",
        "description": "A map containing Array-pairs of [renderable, renderableCounterpart] containing the things that are filled."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context.",
        "description": "The famous context with a valid size proportion."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownDecorators",
        "description": "The decorators that are applied to the view."
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "ownDecorators.extraTranslate].",
        "description": "A translate to shift the entire layout with."
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "ownDecorators.viewMargins",
        "description": "The margins to apply on the outer edges of the view."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 849,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_prepareForDockedRenderable",
    "memberof": "src/utils/view/LayoutHelpers.js~DockedLayoutHelper",
    "longname": "src/utils/view/LayoutHelpers.js~DockedLayoutHelper#_prepareForDockedRenderable",
    "access": "private",
    "description": "Computes translation, inner size, actual docking size (outer size) and an adjusted docking size for a renderable that is about to be docked",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{dockSize: (Array|Object), translate, innerSize: (Array|Number), inUseDockSize: (Array|Number}}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Renderable"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": "The renderable that is going to be docked"
      },
      {
        "nullable": null,
        "types": [
          "Renderable"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableCounterpart.",
        "description": "The renderable counter-part (e.g. AnimationController, RenderNode, or ContainerSurface)."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context.",
        "description": "The famous context with a valid size proportion"
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "extraTranslate.",
        "description": "A translate to shift the entire layout with"
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "Nuimber"
        ],
        "spread": false,
        "optional": false,
        "name": "margins",
        "description": "The margins to apply on the outer edges of the view"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{dockSize: (Array|Object), translate, innerSize: (Array|Number), inUseDockSize: (Array|Number}"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 850,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getDockType",
    "memberof": "src/utils/view/LayoutHelpers.js~DockedLayoutHelper",
    "longname": "src/utils/view/LayoutHelpers.js~DockedLayoutHelper#getDockType",
    "access": null,
    "description": null,
    "lineNumber": 186,
    "undocument": true,
    "params": [
      {
        "name": "dockMethodToGet",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 851,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "boundingBoxSize",
    "memberof": "src/utils/view/LayoutHelpers.js~DockedLayoutHelper",
    "longname": "src/utils/view/LayoutHelpers.js~DockedLayoutHelper#boundingBoxSize",
    "access": null,
    "description": "Calculates the bounding box size for all the renderables passed to the function",
    "lineNumber": 198,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array|Number} The bounding box size of all the renderables"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "OrderedHashMap"
        ],
        "spread": false,
        "optional": false,
        "name": "dockedRenderables",
        "description": "A map containing Array-pairs of [renderable, renderableCounterpart] containing the things that are attached to the sides."
      },
      {
        "nullable": null,
        "types": [
          "OrderedHashMap"
        ],
        "spread": false,
        "optional": false,
        "name": "filledRenderables",
        "description": "A map containing Array-pairs of [renderable, renderableCounterpart] containing the things that are filled."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownDecorators",
        "description": "The decorators that are applied to the view."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array",
        "Number"
      ],
      "spread": false,
      "description": "The bounding box size of all the renderables"
    },
    "generator": false
  },
  {
    "__docId__": 852,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getDockedRenderablesBoundingBox",
    "memberof": "src/utils/view/LayoutHelpers.js~DockedLayoutHelper",
    "longname": "src/utils/view/LayoutHelpers.js~DockedLayoutHelper#_getDockedRenderablesBoundingBox",
    "access": null,
    "description": null,
    "lineNumber": 244,
    "undocument": true,
    "params": [
      {
        "name": "dockedRenderables",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 853,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "FullSizeLayoutHelper",
    "memberof": "src/utils/view/LayoutHelpers.js",
    "longname": "src/utils/view/LayoutHelpers.js~FullSizeLayoutHelper",
    "access": null,
    "export": true,
    "importPath": "./src/utils/view/LayoutHelpers.js",
    "importStyle": "{FullSizeLayoutHelper}",
    "description": null,
    "lineNumber": 306,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseLayoutHelper"
    ]
  },
  {
    "__docId__": 854,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "layout",
    "memberof": "src/utils/view/LayoutHelpers.js~FullSizeLayoutHelper",
    "longname": "src/utils/view/LayoutHelpers.js~FullSizeLayoutHelper#layout",
    "access": null,
    "description": "Layouts full size renderables",
    "lineNumber": 314,
    "params": [
      {
        "nullable": null,
        "types": [
          "OrderedHashMap"
        ],
        "spread": false,
        "optional": false,
        "name": "A",
        "description": "map containing Array-pairs of [renderable, renderableCounterpart] containing the full size renderables."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "The famous-flex context with a valid size property"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "ownDecorations.",
        "description": "The decorators that are applied to the view."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 855,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TraditionalLayoutHelper",
    "memberof": "src/utils/view/LayoutHelpers.js",
    "longname": "src/utils/view/LayoutHelpers.js~TraditionalLayoutHelper",
    "access": null,
    "export": true,
    "importPath": "./src/utils/view/LayoutHelpers.js",
    "importStyle": "{TraditionalLayoutHelper}",
    "description": null,
    "lineNumber": 333,
    "undocument": true,
    "interface": false,
    "extends": [
      "BaseLayoutHelper"
    ]
  },
  {
    "__docId__": 856,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "layout",
    "memberof": "src/utils/view/LayoutHelpers.js~TraditionalLayoutHelper",
    "longname": "src/utils/view/LayoutHelpers.js~TraditionalLayoutHelper#layout",
    "access": null,
    "description": null,
    "lineNumber": 335,
    "undocument": true,
    "params": [
      {
        "name": "traditionalRenderables",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownDecorations",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 857,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "boundingBoxSize",
    "memberof": "src/utils/view/LayoutHelpers.js~TraditionalLayoutHelper",
    "longname": "src/utils/view/LayoutHelpers.js~TraditionalLayoutHelper#boundingBoxSize",
    "access": null,
    "description": null,
    "lineNumber": 362,
    "undocument": true,
    "params": [
      {
        "name": "traditionalRenderables",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 858,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/view/RenderableHelper.js",
    "memberof": null,
    "longname": "src/utils/view/RenderableHelper.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by lundfall on 02/09/16.\n */\n\nimport OrderedHashMap               from 'ordered-hashmap';\n\nimport Transitionable               from 'famous/transitions/Transitionable.js';\nimport Easing                       from 'famous/transitions/Easing.js';\nimport Draggable                    from 'famous/modifiers/Draggable.js';\nimport ContainerSurface             from 'famous/Surfaces/ContainerSurface.js';\nimport Transform                    from 'famous/core/Transform.js';\nimport Timer                        from 'famous/utilities/Timer.js';\nimport GenericSync                  from 'famous/inputs/GenericSync.js';\nimport MouseSync                    from 'famous/inputs/MouseSync.js';\nimport TouchSync                    from 'famous/inputs/TouchSync.js';\nimport RenderNode                   from 'famous/core/RenderNode';\nimport Modifier                     from 'famous/core/Modifier.js';\nimport AnimationController          from 'famous-flex/AnimationController.js';\n\nimport {Throttler}                  from 'arva-js/utils/Throttler.js';\n\nimport {limit}                      from '../Limiter.js';\nimport {Utils}                      from './Utils.js';\nimport {\n    callbackToPromise,\n    waitMilliseconds\n}                                   from '../CallbackHelpers.js';\n\n\nexport class RenderableHelper {\n\n    /**\n     * Creates a utility for maintaining proper state of decorated renderables\n     * @param {Function} bindMethod\n     * @param {Function} pipeMethod\n     * @param {Object|Renderable} outputRenderables\n     * @param sizeResolver\n     */\n    constructor(bindMethod, pipeMethod, outputRenderables, sizeResolver) {\n        this._bindMethod = bindMethod;\n        this._renderableCounterparts = outputRenderables;\n        this._sizeResolver = sizeResolver;\n        this._pipeToView = pipeMethod;\n        this.waitingAnimations = [];\n        this._renderables = {};\n        this._groupedRenderables = {};\n        this._pipedRenderables = {};\n        this._groupedRenderables = {};\n        this._runningFlowStates = {};\n    }\n\n    assignRenderable(renderable, renderableName) {\n        this._renderables[renderableName] = renderable;\n        let renderableEquivalent = this._addDecoratedRenderable(renderable, renderableName);\n        this._renderableCounterparts[renderableName] = renderableEquivalent;\n        this._setupAllRenderableListeners(renderableName);\n    }\n\n    /**\n     * Setups all renderable listeners (decoration events, decoration pipes, pipe to the view)\n     * @param {String} renderableName the name of the renderable\n     * @param {Boolean} enabled set to false to unset all the events\n     * @private\n     */\n    _setupAllRenderableListeners(renderableName, enabled = true) {\n        /* If the this._renderableCounterparts equivalent doesn't have the pipe function as is the case with the draggable, then use the regular renderable */\n        let renderableOrEquivalent = this._getPipeableRenderableFromName(renderableName);\n        if (enabled) {\n            this._pipeRenderable(renderableOrEquivalent, renderableName);\n        } else {\n            this._unpipeRenderable(renderableOrEquivalent, renderableName);\n        }\n        let {decorations} = this._renderables[renderableName];\n        if (decorations) {\n            this._setDecorationPipes(renderableOrEquivalent, decorations.pipes, enabled);\n            this._setDecorationEvents(renderableOrEquivalent, decorations.eventSubscriptions, enabled);\n        }\n    }\n\n    /**\n     * Sets the decoration events that are specified with (among potential others) @layout.on and @layout.once\n     * @param {String} renderableName\n     * @param enable. If false, removes the events.\n     * @private\n     */\n    _setDecorationEvents(renderable, subscriptions, enable = true) {\n        for (let subscription of subscriptions || []) {\n            let subscriptionType = subscription.type || 'on';\n            if (!enable) {\n                /* In famous, you remove a listener by calling removeListener, but some classes might have another event\n                 * listener that is called off\n                 */\n                subscriptionType = renderable.removeListener ? 'removeListener' : 'off';\n            }\n            let eventName = subscription.eventName;\n            let callback = subscription.callback;\n            if (subscriptionType in renderable) {\n                renderable[subscriptionType](eventName, this._bindMethod(callback));\n            }\n        }\n    }\n    \n    /**\n     * Pipes the renderable to a list of other renderables\n     * @param {Renderable} renderable\n     * @param {Array|String} Names of renderables that have to be piped.\n     * @param {Boolean} enabled. Set to false to unpipe\n     * @private\n     */\n    _setDecorationPipes(renderable, pipes, enabled = true) {\n        for (let pipeToName of pipes || []) {\n            let target = pipeToName ? this._renderables[pipeToName] : this;\n            let pipeFn = (enabled ? '' : 'un') + 'pipe';\n            /* In order to keep things consistent and easier to use, we pipe from the renderable equivalent */\n            if (renderable[pipeFn]) {\n                renderable[pipeFn](target);\n            }\n            if (renderable[pipeFn] && target._eventOutput) {\n                renderable[pipeFn](target._eventOutput);\n            }\n        }\n\n    }\n\n    /**\n     * Unpipes a renderables that has been piped to this view\n     * @param {String} renderableName The name of the renderable\n     * @private\n     */\n    _unpipeRenderable(renderableName) {\n        if(this._pipeToView(this._pipedRenderables[renderableName]), false){\n            delete this._pipedRenderables[renderableName];\n        }\n    }\n\n    /**\n     * Pipes a renderable to this view\n     * @param {Renderable} renderable. The renderable that is going to be piped\n     * @param {String} renderableName. The name of the renderable that is going to be piped.\n     * @private\n     */\n    _pipeRenderable(renderable, renderableName) {\n        /* Auto pipe events from the renderable to the view */\n        if(this._pipeToView(renderable, true)){\n            this._pipedRenderables[renderableName] = renderable;\n        }\n    }\n\n    /**\n     * Determines whether the renderable counterpart (i.e. animationcontroller or containersurface) should be used \n     * when piping, or the renderable itself\n     * @param {String} renderableName The name of the renderable\n     * @returns {Renderable} the renderable or its counterpart\n     * @private\n     */\n    _getPipeableRenderableFromName(renderableName) {\n        return this._renderableCounterparts[renderableName].pipe ? this._renderableCounterparts[renderableName] : this._renderables[renderableName];\n    }\n\n    /**\n     * Adds a decorated renderable to the bookkeeping of the view\n     * @param renderable\n     * @param renderableName\n     * @returns {Renderable} newRenderable The renderable that is normally stored this._renderableCounterpart[renderableName]\n     * @private\n     */\n    _addDecoratedRenderable(renderable, renderableName) {\n        let {flow, size, dock} = renderable.decorations;\n\n        if (size) {\n            this._bindSizeFunctions(size);\n        }\n        if (dock && dock.size) {\n            this._bindSizeFunctions(dock.size);\n        }\n        let renderableCounterpart = this._processsDecoratedRenderableCounterpart(renderable, renderableName);\n\n        this._addRenderableToDecoratorGroup(renderable, renderableCounterpart, renderableName);\n        return renderableCounterpart;\n    }\n\n    /**\n     * Bind the size functions so that they don't have to be bound afterwards\n     * @param {Array|Number} size\n     * @private\n     */\n    _bindSizeFunctions(size) {\n        for (let index = 0; index < 2; index++) {\n            if (typeof size[index] === 'function') {\n                size[index] = this._bindMethod(size[index]);\n            }\n        }\n    }\n\n    /**\n     * Returns true if there are any flowy renderables.\n     * @returns {Boolean} hasFlowyRenderables\n     */\n    hasFlowyRenderables() {\n        for (let groupName in this._groupedRenderables) {\n            let renderableGroup = this._groupedRenderables[groupName];\n            if (!renderableGroup.keys().every((renderableName) => !renderableGroup.get(renderableName)[0].decorations.flow)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    /**\n     * Processes the renderable counter-part of the renderable. The counterpart is different from the renderable\n     * in @layout.draggable, @layout.swipable, @layout.animate, and others.\n     * @param {Renderable} renderable the renderable which has renderable.decorations set to determine the counter part\n     * @param {String} renderableName the name of the renderable\n     * @returns {AnimationController|ContainerSurface|RenderNode|*} The renderable counterpart\n     * @private\n     */\n    _processsDecoratedRenderableCounterpart(renderable, renderableName) {\n        let {draggableOptions, swipableOptions, clip, animation, flow} = renderable.decorations;\n\n        /* If we clip, then we need to create a containerSurface */\n        if (clip) {\n            let clipSize = clip.size;\n            /* Resolve clipSize specified as undefined */\n            let containerSurface = new ContainerSurface({\n                size: clipSize,\n                properties: {overflow: 'hidden', ...clip.properties}\n            });\n            containerSurface.add(renderable);\n            if (containerSurface.pipe) {\n                containerSurface.pipe(renderable._eventOutput);\n            }\n            renderable.containerSurface = containerSurface;\n        }\n\n        if (animation) {\n            this._processAnimatedRenderable(renderable, renderableName, animation);\n        }\n\n        if (swipableOptions) {\n            renderable = this._initSwipable(swipableOptions, renderable);\n        } else if (draggableOptions && !renderable.node) {\n            renderable.node = new RenderNode();\n            let draggable = new Draggable(draggableOptions);\n            renderable.draggable = draggable;\n            renderable.node.add(draggable).add(renderable);\n            renderable.pipe(draggable);\n            //TODO: We don't do an unpiping of the draggable, which might be dangerous\n            this._pipeToView(draggable);\n        }\n\n        if (renderable.node) {\n            /* Assign output handler */\n            renderable.node._eventOutput = renderable._eventOutput;\n        }\n\n        let renderableCounterpart = renderable.animationController || renderable.containerSurface || renderable.node || renderable;\n        /* If a renderable has an AnimationController used to animate it, add that to this._renderableCounterparts.\n         * If a renderable has an ContainerSurface used to clip it, add that to this._renderableCounterparts.\n         * this._renderableCounterparts is used in the LayoutController in this.layout to render this view. */\n        if (flow) {\n            renderableCounterpart.isFlowy = true;\n        }\n        return renderableCounterpart;\n    }\n\n    /**\n     * Pipes the output events of all items in the renderable counterparts that might have been forgotten due to legacy way of declaring\n     * renderables\n     * @returns {void}\n     * @private\n     */\n    pipeAllRenderables() {\n        for (let renderableName in this.renderables) {\n            if (!this._pipedRenderables[renderableName]) {\n                this._pipeRenderable(this._getPipeableRenderableFromName(renderableName), renderableName);\n            }\n        }\n    }\n\n    /**\n     * Initialize all animation set by @layout.animate\n     */\n    initializeAnimations() {\n        for (let animation of (this.waitingAnimations || [])) {\n            let renderableToWaitFor = this._renderables[animation.waitFor];\n            if (renderableToWaitFor && renderableToWaitFor.on) {\n                renderableToWaitFor.on('shown', function subscription() {\n                    animation.showMethod();\n                    if ('off' in renderableToWaitFor) {\n                        renderableToWaitFor.off('shown', subscription);\n                    }\n                    if ('removeListener' in renderableToWaitFor) {\n                        renderableToWaitFor.removeListener('shown', subscription);\n                    }\n                });\n            } else {\n                Utils.warn(`Attempted to delay showing renderable ${animation.waitFor}, which does not exist or contain an on() method.`);\n            }\n        }\n    }\n    \n    //Done\n    /**\n     * Processes an animated renderable\n     * @param renderable\n     * @param renderableName\n     * @param options\n     * @private\n     */\n    _processAnimatedRenderable(renderable, renderableName, options) {\n\n        let pipeRenderable = () => {\n            if (renderable.pipe) renderable.pipe(renderable.animationController._eventOutput)\n        };\n\n        /* If there's already an animationcontroller present, just change the options */\n        let renderableCounterpart = this._renderableCounterparts[renderableName];\n        if (renderableCounterpart instanceof AnimationController) {\n            renderable.animationController = renderableCounterpart;\n            renderable.animationController.setOptions(options);\n            pipeRenderable();\n        } else {\n            let animationController = renderable.animationController = new AnimationController(options);\n            pipeRenderable();\n            let showMethod = this.showWithAnimationController.bind(this, animationController, renderable);\n\n            if (options.delay && options.delay > 0 && options.showInitially) {\n                Timer.setTimeout(showMethod, options.delay);\n            } else if (options.waitFor) {\n                this.waitingAnimations.push({showMethod: showMethod, waitFor: options.waitFor});\n            } else if (options.showInitially) {\n                showMethod();\n            }\n\n\n        }\n    }\n    //Done\n    /**\n     * Shows a renderable using the animationController specified. When operation is complete, the renderable emits\n     * the one events 'show' or 'hide', depending on what operation that was done.\n     * @param animationController\n     * @param renderable\n     * @param show\n     * @private\n     */\n    showWithAnimationController(animationController, renderable, show = true, callback) {\n        animationController._showingRenderable = show;\n        let callbackIfExists = () => {\n            if(callback) {\n                callback();\n            }\n        };\n        let emitOnFinished = () => {\n            if (renderable.emit) {\n                renderable.emit(show ? 'shown' : 'hidden');\n            }\n            callbackIfExists();\n        };\n\n        if (show) {\n            animationController.show(renderable.containerSurface || renderable, null, emitOnFinished);\n        } else {\n            animationController.hide(null, emitOnFinished);\n        }\n    }\n    //Done\n    _addRenderableToDecoratorGroup(renderable, renderableCounterpart, renderableName) {\n        /* Group the renderable */\n        let groupName = this._getGroupName(renderable);\n\n        if (groupName) {\n            if (!(groupName in this._groupedRenderables)) {\n                this._groupedRenderables[groupName] = new OrderedHashMap();\n            }\n            /* We save the both the renderable and the renderable counterpart in pairs */\n            this._groupedRenderables[groupName].set(renderableName, [renderable, renderableCounterpart]);\n        }\n    }\n\n    //Done\n    _getGroupName(renderable) {\n        let {decorations} = renderable;\n\n        if (!!decorations.dock) {\n            /* 'filled' is a special subset of 'docked' renderables, that need to be rendered after the normal 'docked' renderables are rendered. */\n            return decorations.dock.dockMethod === 'fill' ? 'filled' : 'docked';\n        } else if (!!decorations.fullSize) {\n            return 'fullSize';\n        } else if (decorations.size || decorations.origin || decorations.align || decorations.translate) {\n            return 'traditional';\n        } else {\n            /* This occurs e.g. when a renderable is only marked @renderable, and its parent view has a @layout.custom decorator to define its context. */\n            return 'ignored';\n        }\n    }\n\n    /**\n     * Gets the renderables of a certain group\n     * @param {String} The name of the group\n     * @returns {OrderedHashMap} A map containing Array-pairs of [renderable, renderableCounterpart] containing the renderables of the specified type.\n     */\n    getRenderableGroup(groupName) {\n        return this._groupedRenderables[groupName];\n    }\n    //Done\n    /**\n     * Removes the renderable from the view\n     * @param {String} renderableName The name of the renderable\n     */\n    removeRenderable(renderableName) {\n        let renderable = this._renderables[renderableName];\n        this._setDecorationPipes(renderableName, false);\n        this._setDecorationEvents(renderableName, false);\n        this._unpipeRenderable(renderableName, renderableName);\n        this._removeRenderableFromDecoratorGroup(renderable, renderableName);\n        delete this._renderableCounterparts[renderableName];\n        delete this._renderables[renderableName];\n    }\n    //Done\n    _removeRenderableFromDecoratorGroup(renderable, renderableName) {\n        let groupName = this._getGroupName(renderable);\n        this._removeRenderableFromGroupWithName(renderableName, groupName);\n    }\n    //Done\n    _removeRenderableFromGroupWithName(renderableName, groupName) {\n        let group = this._groupedRenderables[groupName];\n        group.remove(renderableName);\n        if (!group.count()) {\n            delete this._groupedRenderables[groupName];\n        }\n    }\n    //done\n    /**\n     * @example\n     * decorateRenderable('myRenderable',layout.size(100, 100));\n     *\n     * Decorates a renderable with other decorators. Using the same decorators as used previously will override the old ones.\n     * @param {String} renderableName The name of the renderable\n     * @param ...decorators The decorators that should be applied\n     */\n    decorateRenderable(renderableName, ...decorators) {\n        let renderable = this._renderables[renderableName];\n        /* Add translate and rotate to be sure that there decorators translateFrom and rotateFrom work */\n        let fakeRenderable = {\n            decorations: {\n                translate: renderable.decorations.translate || [0, 0, 0],\n                rotate: renderable.decorations.rotate || [0, 0, 0]\n            }\n        };\n        if (!decorators.length) {\n            Utils.warn('No decorators specified to decorateRenderable(renderableName, ...decorators)');\n        }\n        /* There can be existing decorators already, which are preserved. We are extending the decorators object,\n         * by first creating a fake renderable that gets decorators */\n        this.applyDecoratorFunctionsToRenderable(fakeRenderable, decorators)\n        let {decorations} = fakeRenderable;\n        let renderableOrEquivalent = this._getPipeableRenderableFromName(renderableName);\n        /* We might need to do extra piping */\n        this._setDecorationPipes(renderableOrEquivalent, decorations.pipes);\n        this._setDecorationEvents(renderableOrEquivalent, decorations.eventSubscriptions);\n\n        /* If the renderable is surface, we need to do some special things if there is a true size being used */\n        if (Utils.renderableIsSurface(renderable)) {\n            let sizesToCheck = [];\n            let {size, dock} = decorations;\n            if (size) {\n                sizesToCheck.push(size);\n            }\n            if (dock) {\n                sizesToCheck.push(dock.size);\n            }\n            let renderableSize = [undefined, undefined];\n            let trueSizedInfo = this._sizeResolver.getSurfaceTrueSizedInfo(renderable);\n            for (let sizeToCheck of sizesToCheck) {\n                for (let dimension of [0, 1]) {\n                    if (this._sizeResolver.isValueTrueSized(sizeToCheck[dimension])) {\n                        if (!trueSizedInfo) {\n                            trueSizedInfo = this._sizeResolver.configureTrueSizedSurface(renderable);\n                        }\n                        trueSizedInfo.trueSizedDimensions[dimension] = true;\n                        renderableSize[dimension] = true;\n                    } else {\n                        if (trueSizedInfo) {\n                            trueSizedInfo.trueSizedDimensions[dimension] = false;\n                        }\n                    }\n                }\n            }\n            if (sizesToCheck.length) {\n                renderable.setSize(renderableSize);\n            }\n        }\n        let oldRenderableGroupName = this._getGroupName(renderable);\n        let shouldDisableDock = (fakeRenderable.decorations.disableDock && renderable.decorations.dock);\n        let shouldDisableFullSize = (fakeRenderable.decorations.size && renderable.decorations.fullSize);\n        if (shouldDisableDock) {\n            delete renderable.decorations.dock;\n        }\n        if (shouldDisableFullSize) {\n            delete renderable.decorations.fullSize;\n        }\n        /* Extend the object */\n        Object.assign(renderable.decorations, fakeRenderable.decorations);\n        /* See if we have to redo the grouping */\n        let needToChangeDecoratorGroup = (oldRenderableGroupName !== this._getGroupName(renderable)) || shouldDisableDock || shouldDisableFullSize;\n        /* Process new renderable equivalent, if that applies */\n        let renderableCounterpart = this._renderableCounterparts[renderableName] = this._processsDecoratedRenderableCounterpart(renderable, renderableName);\n        if (needToChangeDecoratorGroup) {\n            this._removeRenderableFromGroupWithName(renderableName, oldRenderableGroupName);\n            this._addRenderableToDecoratorGroup(renderable, renderableCounterpart, renderableName);\n        }\n\n    }\n    //done\n    applyDecoratorFunctionsToRenderable(renderable, decorators){\n        for (let decorator of decorators) {\n            /* There can be existing decorators already, which are preserved. We are extending the decorators object,\n             * by first creating a fake renderable that gets decorators */\n            decorator(renderable);\n        }\n    }\n    //Done\n    replaceRenderable(renderableName, newRenderable) {\n        let renderable = this._renderables[renderableName];\n        let renderableHasAnimationController = (this._renderableCounterparts[renderableName] instanceof AnimationController);\n        /* If there isn't a renderable equivalent animationController that does the piping, then we need to redo the event piping */\n        if (!renderableHasAnimationController) {\n            this._setupAllRenderableListeners(renderableName, false);\n        }\n        newRenderable.decorations = {...newRenderable.decorations, ...renderable.decorations};\n        let newRenderableCounterpart = this._processsDecoratedRenderableCounterpart(newRenderable, renderableName);\n        this._groupedRenderables[this._getGroupName(renderable)].set(renderableName, [newRenderable, newRenderableCounterpart]);\n        if (!renderableHasAnimationController) {\n            this._renderableCounterparts[renderableName] = newRenderableCounterpart;\n            this._setupAllRenderableListeners(renderableName, true);\n        }\n        this._renderables[renderableName] = newRenderable;\n    }\n\n\n    //Done\n    async setRenderableFlowState(renderableName = '', stateName = '') {\n\n        let renderable = this._renderables[renderableName];\n        if (!renderable || !renderable.decorations || !renderable.decorations.flow) {\n            return Utils.warn(`setRenderableFlowState called on non-existing or renderable '${renderableName}' without flowstate`);\n        }\n        let flowOptions = renderable.decorations.flow;\n\n        /* Keep track of which flow state changes are running. We only allow one at a time per renderable.\n         * The latest one is always the valid one.\n         */\n        let flowWasInterrupted = false;\n\n        flowOptions.currentState = stateName;\n        for (let {transformations, options} of flowOptions.states[stateName].steps) {\n            flowOptions.currentTransition = options.transition;\n            this.decorateRenderable(renderableName, ...transformations);\n\n            /* Make sure FlowLayoutNode.set() is called next render tick */\n            this._sizeResolver.requestReflow();\n\n            /* Set the callback of the renderable so it's passed to the flowLayoutNode */\n            let resolveData = await new Promise((resolve) => renderable.decorations.flow.callback = resolve);\n\n            /* Optionally, we insert a delay in between ending the previous state change, and starting on the new one. */\n            if (options.delay) {\n                await waitMilliseconds(options.delay);\n            }\n\n            /* If the flow has been interrupted */\n            if (resolveData.reason === 'flowInterrupted') {\n                flowWasInterrupted = true;\n                break;\n            }\n\n\n            let emit = (renderable._eventOutput && renderable._eventOutput.emit || renderable.emit).bind(renderable._eventOutput || renderable);\n            emit('flowStep', {state: stateName});\n        }\n\n        return !flowWasInterrupted;\n    }\n    //Done\n    async setViewFlowState(stateName = '', flowOptions) {\n        let steps = flowOptions.viewStates[stateName];\n\n        /* This is intended to be overwritten by other asynchronous calls to this method, see the stateName check below. */\n        flowOptions.currentState = stateName;\n\n        for (let step of steps) {\n            await Promise.all(this.generateWaitQueueFromViewStateStep(step));\n\n            /* If another state has been set since the invocation of this method, skip any remaining transformations. */\n            if (flowOptions.currentState !== stateName) {\n                break;\n            }\n        }\n\n        return true;\n    }\n\n    generateWaitQueueFromViewStateStep(step) {\n        let waitQueue = [];\n        for (let renderableName in step) {\n            let state = step[renderableName];\n            waitQueue.push(this.setRenderableFlowState(renderableName, state));\n        }\n        return waitQueue;\n    }\n\n\n    getRenderableFlowState(renderableName = '') {\n        let renderable = this._renderables[renderableName];\n        if (!renderable || !renderable.decorations || !renderable.decorations.flow) {\n            return Utils.warn(`getRenderableFlowState called on non-existing or renderable '${renderableName}' without flowstate`);\n        }\n        let flowOptions = renderable.decorations.flow;\n        return flowOptions.currentState;\n    }\n\n    getViewFlowState(flowOptions = {}) {\n        return flowOptions.currentState;\n    }\n\n    /**\n     * Create the swipable and register all the event logic for a swipable renderable\n     * @private\n     */\n    _initSwipable(swipableOptions = {}, renderable = {}) {\n        GenericSync.register({\n            'mouse': MouseSync,\n            'touch': TouchSync\n        });\n\n        let sync = new GenericSync({\n            'mouse': {},\n            'touch': {}\n        });\n\n        renderable.pipe(sync);\n\n        /* Translation modifier */\n        var positionModifier = new Modifier({\n            transform: function () {\n                let [x, y] = position.get();\n                return Transform.translate(x, y, 0);\n            }\n        });\n\n        var position = new Transitionable([0, 0]);\n\n        sync.on('update', (data)=> {\n            let [x,y] = position.get();\n            x += !swipableOptions.snapX ? data.delta[0] : 0;\n            y += !swipableOptions.snapY ? data.delta[1] : 0;\n            let {yRange = [0, 0], xRange = [0, 0]} = swipableOptions;\n            y = limit(yRange[0], y, yRange[1]);\n            x = limit(xRange[0], x, xRange[1]);\n            position.set([x, y]);\n        });\n\n        sync.on('end', (data)=> {\n            let [x,y] = position.get();\n            data.velocity[0] = Math.abs(data.velocity[0]) < 0.5 ? data.velocity[0] * 2 : data.velocity[0];\n            let endX = swipableOptions.snapX ? 0 : x + data.delta[0] + (data.velocity[0] * 175);\n            let endY = swipableOptions.snapY ? 0 : y + data.delta[1] + (data.velocity[1] * 175);\n            let {yRange = [0, 0], xRange = [0, 0]} = swipableOptions;\n            endY = limit(yRange[0], endY, yRange[1]);\n            endX = limit(xRange[0], endX, xRange[1]);\n            position.set([endX, endY], {\n                curve: Easing.outCirc,\n                duration: (750 - Math.abs((data.velocity[0] * 150)))\n            });\n\n            this._determineSwipeEvents(renderable, swipableOptions, endX, endY);\n\n        });\n\n        renderable.node = new RenderNode();\n        renderable.node.add(positionModifier).add(renderable);\n\n        return renderable;\n    }\n    \n    _determineSwipeEvents(renderable, swipableOptions = {}, endX = 0, endY = 0) {\n\n        if (!renderable || !renderable._eventOutput) return;\n\n        let xThreshold = swipableOptions.xThreshold || [undefined, undefined];\n        let yThreshold = swipableOptions.yThreshold || [undefined, undefined];\n\n        if (xThreshold[1] && endX > xThreshold[1]) {\n            renderable._eventOutput.emit('swiped', {\n                direction: 0,\n                displacement: 'right'\n            });\n        }\n\n        if (xThreshold[0] && endX < xThreshold[0]) {\n            renderable._eventOutput.emit('swiped', {\n                direction: 0,\n                displacement: 'left'\n            });\n        }\n\n        if (yThreshold[1] && endY > yThreshold[1]) {\n            renderable._eventOutput.emit('swiped', {\n                direction: 1,\n                displacement: 'bottom'\n            });\n        }\n\n        if (yThreshold[0] && endY < yThreshold[0]) {\n            renderable._eventOutput.emit('swiped', {\n                direction: 1,\n                displacement: 'top'\n            });\n        }\n    }\n\n    /**\n     * Rearranges the order in which docked renderables are parsed for rendering, ensuring that 'renderableName' is processed\n     * before 'nextRenderableName'.\n     * @param {String} renderableName\n     * @param {String} nextRenderableName\n     */\n    prioritiseDockBefore(renderableName, nextRenderableName) {\n        let dockedRenderables = this._groupedRenderables.docked;\n        if (!dockedRenderables) {\n            Utils.warn(`Could not prioritise '${renderableName}' before '${nextRenderableName}': no docked renderables present.`);\n            return false;\n        }\n        let result = this._prioritiseDockAtIndex(renderableName, dockedRenderables.indexOf(nextRenderableName));\n        if (!result) {\n            Utils.warn(`Could not prioritise '${renderableName}' before '${nextRenderableName}': could not find one of the renderables by name.\n                        The following docked renderables are present: ${dockedRenderables.keys()}`);\n        }\n        return result;\n    }\n\n    /**\n     * @param {String} renderableName\n     * @param {String} prevRenderableName\n     */\n    prioritiseDockAfter(renderableName, prevRenderableName) {\n        let dockedRenderables = this._groupedRenderables.docked;\n        if (!dockedRenderables) {\n            Utils.warn(`Could not prioritise '${renderableName}' after '${prevRenderableName}': no docked renderables present.`);\n            return false;\n        }\n        let result = this._prioritiseDockAtIndex(renderableName, dockedRenderables.indexOf(prevRenderableName) + 1);\n        if (!result) {\n            Utils.warn(`Could not prioritise '${renderableName}' after '${prevRenderableName}': could not find one of the renderables by name.\n                        The following docked renderables are present: ${dockedRenderables.keys()}`);\n        }\n        return result;\n    }\n\n    /**\n     * Helper function used by prioritiseDockBefore and prioritiseDockAfter to change order of docked renderables\n     * @param renderableName\n     * @param index\n     * @returns {boolean}\n     * @private\n     */\n    _prioritiseDockAtIndex(renderableName, index) {\n        let dockedRenderables = this._groupedRenderables.docked;\n        let renderableToRearrange = dockedRenderables.get(renderableName);\n\n        if (index < 0 || !renderableToRearrange) {\n            return false;\n        }\n\n        dockedRenderables.remove(renderableName);\n        dockedRenderables.insert(index, renderableName, renderableToRearrange);\n        \n        return true;\n\n    }\n    \n}"
  },
  {
    "__docId__": 859,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RenderableHelper",
    "memberof": "src/utils/view/RenderableHelper.js",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "access": null,
    "export": true,
    "importPath": "./src/utils/view/RenderableHelper.js",
    "importStyle": "{RenderableHelper}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 860,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#constructor",
    "access": null,
    "description": "Creates a utility for maintaining proper state of decorated renderables",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "bindMethod",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "pipeMethod",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object",
          "Renderable"
        ],
        "spread": false,
        "optional": false,
        "name": "outputRenderables",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "sizeResolver",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 861,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_bindMethod",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_bindMethod",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 862,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_renderableCounterparts",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_renderableCounterparts",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 863,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_sizeResolver",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_sizeResolver",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 864,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_pipeToView",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_pipeToView",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 865,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "waitingAnimations",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#waitingAnimations",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 866,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_renderables",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_renderables",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 867,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_groupedRenderables",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_groupedRenderables",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 868,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_pipedRenderables",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_pipedRenderables",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 869,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_groupedRenderables",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_groupedRenderables",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 870,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_runningFlowStates",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_runningFlowStates",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 871,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "assignRenderable",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#assignRenderable",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "params": [
      {
        "name": "renderable",
        "types": [
          "*"
        ]
      },
      {
        "name": "renderableName",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 872,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_setupAllRenderableListeners",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_setupAllRenderableListeners",
    "access": "private",
    "description": "Setups all renderable listeners (decoration events, decoration pipes, pipe to the view)",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": "the name of the renderable"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "enabled",
        "description": "set to false to unset all the events"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 873,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_setDecorationEvents",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_setDecorationEvents",
    "access": "private",
    "description": "Sets the decoration events that are specified with (among potential others) @layout.on and @layout.once",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "enable.",
        "description": "If false, removes the events."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 874,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_setDecorationPipes",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_setDecorationPipes",
    "access": "private",
    "description": "Pipes the renderable to a list of other renderables",
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "Renderable"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "Names",
        "description": "of renderables that have to be piped."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "enabled.",
        "description": "Set to false to unpipe"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 875,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_unpipeRenderable",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_unpipeRenderable",
    "access": "private",
    "description": "Unpipes a renderables that has been piped to this view",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": "The name of the renderable"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 876,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_pipeRenderable",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_pipeRenderable",
    "access": "private",
    "description": "Pipes a renderable to this view",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "Renderable"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable.",
        "description": "The renderable that is going to be piped"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName.",
        "description": "The name of the renderable that is going to be piped."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 877,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getPipeableRenderableFromName",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_getPipeableRenderableFromName",
    "access": "private",
    "description": "Determines whether the renderable counterpart (i.e. animationcontroller or containersurface) should be used \nwhen piping, or the renderable itself",
    "lineNumber": 156,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Renderable} the renderable or its counterpart"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": "The name of the renderable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Renderable"
      ],
      "spread": false,
      "description": "the renderable or its counterpart"
    },
    "generator": false
  },
  {
    "__docId__": 878,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_addDecoratedRenderable",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_addDecoratedRenderable",
    "access": "private",
    "description": "Adds a decorated renderable to the bookkeeping of the view",
    "lineNumber": 167,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Renderable} newRenderable The renderable that is normally stored this._renderableCounterpart[renderableName]"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Renderable"
      ],
      "spread": false,
      "description": "newRenderable The renderable that is normally stored this._renderableCounterpart[renderableName]"
    },
    "generator": false
  },
  {
    "__docId__": 879,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_bindSizeFunctions",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_bindSizeFunctions",
    "access": "private",
    "description": "Bind the size functions so that they don't have to be bound afterwards",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 880,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasFlowyRenderables",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#hasFlowyRenderables",
    "access": null,
    "description": "Returns true if there are any flowy renderables.",
    "lineNumber": 199,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Boolean} hasFlowyRenderables"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "hasFlowyRenderables"
    },
    "generator": false
  },
  {
    "__docId__": 881,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_processsDecoratedRenderableCounterpart",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_processsDecoratedRenderableCounterpart",
    "access": "private",
    "description": "Processes the renderable counter-part of the renderable. The counterpart is different from the renderable\nin @layout.draggable, @layout.swipable, @layout.animate, and others.",
    "lineNumber": 217,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AnimationController|ContainerSurface|RenderNode|*} The renderable counterpart"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Renderable"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": "the renderable which has renderable.decorations set to determine the counter part"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": "the name of the renderable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AnimationController",
        "ContainerSurface",
        "RenderNode",
        "*"
      ],
      "spread": false,
      "description": "The renderable counterpart"
    },
    "generator": false
  },
  {
    "__docId__": 882,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pipeAllRenderables",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#pipeAllRenderables",
    "access": "private",
    "description": "Pipes the output events of all items in the renderable counterparts that might have been forgotten due to legacy way of declaring\nrenderables",
    "lineNumber": 272,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 883,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "initializeAnimations",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#initializeAnimations",
    "access": null,
    "description": "Initialize all animation set by @layout.animate",
    "lineNumber": 283,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 884,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_processAnimatedRenderable",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_processAnimatedRenderable",
    "access": "private",
    "description": "Processes an animated renderable",
    "lineNumber": 310,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 885,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "showWithAnimationController",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#showWithAnimationController",
    "access": "private",
    "description": "Shows a renderable using the animationController specified. When operation is complete, the renderable emits\nthe one events 'show' or 'hide', depending on what operation that was done.",
    "lineNumber": 347,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "animationController",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "show",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 886,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_addRenderableToDecoratorGroup",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_addRenderableToDecoratorGroup",
    "access": null,
    "description": null,
    "lineNumber": 368,
    "undocument": true,
    "params": [
      {
        "name": "renderable",
        "types": [
          "*"
        ]
      },
      {
        "name": "renderableCounterpart",
        "types": [
          "*"
        ]
      },
      {
        "name": "renderableName",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 887,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getGroupName",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_getGroupName",
    "access": null,
    "description": null,
    "lineNumber": 382,
    "undocument": true,
    "params": [
      {
        "name": "renderable",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 888,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getRenderableGroup",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#getRenderableGroup",
    "access": null,
    "description": "Gets the renderables of a certain group",
    "lineNumber": 403,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{OrderedHashMap} A map containing Array-pairs of [renderable, renderableCounterpart] containing the renderables of the specified type."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "The",
        "description": "name of the group"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "OrderedHashMap"
      ],
      "spread": false,
      "description": "A map containing Array-pairs of [renderable, renderableCounterpart] containing the renderables of the specified type."
    },
    "generator": false
  },
  {
    "__docId__": 889,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeRenderable",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#removeRenderable",
    "access": null,
    "description": "Removes the renderable from the view",
    "lineNumber": 411,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": "The name of the renderable"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 890,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_removeRenderableFromDecoratorGroup",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_removeRenderableFromDecoratorGroup",
    "access": null,
    "description": null,
    "lineNumber": 421,
    "undocument": true,
    "params": [
      {
        "name": "renderable",
        "types": [
          "*"
        ]
      },
      {
        "name": "renderableName",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 891,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_removeRenderableFromGroupWithName",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_removeRenderableFromGroupWithName",
    "access": null,
    "description": null,
    "lineNumber": 426,
    "undocument": true,
    "params": [
      {
        "name": "renderableName",
        "types": [
          "*"
        ]
      },
      {
        "name": "groupName",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 892,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "decorateRenderable",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#decorateRenderable",
    "access": null,
    "description": "",
    "examples": [
      "decorateRenderable('myRenderable',layout.size(100, 100));\n\nDecorates a renderable with other decorators. Using the same decorators as used previously will override the old ones."
    ],
    "lineNumber": 442,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": "The name of the renderable"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "...decorators",
        "description": "The decorators that should be applied"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 893,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "applyDecoratorFunctionsToRenderable",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#applyDecoratorFunctionsToRenderable",
    "access": null,
    "description": null,
    "lineNumber": 516,
    "undocument": true,
    "params": [
      {
        "name": "renderable",
        "types": [
          "*"
        ]
      },
      {
        "name": "decorators",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 894,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "replaceRenderable",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#replaceRenderable",
    "access": null,
    "description": null,
    "lineNumber": 524,
    "undocument": true,
    "params": [
      {
        "name": "renderableName",
        "types": [
          "*"
        ]
      },
      {
        "name": "newRenderable",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 895,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setRenderableFlowState",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#setRenderableFlowState",
    "access": null,
    "description": null,
    "lineNumber": 543,
    "undocument": true,
    "params": [
      {
        "name": "renderableName",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      },
      {
        "name": "stateName",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 896,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setViewFlowState",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#setViewFlowState",
    "access": null,
    "description": null,
    "lineNumber": 586,
    "undocument": true,
    "params": [
      {
        "name": "stateName",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      },
      {
        "name": "flowOptions",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 897,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "generateWaitQueueFromViewStateStep",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#generateWaitQueueFromViewStateStep",
    "access": null,
    "description": null,
    "lineNumber": 604,
    "undocument": true,
    "params": [
      {
        "name": "step",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 898,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getRenderableFlowState",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#getRenderableFlowState",
    "access": null,
    "description": null,
    "lineNumber": 614,
    "undocument": true,
    "params": [
      {
        "name": "renderableName",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "",
        "defaultValue": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 899,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getViewFlowState",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#getViewFlowState",
    "access": null,
    "description": null,
    "lineNumber": 623,
    "undocument": true,
    "params": [
      {
        "name": "flowOptions",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 900,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_initSwipable",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_initSwipable",
    "access": "private",
    "description": "Create the swipable and register all the event logic for a swipable renderable",
    "lineNumber": 631,
    "params": [
      {
        "name": "swipableOptions",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "renderable",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 901,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_determineSwipeEvents",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_determineSwipeEvents",
    "access": null,
    "description": null,
    "lineNumber": 687,
    "undocument": true,
    "params": [
      {
        "name": "renderable",
        "types": [
          "*"
        ]
      },
      {
        "name": "swipableOptions",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "endX",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      },
      {
        "name": "endY",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 0,
        "defaultValue": "0"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 902,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "prioritiseDockBefore",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#prioritiseDockBefore",
    "access": null,
    "description": "Rearranges the order in which docked renderables are parsed for rendering, ensuring that 'renderableName' is processed\nbefore 'nextRenderableName'.",
    "lineNumber": 729,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nextRenderableName",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 903,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "prioritiseDockAfter",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#prioritiseDockAfter",
    "access": null,
    "description": "",
    "lineNumber": 747,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "prevRenderableName",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 904,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_prioritiseDockAtIndex",
    "memberof": "src/utils/view/RenderableHelper.js~RenderableHelper",
    "longname": "src/utils/view/RenderableHelper.js~RenderableHelper#_prioritiseDockAtIndex",
    "access": "private",
    "description": "Helper function used by prioritiseDockBefore and prioritiseDockAfter to change order of docked renderables",
    "lineNumber": 768,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 905,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/view/SizeResolver.js",
    "memberof": null,
    "longname": "src/utils/view/SizeResolver.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by lundfall on 01/09/16.\n */\n\n\nimport {limit}                      from 'arva-js/utils/Limiter.js';\n\nimport ImageSurface                 from 'famous/surfaces/ImageSurface.js';\nimport AnimationController          from 'famous-flex/AnimationController.js';\n\nimport {View}                       from '../../core/View.js';\nimport {Utils}                      from './Utils.js';\n\nimport EventEmitter                 from 'eventemitter3';\n\n/**\n * Used by the view to keep track of sizes. Emits events to communicate with the view to do certain actions\n */\nexport class SizeResolver extends EventEmitter {\n\n    constructor() {\n        super();\n        this._resolvedSizesCache = new Map();\n        this._trueSizedSurfaceInfo = new Map();\n    }\n\n    /**\n     * Determines the decorated size. If there is true sizing involved, then it will not return the resolved true size.\n     * Instead, this can be accessed through getResolvedSize()\n     * @param {Renderable} renderable. The renderable for which we need the size\n     * @param {Renderable} renderableCounterpart. The renderable counter-part (e.g. AnimationController, RenderNode, or ContainerSurface).\n     * @param {Object} context. The context, with a specified size. The size can be set to NaN in order to return NaN\n     * @param {Array} specifiedSize. The size to use which is specified as a decorator\n     * @returns {*}\n     */\n    settleDecoratedSize(renderable, renderableCounterpart, context, specifiedSize = [undefined, undefined]) {\n        let size = [];\n        let cacheResolvedSize = [];\n        for (let dimension = 0; dimension < 2; dimension++) {\n            size[dimension] = this.resolveSingleSize(specifiedSize[dimension], context.size, dimension);\n            if (this.isValueTrueSized(size[dimension])) {\n                cacheResolvedSize[dimension] = this._resolveSingleTrueSizedRenderable(renderable, size, dimension, renderableCounterpart);\n                if (Utils.renderableIsSurface(renderable)) {\n                    size[dimension] = true;\n                } else {\n                    size[dimension] = cacheResolvedSize[dimension];\n                }\n            } else {\n                size[dimension] = size[dimension] === undefined ? (context.size[dimension] || size[dimension]) : size[dimension];\n                cacheResolvedSize[dimension] = size[dimension];\n            }\n        }\n\n        this._resolvedSizesCache.set(renderable, [cacheResolvedSize[0], cacheResolvedSize[1]]);\n\n        return (size[0] !== null && size[1] !== null) ? size : null;\n    }\n\n    /**\n     * Resolves a single dimension (i.e. x or y) size of a renderable.\n     * @param {Number|Boolean|Object|Undefined|Function} renderableSize Renderable's single dimension size.\n     * @param {Array.Number} contextSize The context size\n     * @param {Number} dimension The dimension of the size that is being evaluated (e.g. 1 or 0)\n     * @returns {Number} The resulting size\n     * @private\n     */\n    resolveSingleSize(renderableSize, contextSize, dimension) {\n        switch (typeof renderableSize) {\n            case 'function':\n                return this.resolveSingleSize(renderableSize(...contextSize), contextSize, dimension);\n            case 'number':\n                /* If 0 < renderableSize < 1, we interpret renderableSize as a fraction of the contextSize */\n                return renderableSize < 1 && renderableSize > 0 ? renderableSize * Math.max(contextSize[dimension], 0) : renderableSize;\n            default:\n                /* renderableSize can be true/false, undefined, or 'auto' for example. */\n                return renderableSize;\n        }\n    }\n\n    /**\n     * Resolves a true size to an actual size of a truesized renderable. size[dim] must be negative or true.\n     * @param {Renderable} renderable the renderable\n     * @param {Array} size the size as specified\n     * @param dim the dimensions e.g. 0,1 that should be processed\n     * @param {Renderable} renderableCounterpart. The renderable counter-part (e.g. AnimationController, RenderNode, or ContainerSurface).\n     * @returns {Number} size[dim] will be returned with a non-truesized value\n     * @private\n     */\n    _resolveSingleTrueSizedRenderable(renderable, size, dim, renderableCounterpart) {\n        if (size[dim] === -1) {\n            Utils.warn('-1 detected as set size. If you want a true sized element to take ' +\n                'up a proportion of your view, please define a function doing so by ' +\n                'using the context size');\n        }\n        /* If there is an AnimationController without content, display 0 size */\n        if (renderableCounterpart instanceof AnimationController && !renderableCounterpart._showingRenderable) {\n            return 0;\n        }\n        /* True sized element. This has been specified as ~100 where 100 is the initial size\n         * applying this operator again (e.g. ~~100) gives us the value 100 back\n         * */\n        if (Utils.renderableIsComposite(renderable)) {\n            let twoDimensionalSize = renderable.getSize();\n            if (!twoDimensionalSize) {\n                return this._specifyUndeterminedSingleHeight(renderable, size, dim);\n            } else {\n                let renderableIsView = renderable instanceof View;\n                if (size[dim] === true && twoDimensionalSize[dim] === undefined &&\n                    ((renderableIsView && (renderable._initialised && !renderable.containsUncalculatedSurfaces())) || !renderableIsView)) {\n                    Utils.warn(`True sized renderable '${renderable.constructor.name}' is taking up the entire context size.`);\n                    return twoDimensionalSize[dim];\n                } else {\n                    let approximatedSize = size[dim] === true ? twoDimensionalSize[dim] : ~size[dim];\n                    let resultingSize = twoDimensionalSize[dim] !== undefined ? twoDimensionalSize[dim] : approximatedSize;\n                    if (renderableIsView) {\n                        resultingSize = (!renderable.containsUncalculatedSurfaces() && renderable._initialised) ? resultingSize : approximatedSize;\n                    }\n                    return resultingSize;\n                }\n            }\n        } else if (Utils.renderableIsSurface(renderable)) {\n            let trueSizedSurfaceInfo = this._trueSizedSurfaceInfo.get(renderable) || {};\n            if (trueSizedSurfaceInfo.calculateOnNext) {\n                trueSizedSurfaceInfo.calculateOnNext = false;\n                this._tryCalculateTrueSizedSurface(renderable);\n            }\n            let {isUncalculated} = trueSizedSurfaceInfo;\n            if (isUncalculated === false) {\n                return trueSizedSurfaceInfo.size[dim];\n            } else {\n                if (size[dim] === true) {\n                    let defaultSize = 5;\n                    Utils.warn(`No initial size set for renderable '${renderable.constructor.name}', will default to ${defaultSize}px`);\n                    size[dim] = ~5;\n                }\n                if (isUncalculated !== true) {\n                    /* Seems like the surface isn't properly configured, let's get that going */\n                    trueSizedSurfaceInfo = this.configureTrueSizedSurface(renderable);\n                }\n                trueSizedSurfaceInfo.trueSizedDimensions[dim] = true;\n                renderable.size[dim] = true;\n                /* Need to set the size in order to get resize notifications */\n                return ~size[dim];\n            }\n        } else {\n            return this._specifyUndeterminedSingleHeight(renderable, size, dim);\n        }\n    }\n\n    /**\n     * Determines if the value is true sized\n     * @param {*} value\n     * @returns {boolean} True if the value is true sized\n     * @private\n     */\n    isValueTrueSized(value) {\n        return value < 0 || value === true\n    }\n\n\n    _specifyUndeterminedSingleHeight(renderable, size, dim) {\n        let resultingSize = size[dim] < 0 ? ~size[dim] : 5;\n        Utils.warn(`Cannot determine size of ${renderable.constructor.name}, falling back to default size or ${resultingSize}px. If the renderable is using legacy declaration this.renderables = ... this isn't supported for true sizing.`);\n        return resultingSize;\n    }\n\n    containsUncalculatedSurfaces() {\n        for (let [surface, {isUncalculated}] of this._trueSizedSurfaceInfo) {\n            if (isUncalculated) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Calculates a surface size, if possible\n     * @param renderable\n     * @private\n     */\n    _tryCalculateTrueSizedSurface(renderable) {\n        let renderableHtmlElement = renderable._element;\n        let trueSizedInfo = this._trueSizedSurfaceInfo.get(renderable);\n        let {trueSizedDimensions} = trueSizedInfo;\n\n        if (renderableHtmlElement && ((renderableHtmlElement.offsetWidth && renderableHtmlElement.offsetHeight) || (!renderable.getContent() && !(renderable instanceof ImageSurface))) && renderableHtmlElement.innerHTML === renderable.getContent() &&\n            (!renderableHtmlElement.style.width || !trueSizedDimensions[0]) && (!renderableHtmlElement.style.height || !trueSizedDimensions[1])) {\n            let newSize;\n\n\n            newSize = [renderableHtmlElement.offsetWidth, renderableHtmlElement.offsetHeight];\n\n            let oldSize = trueSizedInfo.size;\n            let sizeChange = false;\n            if (oldSize) {\n                for (let i = 0; i < 2; i++) {\n                    if (trueSizedDimensions[i] && oldSize[i] !== newSize[i]) {\n                        sizeChange = true;\n                    }\n                }\n            } else {\n                sizeChange = true;\n            }\n\n            if (sizeChange) {\n                trueSizedInfo.size = newSize;\n                trueSizedInfo.isUncalculated = false;\n            }\n            this.requestRecursiveReflow();\n        } else {\n            this.requestReflow();\n            this.requestLayoutControllerReflow();\n        }\n    }\n\n    //Todo listen for these in the view\n    requestRecursiveReflow() {\n        this.emit('reflowRecursively');\n    }\n\n    requestReflow() {\n        this.emit('reflow');\n    }\n\n    requestLayoutControllerReflow() {\n        this.emit('layoutControllerReflow');\n    }\n\n    /**\n     * Sets up a true sized surface\n     * @param renderable\n     * @returns {{isUncalculated: boolean, trueSizedDimensions: boolean[], name: *}} an entry in this._trueSizedSurfaceInfo\n     * @private\n     */\n    configureTrueSizedSurface(renderable) {\n        let trueSizedSurfaceInfo = {isUncalculated: true, trueSizedDimensions: [false, false]};\n\n        /* We assume both dimensions not to be truesized, they are set in this._resolveDecoratedSize */\n        this._trueSizedSurfaceInfo.set(renderable, trueSizedSurfaceInfo);\n        /* Need to set the size in order to get resize notifications */\n        renderable.size = [undefined, undefined];\n\n        renderable.on('resize', () => {\n            this._tryCalculateTrueSizedSurface(renderable);\n        });\n        renderable.on('deploy', () => {\n            if (!this._trueSizedSurfaceInfo.get(renderable).isUncalculated) {\n                this._tryCalculateTrueSizedSurface(renderable);\n            }\n        });\n\n        return trueSizedSurfaceInfo;\n    }\n\n    /**\n     * Gets the size used when displaying a renderable on the screen the last time the calculation was done.\n     * @param {Renderable/Name} renderableOrName The renderable or the name of the renderable of which you need the size\n     */\n    getResolvedSize(renderable) {\n        return this._resolvedSizesCache.get(renderable);\n    }\n\n    doTrueSizedBookkeeping() {\n        for (let [surface] of this._trueSizedSurfaceInfo) {\n            /* Encourage the surfaces to check if they have been resized, which could trigger the resize event */\n            surface._trueSizeCheck = true;\n        }\n    }\n\n    getSurfaceTrueSizedInfo(surface) {\n        return this._trueSizedSurfaceInfo.get(surface);\n    }\n}"
  },
  {
    "__docId__": 906,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SizeResolver",
    "memberof": "src/utils/view/SizeResolver.js",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver",
    "access": null,
    "export": true,
    "importPath": "./src/utils/view/SizeResolver.js",
    "importStyle": "{SizeResolver}",
    "description": "Used by the view to keep track of sizes. Emits events to communicate with the view to do certain actions",
    "lineNumber": 19,
    "interface": false,
    "extends": [
      "eventemitter3~EventEmitter"
    ]
  },
  {
    "__docId__": 907,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#constructor",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 908,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_resolvedSizesCache",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#_resolvedSizesCache",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 909,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_trueSizedSurfaceInfo",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#_trueSizedSurfaceInfo",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 910,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "settleDecoratedSize",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#settleDecoratedSize",
    "access": null,
    "description": "Determines the decorated size. If there is true sizing involved, then it will not return the resolved true size.\nInstead, this can be accessed through getResolvedSize()",
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Renderable"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable.",
        "description": "The renderable for which we need the size"
      },
      {
        "nullable": null,
        "types": [
          "Renderable"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableCounterpart.",
        "description": "The renderable counter-part (e.g. AnimationController, RenderNode, or ContainerSurface)."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context.",
        "description": "The context, with a specified size. The size can be set to NaN in order to return NaN"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "specifiedSize.",
        "description": "The size to use which is specified as a decorator"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 911,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resolveSingleSize",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#resolveSingleSize",
    "access": "private",
    "description": "Resolves a single dimension (i.e. x or y) size of a renderable.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number} The resulting size"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Number",
          "Boolean",
          "Object",
          "Undefined",
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableSize",
        "description": "Renderable's single dimension size."
      },
      {
        "nullable": null,
        "types": [
          "Array.Number"
        ],
        "spread": false,
        "optional": false,
        "name": "contextSize",
        "description": "The context size"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dimension",
        "description": "The dimension of the size that is being evaluated (e.g. 1 or 0)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "The resulting size"
    },
    "generator": false
  },
  {
    "__docId__": 912,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_resolveSingleTrueSizedRenderable",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#_resolveSingleTrueSizedRenderable",
    "access": "private",
    "description": "Resolves a true size to an actual size of a truesized renderable. size[dim] must be negative or true.",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Number} size[dim] will be returned with a non-truesized value"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Renderable"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": "the renderable"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "the size as specified"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "dim",
        "description": "the dimensions e.g. 0,1 that should be processed"
      },
      {
        "nullable": null,
        "types": [
          "Renderable"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableCounterpart.",
        "description": "The renderable counter-part (e.g. AnimationController, RenderNode, or ContainerSurface)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "size[dim] will be returned with a non-truesized value"
    },
    "generator": false
  },
  {
    "__docId__": 913,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isValueTrueSized",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#isValueTrueSized",
    "access": "private",
    "description": "Determines if the value is true sized",
    "lineNumber": 156,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True if the value is true sized"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the value is true sized"
    },
    "generator": false
  },
  {
    "__docId__": 914,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_specifyUndeterminedSingleHeight",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#_specifyUndeterminedSingleHeight",
    "access": null,
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "params": [
      {
        "name": "renderable",
        "types": [
          "*"
        ]
      },
      {
        "name": "size",
        "types": [
          "*"
        ]
      },
      {
        "name": "dim",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 915,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "containsUncalculatedSurfaces",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#containsUncalculatedSurfaces",
    "access": null,
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 916,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_tryCalculateTrueSizedSurface",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#_tryCalculateTrueSizedSurface",
    "access": "private",
    "description": "Calculates a surface size, if possible",
    "lineNumber": 181,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": ""
      }
    ],
    "generator": false
  },
  {
    "__docId__": 917,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "requestRecursiveReflow",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#requestRecursiveReflow",
    "access": null,
    "description": null,
    "lineNumber": 217,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 918,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "requestReflow",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#requestReflow",
    "access": null,
    "description": null,
    "lineNumber": 221,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 919,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "requestLayoutControllerReflow",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#requestLayoutControllerReflow",
    "access": null,
    "description": null,
    "lineNumber": 225,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 920,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "configureTrueSizedSurface",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#configureTrueSizedSurface",
    "access": "private",
    "description": "Sets up a true sized surface",
    "lineNumber": 235,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{{isUncalculated: boolean, trueSizedDimensions: boolean[], name: *}} an entry in this._trueSizedSurfaceInfo"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{isUncalculated: boolean, trueSizedDimensions: boolean[], name: *}"
      ],
      "spread": false,
      "description": "an entry in this._trueSizedSurfaceInfo"
    },
    "generator": false
  },
  {
    "__docId__": 921,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getResolvedSize",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#getResolvedSize",
    "access": null,
    "description": "Gets the size used when displaying a renderable on the screen the last time the calculation was done.",
    "lineNumber": 259,
    "params": [
      {
        "nullable": null,
        "types": [
          "Renderable/Name"
        ],
        "spread": false,
        "optional": false,
        "name": "renderableOrName",
        "description": "The renderable or the name of the renderable of which you need the size"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 922,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "doTrueSizedBookkeeping",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#doTrueSizedBookkeeping",
    "access": null,
    "description": null,
    "lineNumber": 263,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 923,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSurfaceTrueSizedInfo",
    "memberof": "src/utils/view/SizeResolver.js~SizeResolver",
    "longname": "src/utils/view/SizeResolver.js~SizeResolver#getSurfaceTrueSizedInfo",
    "access": null,
    "description": null,
    "lineNumber": 270,
    "undocument": true,
    "params": [
      {
        "name": "surface",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 924,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils/view/Utils.js",
    "memberof": null,
    "longname": "src/utils/view/Utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "/**\n * Created by lundfall on 01/09/16.\n */\n\nimport Surface                      from 'famous/core/Surface.js';\nimport ImageSurface                 from 'famous/surfaces/ImageSurface.js';\n\n\nexport class Utils {\n    static renderableIsSurface(renderable) {\n        return renderable instanceof Surface || renderable instanceof ImageSurface;\n    }\n\n    /**\n     * Returns tru if the object is not a class but still an object\n     * @param object\n     * @returns {boolean}\n     * @private\n     */\n    static isPlainObject(object) {\n        return typeof object == 'object' && object.constructor.name == 'Object';\n    }\n    \n    /**\n     * Adds to translations returns the result.\n     * @param translate1\n     * @param translate2\n     * @returns {Array}\n     */\n    static addTranslations (translate1, translate2){\n        return [translate1[0] + translate2[0], translate1[1] + translate2[1], translate1[2] + translate2[2]];\n\n    }\n    /**\n     * Returns true if the renderable is complex and its size can be determined. Returns false if it is a surface\n     * or something else that doesn't have a getSize function specified\n     * @param renderable\n     * @private\n     */\n    static renderableIsComposite(renderable) {\n        return renderable.getSize && !(Utils.renderableIsSurface(renderable));\n    }\n\n    /**\n     * Uses either console.warn() or console.log() to log a mildly serious issue, depending on the user agent's availability.\n     * @param {String|Object} message\n     * @returns {void}\n     * @private\n     */\n    static warn(message) {\n        if (console.warn) {\n            console.warn(message);\n        } else {\n            console.log(message);\n        }\n    }\n\n    /**\n     * Specifying origin for true sized renderables doesn't work. Therefore we do a quick fix to adjust the\n     * translation according to the current faulty behaviour of famous.\n     * @param {Renderable}renderable The renderable of which we should correct\n     * @param {Array|Number} size  The size of this renderable\n     * @param {Array|Number} origin The origin\n     * @param {Array|Number} translate The current translation\n     * @param {SizeResolver} A size resolver that is keeping bookkeeping of the renderable\n     * @returns {*[]} The new translation taking this the current famous implementation into account\n     * @private\n     */\n    static adjustPlacementForTrueSize(renderable, size, origin, translate, sizeResolver) {\n        let newTranslation = [translate[0], translate[1], translate[2]];\n        for (let i = 0; i < 2; i++) {\n            if (size[i] === true && origin[i] !== 0) {\n                /* Because the size is set to true, it is interpreted as 1 by famous. We have to add 1 pixel\n                 *  to make up for this.\n                 */\n                newTranslation[i] -= (sizeResolver.getResolvedSize(renderable)[i] * origin[i] - 1);\n            }\n        }\n        return newTranslation;\n    }\n    \n    static getRenderableGroupName(renderable) {\n        let {decorations} = renderable;\n\n        if (!!decorations.dock) {\n            /* 'filled' is a special subset of 'docked' renderables, that need to be rendered after the normal 'docked' renderables are rendered. */\n            return decorations.dock.dockMethod === 'fill' ? 'filled' : 'docked';\n        } else if (!!decorations.fullSize) {\n            return 'fullSize';\n        } else if (decorations.size || decorations.origin || decorations.align || decorations.translate) {\n            return 'traditional';\n        } else {\n            /* This occurs e.g. when a renderable is only marked @renderable, and its parent view has a @layout.custom decorator to define its context. */\n            return 'ignored';\n        }\n    }\n}\n"
  },
  {
    "__docId__": 925,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Utils",
    "memberof": "src/utils/view/Utils.js",
    "longname": "src/utils/view/Utils.js~Utils",
    "access": null,
    "export": true,
    "importPath": "./src/utils/view/Utils.js",
    "importStyle": "{Utils}",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 926,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "renderableIsSurface",
    "memberof": "src/utils/view/Utils.js~Utils",
    "longname": "src/utils/view/Utils.js~Utils.renderableIsSurface",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "params": [
      {
        "name": "renderable",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 927,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "isPlainObject",
    "memberof": "src/utils/view/Utils.js~Utils",
    "longname": "src/utils/view/Utils.js~Utils.isPlainObject",
    "access": "private",
    "description": "Returns tru if the object is not a class but still an object",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 928,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "addTranslations",
    "memberof": "src/utils/view/Utils.js~Utils",
    "longname": "src/utils/view/Utils.js~Utils.addTranslations",
    "access": null,
    "description": "Adds to translations returns the result.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Array}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "translate1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "translate2",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 929,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "renderableIsComposite",
    "memberof": "src/utils/view/Utils.js~Utils",
    "longname": "src/utils/view/Utils.js~Utils.renderableIsComposite",
    "access": "private",
    "description": "Returns true if the renderable is complex and its size can be determined. Returns false if it is a surface\nor something else that doesn't have a getSize function specified",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "renderable",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 930,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "warn",
    "memberof": "src/utils/view/Utils.js~Utils",
    "longname": "src/utils/view/Utils.js~Utils.warn",
    "access": "private",
    "description": "Uses either console.warn() or console.log() to log a mildly serious issue, depending on the user agent's availability.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 931,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "adjustPlacementForTrueSize",
    "memberof": "src/utils/view/Utils.js~Utils",
    "longname": "src/utils/view/Utils.js~Utils.adjustPlacementForTrueSize",
    "access": "private",
    "description": "Specifying origin for true sized renderables doesn't work. Therefore we do a quick fix to adjust the\ntranslation according to the current faulty behaviour of famous.",
    "lineNumber": 69,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{*[]} The new translation taking this the current famous implementation into account"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "{Renderable}renderable",
        "description": "The renderable of which we should correct"
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "The size of this renderable"
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "origin",
        "description": "The origin"
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "translate",
        "description": "The current translation"
      },
      {
        "nullable": null,
        "types": [
          "SizeResolver"
        ],
        "spread": false,
        "optional": false,
        "name": "A",
        "description": "size resolver that is keeping bookkeeping of the renderable"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*[]"
      ],
      "spread": false,
      "description": "The new translation taking this the current famous implementation into account"
    },
    "generator": false
  },
  {
    "__docId__": 932,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getRenderableGroupName",
    "memberof": "src/utils/view/Utils.js~Utils",
    "longname": "src/utils/view/Utils.js~Utils.getRenderableGroupName",
    "access": null,
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [
      {
        "name": "renderable",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 934,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 935,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 936,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 937,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 938,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 939,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 940,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 941,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 942,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 943,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 944,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 945,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 946,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 947,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 948,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 949,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 950,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 951,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 952,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 953,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 954,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 955,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 956,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 957,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 958,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 959,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 960,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 961,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 962,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 963,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 964,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 965,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 966,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 967,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 968,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 969,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 970,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 971,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 972,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 973,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 974,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 975,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 976,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 977,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 978,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 979,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 980,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 982,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 983,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 984,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 985,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 986,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 987,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 988,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 989,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  }
]